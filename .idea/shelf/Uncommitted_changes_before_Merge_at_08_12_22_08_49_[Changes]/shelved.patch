Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.sign_up.info_kontak\n\ndata class InfoKontakState(\n    var nama: String = \"\",\n    var noWa : String = \"\",\n    var email: String = \"\",\n    var password: String = \"\",\n    var confPassword: String = \"\",\n    var isValid: Boolean = false,\n    var regId : String = \"\"\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakState.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakState.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakState.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakState.kt	(date 1670408560905)
@@ -7,5 +7,7 @@
     var password: String = "",
     var confPassword: String = "",
     var isValid: Boolean = false,
-    var regId : String = ""
+    var regId : String = "",
+    var isValidPass : Boolean = true,
+    var passMsg : String = ""
 )
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/utils/extension/ViewExt.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.utils.extension\n\nimport android.app.Activity\nimport android.content.Context\nimport android.util.Patterns\nimport android.util.TypedValue\nimport android.view.View\nimport android.view.inputmethod.InputMethodManager\nimport android.widget.EditText\nimport android.widget.ImageView\nimport androidx.annotation.AttrRes\nimport androidx.annotation.ColorInt\nimport androidx.appcompat.widget.SearchView\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.paging.CombinedLoadStates\nimport androidx.paging.LoadState\nimport androidx.paging.PagingDataAdapter\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.utils.NumberFormatWatcher\nimport java.text.DecimalFormatSymbols\nimport java.util.*\n\n/**\n * Created by aldi on 01/03/22.\n */\n\nfun View.visible(){\n    visibility = View.VISIBLE\n}\n\nfun View.gone() {\n    visibility = View.GONE\n}\n\nfun View.invisible() {\n    visibility = View.INVISIBLE\n}\n\nfun <T> List<T>.mapButReplace(targetItem: T, newItem: T) = map {\n    if (it == targetItem) {\n        newItem\n    } else {\n        it\n    }\n}\n\n@ColorInt\nfun Context.getColorFromAttr(\n    @AttrRes attrColor: Int,\n    typedValue: TypedValue = TypedValue(),\n    resolveRefs: Boolean = true\n): Int {\n    theme.resolveAttribute(attrColor, typedValue, resolveRefs)\n    return typedValue.data\n}\n\nfun CombinedLoadStates.decideOnState(\n    adapter : PagingDataAdapter<Any, RecyclerView.ViewHolder>,\n    showLoading: (Boolean) -> Unit,\n    showEmptyState: (Boolean) -> Unit,\n    showError: (String) -> Unit\n) {\n    showLoading(refresh is LoadState.Loading)\n\n    showEmptyState(\n        source.append is LoadState.NotLoading\n                && source.append.endOfPaginationReached\n                && adapter.itemCount == 0\n    )\n\n    val errorState = source.append as? LoadState.Error\n        ?: source.prepend as? LoadState.Error\n        ?: source.refresh as? LoadState.Error\n        ?: append as? LoadState.Error\n        ?: prepend as? LoadState.Error\n        ?: refresh as? LoadState.Error\n\n    errorState?.let { showError(it.error.toString()) }\n}\n\nfun EditText.addNumberFormatChange(){\n    addTextChangedListener(NumberFormatWatcher(this))\n}\n\nfun String.removeSymbol() : String{\n    val sep = DecimalFormatSymbols(Locale.getDefault()).groupingSeparator\n    val re = Regex(\"[Rp$sep %]\")\n    return if(this.isNotEmpty()) re.replace(this, \"\").trim() else \"\"\n}\n\nfun SearchView.setSearchViewStyle(context: Context, colorInt: Int) {\n    setIconifiedByDefault(false)\n    val editText = findViewById<EditText>(androidx.appcompat.R.id.search_src_text)\n    val imageIcon = findViewById<ImageView>(androidx.appcompat.R.id.search_mag_icon)\n    val imageClose = findViewById<ImageView>(androidx.appcompat.R.id.search_close_btn)\n    val home = findViewById<ImageView>(androidx.appcompat.R.id.home)\n    imageIcon.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_search))\n    imageIcon.setColorFilter(ContextCompat.getColor(context, colorInt))\n//    home.setColorFilter(ContextCompat.getColor(context, colorInt))\n    imageClose.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_close))\n    imageClose.setColorFilter(ContextCompat.getColor(context, colorInt))\n    editText.setTextColor(ContextCompat.getColor(context, colorInt))\n    editText.setHintTextColor(ContextCompat.getColor(context, colorInt))\n}\n\nfun Fragment.hideKeyboard() {\n    view?.let { activity?.hideKeyboard(it) }\n}\n\nfun Activity.hideKeyboard() {\n    hideKeyboard(currentFocus ?: View(this))\n}\n\nfun Context.hideKeyboard(view: View) {\n    val im = getSystemService(Activity.INPUT_METHOD_SERVICE) as InputMethodManager\n    im.hideSoftInputFromWindow(view.windowToken, 0)\n}\n\nfun String.isContainsUpperCase() : Boolean {\n    return contains(Regex(\"[A-Z]\"))\n}\n\nfun String.isContainsNumber() : Boolean {\n    return contains(Regex(\"[0-9]\"))\n}\n\nfun String.isValidEmail() : Boolean {\n    val patterns = Patterns.EMAIL_ADDRESS\n    return patterns.matcher(this).matches()\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/utils/extension/ViewExt.kt b/app/src/main/java/com/bits/bee/bpmc/utils/extension/ViewExt.kt
--- a/app/src/main/java/com/bits/bee/bpmc/utils/extension/ViewExt.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/utils/extension/ViewExt.kt	(date 1670407541419)
@@ -122,6 +122,10 @@
     return contains(Regex("[A-Z]"))
 }
 
+fun String.isContainsLowerCase() : Boolean {
+    return contains(Regex("[a-z]"))
+}
+
 fun String.isContainsNumber() : Boolean {
     return contains(Regex("[0-9]"))
 }
@@ -131,4 +135,8 @@
     return patterns.matcher(this).matches()
 }
 
+fun String.replaceNumberWithStars() : String {
+    return this.replace(Regex("[0-9]"), "*")
+}
+
 
Index: app/src/main/res/layout/fragment_info_kontak.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"@dimen/size0\"\n        app:layout_constraintBottom_toTopOf=\"@+id/btnLanjut\"\n        app:layout_constraintTop_toTopOf=\"parent\">\n\n        <androidx.constraintlayout.widget.ConstraintLayout\n            android:layout_width=\"match_parent\"\n            android:padding=\"@dimen/size24\"\n            android:layout_height=\"wrap_content\">\n\n            <TextView\n                android:id=\"@+id/textView2\"\n                style=\"@style/TextHeader\"\n                android:layout_width=\"@dimen/size0\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/informasi_kontak\"\n                android:textSize=\"@dimen/default_text_header_size\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"parent\" />\n\n            <TextView\n                android:id=\"@+id/textView3\"\n                android:layout_width=\"@dimen/size0\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"@dimen/size6\"\n                android:text=\"@string/input_data_diri\"\n                android:textColor=\"@color/dark_gray\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView2\" />\n\n            <TextView\n                android:id=\"@+id/textView4\"\n                style=\"@style/TextHeader\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"@dimen/size24\"\n                android:text=\"@string/nama\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView3\" />\n\n            <com.google.android.material.textfield.TextInputLayout\n                android:id=\"@+id/tilNama\"\n                android:layout_width=\"@dimen/size0\"\n                android:layout_height=\"wrap_content\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                style=\"@style/CustomTextInputLayout\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView4\">\n\n                <EditText\n                    android:id=\"@+id/etNama\"\n                    style=\"@style/CustomEditTextLayout\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:imeOptions=\"actionNext\"\n                    android:maxLines=\"1\"\n                    android:layout_marginTop=\"@dimen/size6\"\n                    android:hint=\"@string/cth_budi\" />\n\n            </com.google.android.material.textfield.TextInputLayout>\n\n            <TextView\n                android:id=\"@+id/textView5\"\n                style=\"@style/TextHeader\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"@dimen/size24\"\n                android:text=\"@string/no_wa\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/tilNama\" />\n\n            <com.google.android.material.textfield.TextInputLayout\n                android:id=\"@+id/tilNoWa\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                style=\"@style/CustomTextInputLayout\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView5\" >\n\n                <EditText\n                    android:id=\"@+id/etNo_wa\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginTop=\"@dimen/size6\"\n                    style=\"@style/CustomEditTextLayout\"\n                    android:hint=\"@string/cth_081234567890\"\n                    android:imeOptions=\"actionNext\"\n                    android:inputType=\"phone\"\n                    app:layout_constraintEnd_toEndOf=\"parent\"\n                    app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                    app:layout_constraintTop_toBottomOf=\"@+id/textView5\" />\n\n            </com.google.android.material.textfield.TextInputLayout>\n\n            <TextView\n                android:id=\"@+id/textView6\"\n                style=\"@style/TextHeader\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"@dimen/size24\"\n                android:text=\"@string/email\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/tilNoWa\" />\n\n            <com.google.android.material.textfield.TextInputLayout\n                android:id=\"@+id/tilEmail\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                style=\"@style/CustomTextInputLayout\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView6\" >\n\n                <EditText\n                    android:id=\"@+id/etEmail\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginTop=\"@dimen/size6\"\n                    android:imeOptions=\"actionNext\"\n                    android:hint=\"@string/cth_budi_email_com\"\n                    style=\"@style/CustomEditTextLayout\"\n                    android:inputType=\"textEmailAddress\"\n                    app:layout_constraintEnd_toEndOf=\"parent\"\n                    app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                    app:layout_constraintTop_toBottomOf=\"@+id/textView6\" />\n\n            </com.google.android.material.textfield.TextInputLayout>\n\n            <TextView\n                android:id=\"@+id/textView7\"\n                style=\"@style/TextHeader\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"@dimen/size24\"\n                android:text=\"@string/password\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/tilEmail\" />\n\n            <com.google.android.material.textfield.TextInputLayout\n                android:id=\"@+id/tilPassword\"\n                android:layout_width=\"@dimen/size0\"\n                style=\"@style/CustomTextInputLayout\"\n                android:layout_height=\"wrap_content\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView7\"\n                app:passwordToggleEnabled=\"true\">\n\n                <EditText\n                    android:id=\"@+id/etPassword\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:hint=\"@string/min_8_char_pass\"\n                    style=\"@style/CustomEditTextLayout\"\n                    android:imeOptions=\"actionNext\"\n                    android:inputType=\"textPassword\" />\n\n            </com.google.android.material.textfield.TextInputLayout>\n\n            <LinearLayout\n                android:id=\"@+id/linearLayout14\"\n                android:layout_width=\"@dimen/size0\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                app:layout_constraintEnd_toEndOf=\"@+id/tilPassword\"\n                app:layout_constraintStart_toStartOf=\"@+id/tilPassword\"\n                app:layout_constraintTop_toBottomOf=\"@+id/tilPassword\">\n\n                <TextView\n                    android:textColor=\"@color/red\"\n                    android:textSize=\"@dimen/font12\"\n                    android:layout_marginTop=\"@dimen/size4\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"Password harus memenuhi syarat dibawah ini :\"/>\n\n                <TextView\n                    android:id=\"@+id/tvErrorKarakter\"\n                    android:layout_width=\"match_parent\"\n                    android:textSize=\"@dimen/font12\"\n                    android:layout_marginTop=\"@dimen/size8\"\n                    android:layout_height=\"wrap_content\"\n                    android:drawableStart=\"@drawable/ic_close_red\"\n                    android:drawablePadding=\"@dimen/size16\"\n                    android:text=\"Lebih dari 8 Karakter\" />\n\n                <TextView\n                    android:id=\"@+id/tvErrorCase\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:textSize=\"@dimen/font12\"\n                    android:drawableStart=\"@drawable/ic_close_red\"\n                    android:drawablePadding=\"@dimen/size16\"\n                    android:text=\"Huruf besar dan kecil\" />\n\n                <TextView\n                    android:id=\"@+id/tvErrorNumber\"\n                    android:layout_width=\"match_parent\"\n                    android:textSize=\"@dimen/font12\"\n                    android:layout_height=\"wrap_content\"\n                    android:drawableStart=\"@drawable/ic_close_red\"\n                    android:drawablePadding=\"@dimen/size16\"\n                    android:text=\"Mempunyai karakter angka\" />\n\n            </LinearLayout>\n\n            <TextView\n                android:id=\"@+id/textView8\"\n                style=\"@style/TextHeader\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/conf_pass\"\n                android:layout_marginTop=\"@dimen/size24\"\n                app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n                app:layout_constraintTop_toBottomOf=\"@+id/linearLayout14\" />\n\n            <com.google.android.material.textfield.TextInputLayout\n                android:id=\"@+id/tilconf_Password\"\n                android:layout_width=\"@dimen/size0\"\n                android:layout_height=\"wrap_content\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                style=\"@style/CustomTextInputLayout\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView8\"\n                app:passwordToggleEnabled=\"true\">\n\n                <EditText\n                    android:id=\"@+id/etconf_Password\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:hint=\"@string/ulangi_pass\"\n                    style=\"@style/CustomEditTextLayout\"\n                    android:imeOptions=\"actionDone\"\n                    android:inputType=\"textPassword\" />\n\n            </com.google.android.material.textfield.TextInputLayout>\n\n        </androidx.constraintlayout.widget.ConstraintLayout>\n\n    </ScrollView>\n\n    <Button\n        android:id=\"@+id/btnLanjut\"\n        android:background=\"@drawable/btn_rect_primary\"\n        android:layout_width=\"@dimen/size0\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/btn_lanjut\"\n        android:layout_margin=\"@dimen/size24\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_info_kontak.xml b/app/src/main/res/layout/fragment_info_kontak.xml
--- a/app/src/main/res/layout/fragment_info_kontak.xml	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/res/layout/fragment_info_kontak.xml	(date 1670405670177)
@@ -167,7 +167,7 @@
             </com.google.android.material.textfield.TextInputLayout>
 
             <LinearLayout
-                android:id="@+id/linearLayout14"
+                android:id="@+id/llPassword"
                 android:layout_width="@dimen/size0"
                 android:layout_height="wrap_content"
                 android:orientation="vertical"
@@ -176,7 +176,7 @@
                 app:layout_constraintTop_toBottomOf="@+id/tilPassword">
 
                 <TextView
-                    android:textColor="@color/red"
+                    android:textColor="@color/maroon"
                     android:textSize="@dimen/font12"
                     android:layout_marginTop="@dimen/size4"
                     android:layout_width="match_parent"
@@ -184,32 +184,44 @@
                     android:text="Password harus memenuhi syarat dibawah ini :"/>
 
                 <TextView
-                    android:id="@+id/tvErrorKarakter"
+                    android:id="@+id/tvErrorNumber"
                     android:layout_width="match_parent"
                     android:textSize="@dimen/font12"
+                    android:layout_height="wrap_content"
                     android:layout_marginTop="@dimen/size8"
+                    android:drawableStart="@drawable/ic_circle_close_red"
+                    android:drawablePadding="@dimen/size16"
+                    android:text="@string/mengandung_min_1_angka" />
+
+                <TextView
+                    android:id="@+id/tvErrorUpperCase"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
-                    android:drawableStart="@drawable/ic_close_red"
+                    android:textSize="@dimen/font12"
+                    android:layout_marginTop="@dimen/size2"
+                    android:drawableStart="@drawable/ic_circle_close_red"
                     android:drawablePadding="@dimen/size16"
-                    android:text="Lebih dari 8 Karakter" />
+                    android:text="@string/mengandung_min_1_huruf_kapital" />
 
                 <TextView
-                    android:id="@+id/tvErrorCase"
+                    android:id="@+id/tvErrorLowerCase"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:textSize="@dimen/font12"
-                    android:drawableStart="@drawable/ic_close_red"
+                    android:layout_marginTop="@dimen/size2"
+                    android:drawableStart="@drawable/ic_circle_close_red"
                     android:drawablePadding="@dimen/size16"
-                    android:text="Huruf besar dan kecil" />
+                    android:text="@string/mengandung_huruf_kecil" />
 
                 <TextView
-                    android:id="@+id/tvErrorNumber"
+                    android:id="@+id/tvErrorKarakter"
                     android:layout_width="match_parent"
                     android:textSize="@dimen/font12"
+                    android:layout_marginTop="@dimen/size2"
                     android:layout_height="wrap_content"
-                    android:drawableStart="@drawable/ic_close_red"
+                    android:drawableStart="@drawable/ic_circle_close_red"
                     android:drawablePadding="@dimen/size16"
-                    android:text="Mempunyai karakter angka" />
+                    android:text="Minimal 8 karakter" />
 
             </LinearLayout>
 
@@ -221,7 +233,7 @@
                 android:text="@string/conf_pass"
                 android:layout_marginTop="@dimen/size24"
                 app:layout_constraintStart_toStartOf="@+id/textView2"
-                app:layout_constraintTop_toBottomOf="@+id/linearLayout14" />
+                app:layout_constraintTop_toBottomOf="@+id/llPassword" />
 
             <com.google.android.material.textfield.TextInputLayout
                 android:id="@+id/tilconf_Password"
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.sign_up.info_kontak\n\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MediatorLiveData\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.data.data_source.remote.response.SignUpResponse\nimport com.bits.bee.bpmc.domain.model.SignUp\nimport com.bits.bee.bpmc.domain.usecase.signup.PostSignUpUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.Resource\nimport com.bits.bee.bpmc.utils.extension.isContainsNumber\nimport com.bits.bee.bpmc.utils.extension.isContainsUpperCase\nimport com.bits.bee.bpmc.utils.extension.isValidEmail\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass InfoKontakViewModel @Inject constructor(\n    private val postSignUpUseCase: PostSignUpUseCase\n): BaseViewModel<InfoKontakState, InfoKontakViewModel.UIEvent>() {\n\n    init {\n        state = InfoKontakState()\n    }\n\n    private var registerResponse: MediatorLiveData<Resource<SignUpResponse>> = MediatorLiveData()\n    fun observeSignUpResponse() = registerResponse as LiveData<Resource<SignUpResponse>>\n\n    suspend fun postSignUp() : Flow<Resource<SignUpResponse>> {\n        val signUp = SignUp(state.nama, state.noWa, state.email, state.password)\n         return postSignUpUseCase(signUp)\n    }\n\n    fun onPasswordChange(string : String) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                password = string\n            )\n        )\n    }\n\n    fun validateInput() = viewModelScope.launch {\n        updateState(\n            state.copy(isValid = state.nama.isNotEmpty()\n                    && (state.noWa.isNotEmpty() && state.noWa.length >= 11)\n                    && (state.email.isNotEmpty() && state.email.isValidEmail())\n                    && state.password.isNotEmpty()\n                    && state.confPassword.isNotEmpty()\n                    && state.password == state.confPassword\n                    && state.password.length > 7\n                    && state.password.isContainsUpperCase()\n                    && state.password.isContainsNumber()\n            )\n        )\n    }\n\n    fun onClickLanjut() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestInfoKontak)\n    }\n\n    fun onSuccesLanjut() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToOtp)\n    }\n\n    sealed class UIEvent {\n        object RequestInfoKontak : UIEvent()\n        object NavigateToOtp : UIEvent()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakViewModel.kt	(date 1670463892343)
@@ -2,17 +2,18 @@
 
 import androidx.lifecycle.LiveData
 import androidx.lifecycle.MediatorLiveData
+import androidx.lifecycle.asLiveData
 import androidx.lifecycle.viewModelScope
 import com.bits.bee.bpmc.data.data_source.remote.response.SignUpResponse
 import com.bits.bee.bpmc.domain.model.SignUp
 import com.bits.bee.bpmc.domain.usecase.signup.PostSignUpUseCase
 import com.bits.bee.bpmc.presentation.base.BaseViewModel
 import com.bits.bee.bpmc.utils.Resource
+import com.bits.bee.bpmc.utils.extension.isContainsLowerCase
 import com.bits.bee.bpmc.utils.extension.isContainsNumber
 import com.bits.bee.bpmc.utils.extension.isContainsUpperCase
 import com.bits.bee.bpmc.utils.extension.isValidEmail
 import dagger.hilt.android.lifecycle.HiltViewModel
-import kotlinx.coroutines.flow.Flow
 import kotlinx.coroutines.launch
 import javax.inject.Inject
 
@@ -28,9 +29,23 @@
     private var registerResponse: MediatorLiveData<Resource<SignUpResponse>> = MediatorLiveData()
     fun observeSignUpResponse() = registerResponse as LiveData<Resource<SignUpResponse>>
 
-    suspend fun postSignUp() : Flow<Resource<SignUpResponse>> {
-        val signUp = SignUp(state.nama, state.noWa, state.email, state.password)
-         return postSignUpUseCase(signUp)
+    fun onClickSignUp() = viewModelScope.launch{
+        state.isValidPass = false
+        validatePass()
+        if(state.isValid && state.isValidPass) {
+            val signUp = SignUp(state.nama, state.noWa, state.email, state.password)
+            val source = postSignUpUseCase(signUp).asLiveData()
+            registerResponse.addSource(source) {
+                if (it != null) {
+                    registerResponse.value = it
+                    if (it.status !== Resource.Status.LOADING) {
+                        registerResponse.removeSource(source)
+                    }
+                } else {
+                    registerResponse.removeSource(source)
+                }
+            }
+        }
     }
 
     fun onPasswordChange(string : String) = viewModelScope.launch {
@@ -41,18 +56,25 @@
         )
     }
 
-    fun validateInput() = viewModelScope.launch {
+    fun validate() {
         updateState(
             state.copy(isValid = state.nama.isNotEmpty()
                     && (state.noWa.isNotEmpty() && state.noWa.length >= 11)
                     && (state.email.isNotEmpty() && state.email.isValidEmail())
                     && state.password.isNotEmpty()
                     && state.confPassword.isNotEmpty()
-                    && state.password == state.confPassword
-                    && state.password.length > 7
-                    && state.password.isContainsUpperCase()
-                    && state.password.isContainsNumber()
-            )
+            )
+        )
+    }
+
+    fun validatePass() {
+        val valid = state.password == state.confPassword
+                && state.password.length > 7
+                && state.password.isContainsUpperCase()
+                && state.password.isContainsLowerCase()
+                && state.password.isContainsNumber()
+        updateState(
+            state.copy(isValidPass = valid)
         )
     }
 
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.sign_up.info_kontak\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.core.content.ContextCompat\nimport androidx.core.widget.addTextChangedListener\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentInfoKontakBinding\nimport com.bits.bee.bpmc.domain.model.SignUp\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.LoadingDialogHelper\nimport com.bits.bee.bpmc.presentation.dialog.NoInternetDialogBuilder\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.Resource\nimport com.bits.bee.bpmc.utils.extension.isContainsNumber\nimport com.bits.bee.bpmc.utils.extension.isContainsUpperCase\nimport com.bits.bee.bpmc.utils.extension.isValidEmail\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\n\n@AndroidEntryPoint\nclass InfoKontakFragment constructor(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentInfoKontakBinding = FragmentInfoKontakBinding::inflate\n): BaseFragment<FragmentInfoKontakBinding>() {\n\n    private val viewModel: InfoKontakViewModel by viewModels()\n    private lateinit var dialog: LoadingDialogHelper\n\n\n    override fun initComponents() {\n        dialog = LoadingDialogHelper(requireContext())\n        binding.apply {\n            viewLifecycleOwner.lifecycleScope.launch {\n                viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                    viewModel.event.collect { event ->\n                        when(event){\n                            InfoKontakViewModel.UIEvent.NavigateToOtp -> {\n                                val signUp = SignUp(viewModel.state.nama,\n                                    viewModel.state.noWa,\n                                    viewModel.state.email,\n                                    viewModel.state.password,\n                                    viewModel.state.confPassword,\n                                    regId = viewModel.state.regId.toInt())\n\n                                val action = InfoKontakFragmentDirections.actionInfoKontakFragmentToInfoBisnisFragment(signUp)\n                                findNavController().navigate(action)\n                            }\n                            InfoKontakViewModel.UIEvent.RequestInfoKontak -> {\n\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            etNama.addTextChangedListener {\n                viewModel.state.nama = etNama.text.toString().trim()\n            }\n            etNoWa.addTextChangedListener {\n                val nowa = etNoWa.text.toString().trim()\n                viewModel.state.noWa = nowa\n                viewModel.validateInput()\n                if(nowa.isNotEmpty() && nowa.length <= 11) {\n                    tilNoWa.isErrorEnabled = true\n                    tilNoWa.error = \"No. Whatsapp harus lebih dari 11 karakter\"\n                }else {\n                    tilNoWa.isErrorEnabled = false\n                }\n            }\n            etEmail.addTextChangedListener {\n                val email =  etEmail.text.toString().trim()\n                viewModel.state.email = email\n                viewModel.validateInput()\n                if(email.isNotEmpty() && !email.isValidEmail()) {\n                    tilEmail.isErrorEnabled = true\n                    tilEmail.error = \"Email tidak valid\"\n                }else {\n                    tilEmail.isErrorEnabled = false\n                }\n            }\n            etPassword.addTextChangedListener {\n                viewModel.onPasswordChange(etPassword.text.toString().trim())\n                viewModel.validateInput()\n            }\n            etconfPassword.addTextChangedListener {\n                val pass = etconfPassword.text.toString().trim()\n                viewModel.state.confPassword = pass\n                viewModel.validateInput()\n                if(pass.isNotEmpty() && pass != viewModel.state.password) {\n                    tilconfPassword.isErrorEnabled = true\n                    tilconfPassword.error = \"Konfirmasi password tidak sama\"\n                }else {\n                    tilconfPassword.isErrorEnabled = false\n                }\n            }\n            btnLanjut.setOnClickListener {\n                onClickSignUp()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.viewStates().collect {\n                    it?.let {\n                        binding.apply {\n                            val icError = ContextCompat.getDrawable(requireActivity(), R.drawable.ic_close_red)\n                            val icSuccess = ContextCompat.getDrawable(requireActivity(), R.drawable.ic_baseline_check)\n\n                            val errorKarakter = if(it.password.length > 7) icSuccess else icError\n                            val errorCase = if(it.password.isContainsUpperCase()) icSuccess else icError\n                            val errorNumber = if(it.password.isContainsNumber()) icSuccess else icError\n\n                            tvErrorKarakter.setCompoundDrawablesWithIntrinsicBounds(errorKarakter, null, null, null)\n                            tvErrorCase.setCompoundDrawablesWithIntrinsicBounds(errorCase, null, null, null)\n                            tvErrorNumber.setCompoundDrawablesWithIntrinsicBounds(errorNumber, null, null, null)\n\n                            btnLanjut.apply {\n                                background = ContextCompat.getDrawable(requireContext(), when(it.isValid){\n                                    true -> R.drawable.btn_rect_primary\n                                    false -> R.drawable.btn_rect_disable\n                                })\n                                isEnabled = it.isValid\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    private fun onClickSignUp() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewModel.postSignUp().collect{\n                when (it.status) {\n                    Resource.Status.LOADING -> {\n                        dialog.show()\n                    }\n                    Resource.Status.SUCCESS -> {\n                        dialog.hide()\n                        it.data?.let { data ->\n                            if (data.status) {\n                                val strRegId = data.responses\n                                viewModel.state.regId = strRegId\n                                strRegId.let {\n                                    BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_regid), strRegId)\n                                    BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_wa), viewModel.state.noWa)\n                                    viewModel.onSuccesLanjut()\n                                }\n                            } else if(data.errorData.isNotEmpty()){\n                                for (data in data.errorData){\n                                    data.email?.let {\n                                        binding.tilEmail.apply {\n                                            isErrorEnabled = true\n                                            error = it.firstOrNull()\n                                        }\n                                    }\n                                    data.mobile?.let {\n                                        binding.tilNoWa.apply {\n                                            isErrorEnabled = true\n                                            error = it.firstOrNull()\n                                        }\n                                    }\n                                    data.username?.let {\n                                        binding.tilNama.apply {\n                                            isErrorEnabled = true\n                                            error = it.firstOrNull()\n                                        }\n                                    }\n                                }\n                            } else {\n\n                            }\n                        }\n                    }\n                    Resource.Status.ERROR -> {\n                        dialog.hide()\n                        Toast.makeText(requireContext(), \"Error : ${it.message}\", Toast.LENGTH_LONG)\n                            .show()\n                    }\n                    Resource.Status.NOINTERNET -> {\n                        dialog.hide()\n                        val dialog = NoInternetDialogBuilder({\n                            onClickSignUp()\n                        })\n                        dialog.show(parentFragmentManager, \"\")\n                    }\n                }\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/info_kontak/InfoKontakFragment.kt	(date 1670405670249)
@@ -4,6 +4,7 @@
 import android.view.ViewGroup
 import android.widget.Toast
 import androidx.core.content.ContextCompat
+import androidx.core.view.isVisible
 import androidx.core.widget.addTextChangedListener
 import androidx.fragment.app.viewModels
 import androidx.lifecycle.Lifecycle
@@ -18,6 +19,7 @@
 import com.bits.bee.bpmc.presentation.dialog.NoInternetDialogBuilder
 import com.bits.bee.bpmc.utils.BeePreferenceManager
 import com.bits.bee.bpmc.utils.Resource
+import com.bits.bee.bpmc.utils.extension.isContainsLowerCase
 import com.bits.bee.bpmc.utils.extension.isContainsNumber
 import com.bits.bee.bpmc.utils.extension.isContainsUpperCase
 import com.bits.bee.bpmc.utils.extension.isValidEmail
@@ -69,7 +71,7 @@
             etNoWa.addTextChangedListener {
                 val nowa = etNoWa.text.toString().trim()
                 viewModel.state.noWa = nowa
-                viewModel.validateInput()
+                viewModel.validate()
                 if(nowa.isNotEmpty() && nowa.length <= 11) {
                     tilNoWa.isErrorEnabled = true
                     tilNoWa.error = "No. Whatsapp harus lebih dari 11 karakter"
@@ -80,7 +82,7 @@
             etEmail.addTextChangedListener {
                 val email =  etEmail.text.toString().trim()
                 viewModel.state.email = email
-                viewModel.validateInput()
+                viewModel.validate()
                 if(email.isNotEmpty() && !email.isValidEmail()) {
                     tilEmail.isErrorEnabled = true
                     tilEmail.error = "Email tidak valid"
@@ -90,12 +92,12 @@
             }
             etPassword.addTextChangedListener {
                 viewModel.onPasswordChange(etPassword.text.toString().trim())
-                viewModel.validateInput()
+                viewModel.validate()
             }
             etconfPassword.addTextChangedListener {
                 val pass = etconfPassword.text.toString().trim()
                 viewModel.state.confPassword = pass
-                viewModel.validateInput()
+                viewModel.validate()
                 if(pass.isNotEmpty() && pass != viewModel.state.password) {
                     tilconfPassword.isErrorEnabled = true
                     tilconfPassword.error = "Konfirmasi password tidak sama"
@@ -104,7 +106,7 @@
                 }
             }
             btnLanjut.setOnClickListener {
-                onClickSignUp()
+                viewModel.onClickSignUp()
             }
         }
     }
@@ -115,15 +117,19 @@
                 viewModel.viewStates().collect {
                     it?.let {
                         binding.apply {
-                            val icError = ContextCompat.getDrawable(requireActivity(), R.drawable.ic_close_red)
-                            val icSuccess = ContextCompat.getDrawable(requireActivity(), R.drawable.ic_baseline_check)
+                            val icError = ContextCompat.getDrawable(requireActivity(), R.drawable.ic_circle_close_red)
+                            val icSuccess = ContextCompat.getDrawable(requireActivity(), R.drawable.ic_circle_check)
+
+                            llPassword.isVisible = !it.isValidPass
 
                             val errorKarakter = if(it.password.length > 7) icSuccess else icError
-                            val errorCase = if(it.password.isContainsUpperCase()) icSuccess else icError
+                            val errorLowerCase = if(it.password.isContainsLowerCase()) icSuccess else icError
+                            val errorUpperCase = if(it.password.isContainsUpperCase()) icSuccess else icError
                             val errorNumber = if(it.password.isContainsNumber()) icSuccess else icError
 
                             tvErrorKarakter.setCompoundDrawablesWithIntrinsicBounds(errorKarakter, null, null, null)
-                            tvErrorCase.setCompoundDrawablesWithIntrinsicBounds(errorCase, null, null, null)
+                            tvErrorLowerCase.setCompoundDrawablesWithIntrinsicBounds(errorLowerCase, null, null, null)
+                            tvErrorUpperCase.setCompoundDrawablesWithIntrinsicBounds(errorUpperCase, null, null, null)
                             tvErrorNumber.setCompoundDrawablesWithIntrinsicBounds(errorNumber, null, null, null)
 
                             btnLanjut.apply {
@@ -139,66 +145,62 @@
                 }
             }
         }
-    }
-
-    private fun onClickSignUp() {
-        viewLifecycleOwner.lifecycleScope.launch {
-            viewModel.postSignUp().collect{
-                when (it.status) {
-                    Resource.Status.LOADING -> {
-                        dialog.show()
-                    }
-                    Resource.Status.SUCCESS -> {
-                        dialog.hide()
-                        it.data?.let { data ->
-                            if (data.status) {
-                                val strRegId = data.responses
-                                viewModel.state.regId = strRegId
-                                strRegId.let {
-                                    BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_regid), strRegId)
-                                    BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_wa), viewModel.state.noWa)
-                                    viewModel.onSuccesLanjut()
-                                }
-                            } else if(data.errorData.isNotEmpty()){
-                                for (data in data.errorData){
-                                    data.email?.let {
-                                        binding.tilEmail.apply {
-                                            isErrorEnabled = true
-                                            error = it.firstOrNull()
-                                        }
-                                    }
-                                    data.mobile?.let {
-                                        binding.tilNoWa.apply {
-                                            isErrorEnabled = true
-                                            error = it.firstOrNull()
-                                        }
-                                    }
-                                    data.username?.let {
-                                        binding.tilNama.apply {
-                                            isErrorEnabled = true
-                                            error = it.firstOrNull()
-                                        }
-                                    }
-                                }
-                            } else {
+        viewModel.observeSignUpResponse().observe(viewLifecycleOwner){
+            when (it.status) {
+                Resource.Status.LOADING -> {
+                    dialog.show()
+                }
+                Resource.Status.SUCCESS -> {
+                    dialog.hide()
+                    it.data?.let { data ->
+                        if (data.status) {
+                            val strRegId = data.responses
+                            viewModel.state.regId = strRegId
+                            strRegId.let {
+                                BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_regid), strRegId)
+                                BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_wa), viewModel.state.noWa)
+                                viewModel.onSuccesLanjut()
+                            }
+                        } else if(data.errorData.isNotEmpty()){
+                            for (data in data.errorData){
+                                data.email?.let {
+                                    binding.tilEmail.apply {
+                                        isErrorEnabled = true
+                                        error = it.firstOrNull()
+                                    }
+                                }
+                                data.mobile?.let {
+                                    binding.tilNoWa.apply {
+                                        isErrorEnabled = true
+                                        error = it.firstOrNull()
+                                    }
+                                }
+                                data.username?.let {
+                                    binding.tilNama.apply {
+                                        isErrorEnabled = true
+                                        error = it.firstOrNull()
+                                    }
+                                }
+                            }
+                        } else {
 
-                            }
-                        }
-                    }
-                    Resource.Status.ERROR -> {
-                        dialog.hide()
-                        Toast.makeText(requireContext(), "Error : ${it.message}", Toast.LENGTH_LONG)
-                            .show()
-                    }
-                    Resource.Status.NOINTERNET -> {
-                        dialog.hide()
-                        val dialog = NoInternetDialogBuilder({
-                            onClickSignUp()
-                        })
-                        dialog.show(parentFragmentManager, "")
-                    }
+                        }
+                    }
+                }
+                Resource.Status.ERROR -> {
+                    dialog.hide()
+                    Toast.makeText(requireContext(), "Error : ${it.message}", Toast.LENGTH_LONG)
+                        .show()
+                }
+                Resource.Status.NOINTERNET -> {
+                    dialog.hide()
+                    val dialog = NoInternetDialogBuilder({
+                        viewModel.onClickSignUp()
+                    })
+                    dialog.show(parentFragmentManager, "")
                 }
             }
         }
     }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/domain/usecase/common/UpdateTotalPossesUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.domain.usecase.common\n\nimport com.bits.bee.bpmc.domain.repository.CashRepository\nimport com.bits.bee.bpmc.domain.repository.PossesRepository\nimport kotlinx.coroutines.flow.first\nimport java.math.BigDecimal\nimport java.math.BigInteger\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 20/07/22.\n */\nclass UpdateTotalPossesUseCase @Inject constructor(\n    private val possesRepository: PossesRepository,\n    private val cashRepository: CashRepository\n){\n\n    suspend operator fun invoke(amt : BigDecimal) {\n        val posses = possesRepository.getActivePosses().first()\n        posses?.let {\n            if(amt >= BigDecimal.ZERO){\n                posses.totIn = posses.totIn?.add(amt) ?: BigDecimal(BigInteger.ZERO).add(amt)\n            } else {\n                posses.totOut = posses.totOut?.subtract(amt) ?: BigDecimal(BigInteger.ZERO).subtract(amt)\n            }\n            posses.total = posses.total.add(amt)\n\n            possesRepository.updatePosses(posses)\n\n            val cash = cashRepository.getLastId().first()\n            cash!!.balance = posses.total\n\n            cashRepository.updateCash(cash)\n\n        } ?: throw Exception(\"\")\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/domain/usecase/common/UpdateTotalPossesUseCase.kt b/app/src/main/java/com/bits/bee/bpmc/domain/usecase/common/UpdateTotalPossesUseCase.kt
--- a/app/src/main/java/com/bits/bee/bpmc/domain/usecase/common/UpdateTotalPossesUseCase.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/domain/usecase/common/UpdateTotalPossesUseCase.kt	(date 1669972683346)
@@ -32,7 +32,7 @@
 
             cashRepository.updateCash(cash)
 
-        } ?: throw Exception("")
+        } ?: throw IllegalArgumentException("No posses active!")
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/cari_item/CariItemFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.pos.cari_item\n\nimport android.Manifest\nimport android.app.Activity.RESULT_OK\nimport android.content.Intent\nimport android.os.Bundle\nimport android.view.*\nimport android.widget.Toast\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.appcompat.widget.SearchView\nimport androidx.core.view.isVisible\nimport androidx.fragment.app.activityViewModels\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport androidx.paging.LoadState\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentCariItemBinding\nimport com.bits.bee.bpmc.domain.model.Item\nimport com.bits.bee.bpmc.domain.model.ItemWithUnit\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.ui.pos.MainViewModel\nimport com.bits.bee.bpmc.presentation.ui.pos.PosModeState\nimport com.bits.bee.bpmc.presentation.ui.pos.pos_item.ItemPosRetailAdapter\nimport com.bits.bee.bpmc.utils.PermissionUtils\nimport com.bits.bee.bpmc.utils.extension.gone\nimport com.bits.bee.bpmc.utils.extension.setSearchViewStyle\nimport com.google.gson.Gson\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\n\n/**\n * Created by aldi on 21/07/22.\n */\n@AndroidEntryPoint\nclass CariItemFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentCariItemBinding = FragmentCariItemBinding::inflate\n) : BaseFragment<FragmentCariItemBinding>() {\n\n    private val viewModel : CariItemViewModel by viewModels()\n\n    private val mViewModel : MainViewModel by activityViewModels()\n\n    private lateinit var itemAdapter : ItemPosCariAdapter\n    private lateinit var itemRetailPosAdapter: ItemPosRetailAdapter\n    private lateinit var searchView : SearchView\n\n    private val requestPermissionCamera = registerForActivityResult(ActivityResultContracts.RequestPermission()){ isGranted ->\n        if(!isGranted){\n            Toast.makeText(requireActivity(), \"Beberapa permission belum aktif!\", Toast.LENGTH_LONG).show()\n        }\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        viewModel.state.usePid = mViewModel.posModeState.value is PosModeState.RetailState\n        super.onViewCreated(view, savedInstanceState)\n    }\n\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n        inflater.inflate(R.menu.menu_search_scan, menu)\n        val searchItem = menu.findItem(R.id.menu_search)\n        menu.findItem(R.id.menu_scan).isVisible = mViewModel.posModeState.value == PosModeState.RetailState\n        searchView = searchItem.actionView as SearchView\n        searchView.queryHint = getString(R.string.cari_produk_min_3_karakter)\n        searchView.setSearchViewStyle(requireActivity(), R.color.white)\n        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {\n            override fun onQueryTextSubmit(query: String?): Boolean {\n                return true\n            }\n\n            override fun onQueryTextChange(newText: String?): Boolean {\n                viewModel.onSearch(newText ?: viewModel.currentQuery.value)\n                if(newText != null && newText.length < 3){\n                    binding.groupEmpty.gone()\n                    binding.rvList.gone()\n                }\n                return true\n            }\n        })\n        searchItem.setOnActionExpandListener(object : MenuItem.OnActionExpandListener{\n            override fun onMenuItemActionExpand(p0: MenuItem?): Boolean {\n                return true\n            }\n\n            override fun onMenuItemActionCollapse(p0: MenuItem?): Boolean {\n                findNavController().popBackStack()\n                return true\n            }\n\n        })\n\n        searchItem.expandActionView()\n\n        searchView.requestFocus()\n        findNavController().currentBackStackEntry?.savedStateHandle?.getLiveData<String>(\"scan\")?.observe(viewLifecycleOwner) {\n            viewModel.onSearch(it)\n            searchView.setQuery(it, true)\n            showSnackbar(it)\n        }\n        super.onCreateOptionsMenu(menu, inflater)\n    }\n\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when(item.itemId){\n            R.id.menu_scan -> {\n                if(PermissionUtils.checkPermissionIsGranted(requireActivity(), Manifest.permission.CAMERA)) {\n                    val action =\n                        CariItemFragmentDirections.actionCariItemFragmentToScannerFragment()\n                    findNavController().navigate(action)\n                } else {\n                    requestPermissionCamera.launch(Manifest.permission.CAMERA)\n                }\n            }\n        }\n        return super.onOptionsItemSelected(item)\n    }\n\n    override fun initComponents() {\n        setHasOptionsMenu(true)\n        binding.apply {\n            groupEmpty.gone()\n            rvList.gone()\n            itemAdapter = ItemPosCariAdapter(\n                onItemClicK = { item ->\n                    mViewModel.onAddDetail(ItemWithUnit(item))\n                },\n                onMinusClick = { item ->\n                    mViewModel.onMinusClick(item)\n                },\n                mViewModel.state.saledList\n            )\n            itemRetailPosAdapter = ItemPosRetailAdapter {\n                viewModel.onClickRetail(it)\n            }\n            rvList.apply {\n                adapter = if(mViewModel.posModeState.value is PosModeState.FnBState)\n                    itemAdapter\n                else\n                    itemRetailPosAdapter\n                layoutManager = LinearLayoutManager(requireActivity())\n            }\n\n\n        }\n    }\n\n    override fun subscribeListeners() {\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            mViewModel.activeBp.collect {\n                it?.let {\n                    viewModel.state.bp = it\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            mViewModel.activeChannel.collect {\n                it?.let {\n                    viewModel.state.channel = it\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            if(mViewModel.posModeState.value is PosModeState.FnBState) {\n                itemAdapter.loadStateFlow.collectLatest {\n                    if (it.append is LoadState.NotLoading && it.append.endOfPaginationReached) {\n                        binding.groupEmpty.isVisible = itemAdapter.itemCount == 0  && viewModel.currentQuery.value.length > 2\n                        binding.rvList.isVisible = itemAdapter.itemCount > 0 && viewModel.currentQuery.value.length > 2\n                    }\n                }\n            } else {\n                itemRetailPosAdapter.loadStateFlow.collectLatest {\n                    if (it.append is LoadState.NotLoading && it.append.endOfPaginationReached) {\n                        binding.groupEmpty.isVisible = itemRetailPosAdapter.itemCount == 0 && viewModel.currentQuery.value.length > 2\n                        binding.rvList.isVisible = itemRetailPosAdapter.itemCount > 0 && viewModel.currentQuery.value.length > 2\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                viewModel.searchItemFlow.collectLatest {\n                    if(mViewModel.posModeState.value is PosModeState.FnBState) {\n                        itemAdapter.submitData(it)\n                    } else {\n                        itemRetailPosAdapter.submitData(it)\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                mViewModel.viewStates().collect {\n                    it?.let {\n                        itemAdapter.submitSaledList(it.saledList)\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewModel.event.collect {\n                when(it){\n                    is CariItemViewModel.UIEvent.RequestItem -> {\n                        val action = if(it.item.usePid){\n                            CariItemFragmentDirections.actionCariItemFragmentToPilihPidFragment(\n                                item = it.item\n                            )\n                        } else {\n                            CariItemFragmentDirections.actionCariItemFragmentToEditItemDialog(\n                                item = it.item\n                            )\n                        }\n                        findNavController().navigate(action)\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (requestCode === 20) {\n            if (resultCode === RESULT_OK && android.R.attr.data != null) {\n                val code: String = \"\"\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/cari_item/CariItemFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/cari_item/CariItemFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/cari_item/CariItemFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/cari_item/CariItemFragment.kt	(date 1670387068951)
@@ -24,6 +24,7 @@
 import com.bits.bee.bpmc.presentation.base.BaseFragment
 import com.bits.bee.bpmc.presentation.ui.pos.MainViewModel
 import com.bits.bee.bpmc.presentation.ui.pos.PosModeState
+import com.bits.bee.bpmc.presentation.ui.pos.pos.PosFragmentDirections
 import com.bits.bee.bpmc.presentation.ui.pos.pos_item.ItemPosRetailAdapter
 import com.bits.bee.bpmc.utils.PermissionUtils
 import com.bits.bee.bpmc.utils.extension.gone
@@ -127,7 +128,7 @@
             rvList.gone()
             itemAdapter = ItemPosCariAdapter(
                 onItemClicK = { item ->
-                    mViewModel.onAddDetail(ItemWithUnit(item))
+                   onItemClick(item)
                 },
                 onMinusClick = { item ->
                     mViewModel.onMinusClick(item)
@@ -224,12 +225,12 @@
         }
     }
 
-    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
-        super.onActivityResult(requestCode, resultCode, data)
-        if (requestCode === 20) {
-            if (resultCode === RESULT_OK && android.R.attr.data != null) {
-                val code: String = ""
-            }
+    private fun onItemClick(item : Item) {
+        if(item.isVariant || item.isHaveAddOn) {
+            val action = CariItemFragmentDirections.actionCariItemFragmentToAddOnFragment(item, mViewModel.state.bp!!, mViewModel.state.bp!!.priceLvlId)
+            findNavController().navigate(action)
+        } else {
+            mViewModel.onAddDetail(ItemWithUnit(item))
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaledDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.data.data_source.local.dao\n\nimport androidx.paging.PagingSource\nimport androidx.room.Dao\nimport androidx.room.Query\nimport com.bits.bee.bpmc.data.data_source.local.base.BaseDao\nimport com.bits.bee.bpmc.data.data_source.local.model.ItemEntity\nimport com.bits.bee.bpmc.data.data_source.local.model.RankItemEntity\nimport com.bits.bee.bpmc.data.data_source.local.model.SaleEntity\nimport com.bits.bee.bpmc.data.data_source.local.model.SaledEntity\nimport java.math.BigDecimal\n\n/**\n * Created by aldi on 20/05/22.\n */\n@Dao\ninterface SaledDao : BaseDao<SaledEntity>{\n\n    @Query(\"SELECT * FROM saled WHERE sale_id = :id\")\n    fun getSaledList(id : Int) : List<SaledEntity>\n\n    @Query(\"select a.name, sum(qty) qty, sum(a.subtotal) total from saled a \" +\n            \"JOIN sale d ON d.id = a.sale_id WHERE d.posses_id = :possesId AND d.isvoid = 0 \" +\n            \"group by item_id order by qty DESC LIMIT 10\")\n    fun getRankItem(possesId: Int): List<RankItemEntity>\n\n    @Query(\"SELECT a.* FROM saled a JOIN sale b ON b.id = a.sale_id JOIN item c ON c.id = a.item_id \" +\n            \"WHERE b.isuploaded = 0 AND substr(c.code, -4) = '-DEL'\")\n    fun getSaledDeletedItem(): List<SaledEntity>\n\n    @Query(\"SELECT * FROM saled WHERE id = :id\")\n    fun getSaledById(id : Int) : SaledEntity?\n\n    @Query(\"select saled.item_code, saled.disc, saled.tax, saled.discexp, saled.discamt, saled.disc2amt, saled.taxamt, saled.baseprice, saled.taxableamt, saled.dno, saled.totaldiscamt, saled.totaldisc2amt, saled.totaltaxamt, saled.dnote, saled.id, saled.item_id, saled.name, saled.listprice, sum(saled.qty) as qty, count(saled.sale_id) as sale_id, saled.subtotal from saled \" +\n            \"left join sale on saled.sale_id = sale.id \" +\n            \"left join item on saled.item_id = item.id \" +\n            \"left join itemgrp on item.itemgrp1_id = itemgrp.id group by saled.item_id order by qty DESC\")\n    fun queryByPenjualan(): List<SaledEntity>\n\n    @Query(\"select saled.subtotal, saled.item_code, saled.disc, saled.tax, saled.discexp, saled.discamt, saled.disc2amt, saled.taxamt, saled.baseprice, saled.taxableamt, saled.dno, saled.totaldiscamt, saled.totaldisc2amt, saled.totaltaxamt, saled.dnote, saled.id, saled.item_id, saled.name, saled.listprice, saled.qty, saled.sale_id from saled, sale where sale.draft = 0 and saled.item_id = :id and sale.isvoid = 0 and sale.id == saled.sale_id and sale.trx_date between :startDate and :endDate\")\n    fun sumTotalByItem(id: Int, startDate: Long, endDate: Long): List<SaledEntity>\n\n    @Query(\"select saled.qty, saled.subtotal, saled.item_code, saled.disc, saled.tax, saled.discexp, saled.discamt, saled.disc2amt, saled.taxamt, saled.baseprice, saled.taxableamt, saled.dno, saled.totaldiscamt, saled.totaldisc2amt, saled.totaltaxamt, saled.dnote, saled.id, saled.item_id, saled.name, saled.listprice, saled.sale_id from saled, sale where sale.draft = 0 and saled.item_id = :id and sale.isvoid = 0 and sale.id == saled.sale_id and sale.trx_date between :startDate and :endDate\")\n    fun sumStokByItem(id: Int, startDate: Long, endDate: Long): List<SaledEntity>\n\n    @Query(\"SELECT a.*, SUM(a.qty) AS qty, SUM(a.subtotal) AS subtotal FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :id AND b.isvoid = 0\")\n    fun getSaledByPosses(id: Int): List<SaledEntity>\n\n    @Query(\"SELECT a.*, SUM(a.qty) AS qty, SUM(a.subtotal) AS subtotal FROM saled a JOIN sale b ON b.id = a.sale_id WHERE b.channel_id = :channelId AND posses_id = :id AND b.isvoid = 0\")\n    fun getSaledByPossesChannel(id: Int,channelId : Int): List<SaledEntity>\n\n    @Query(\"SELECT a.* FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :possesId AND b.channel_id = :channelId AND b.isvoid = 0 AND a.totaldiscamt != 0 AND a.item_id = :itemId\")\n    fun getRekapSaledDiskon(possesId: Int, itemId: Int, channelId: Int): List<SaledEntity>\n\n    @Query(\"SELECT a.* FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :possesId AND b.isvoid = 0 AND a.totaldiscamt != 0 AND a.item_id = :itemId AND a.listprice = :total\")\n    fun getRekapSaledDiskonNumerik(possesId: Int, itemId: Int, total: BigDecimal): List<SaledEntity>\n\n    @Query(\"select saled.item_Id, saled.dnote, saled.item_code,saled.listPrice,saled.disc,saled.tax,saled.discExp,saled.discAmt,saled.disc2Amt,saled.taxAmt,saled.basePrice,saled.taxableAmt,saled.sale_id,saled.dno,saled.totalDiscAmt,saled.totalDisc2Amt,saled.totalTaxAmt,saled.dno, saled.name, sum(saled.qty) qty, sum(saled.subtotal) subtotal from saled , sale where sale.draft = 0 and sale.isvoid = 0 and sale.id == saled.sale_id and sale.trx_date between :startDate and :endDate group by item_id order by qty desc\")\n    fun getRekapProduk(startDate: Long, endDate: Long):  PagingSource<Int, SaledEntity>\n\n    @Query(\"select saled.item_Id, saled.dnote, saled.item_code,saled.listPrice,saled.disc,saled.tax,saled.subtotal,saled.discExp,saled.discAmt,saled.disc2Amt,saled.taxAmt,saled.basePrice,saled.taxableAmt,saled.sale_id,saled.dno,saled.totalDiscAmt,saled.totalDisc2Amt,saled.totalTaxAmt,saled.dno, saled.name, sum(saled.qty) qty, sum(saled.subtotal) total, item.name1 from item \" +\n            \"left join saled on item.id = saled.item_id where name1 LIKE '%'|| :query || '%' group by code\")\n    fun searchRekapProduk(query: String): List<SaledEntity>\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaledDao.kt b/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaledDao.kt
--- a/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaledDao.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaledDao.kt	(date 1670383283047)
@@ -43,13 +43,14 @@
     @Query("select saled.qty, saled.subtotal, saled.item_code, saled.disc, saled.tax, saled.discexp, saled.discamt, saled.disc2amt, saled.taxamt, saled.baseprice, saled.taxableamt, saled.dno, saled.totaldiscamt, saled.totaldisc2amt, saled.totaltaxamt, saled.dnote, saled.id, saled.item_id, saled.name, saled.listprice, saled.sale_id from saled, sale where sale.draft = 0 and saled.item_id = :id and sale.isvoid = 0 and sale.id == saled.sale_id and sale.trx_date between :startDate and :endDate")
     fun sumStokByItem(id: Int, startDate: Long, endDate: Long): List<SaledEntity>
 
-    @Query("SELECT a.*, SUM(a.qty) AS qty, SUM(a.subtotal) AS subtotal FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :id AND b.isvoid = 0")
+    @Query("SELECT a.*, SUM(a.qty) AS qty, SUM(a.subtotal) AS subtotal FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :id AND b.isvoid = 0 GROUP BY a.item_id, a.listprice")
     fun getSaledByPosses(id: Int): List<SaledEntity>
 
-    @Query("SELECT a.*, SUM(a.qty) AS qty, SUM(a.subtotal) AS subtotal FROM saled a JOIN sale b ON b.id = a.sale_id WHERE b.channel_id = :channelId AND posses_id = :id AND b.isvoid = 0")
+    @Query("SELECT a.*, SUM(a.qty) AS qty, SUM(a.subtotal) AS subtotal FROM saled a " +
+            "JOIN sale b ON b.id = a.sale_id WHERE b.channel_id = :channelId AND posses_id = :id AND b.isvoid = 0 GROUP BY a.item_id, a.listprice")
     fun getSaledByPossesChannel(id: Int,channelId : Int): List<SaledEntity>
 
-    @Query("SELECT a.* FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :possesId AND b.channel_id = :channelId AND b.isvoid = 0 AND a.totaldiscamt != 0 AND a.item_id = :itemId")
+    @Query("SELECT a.* FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :possesId AND b.channel_id = :channelId AND b.isvoid = 0 AND a.totaldiscamt != 0 AND a.item_id = :itemId ")
     fun getRekapSaledDiskon(possesId: Int, itemId: Int, channelId: Int): List<SaledEntity>
 
     @Query("SELECT a.* FROM saled a JOIN sale b ON b.id = a.sale_id WHERE posses_id = :possesId AND b.isvoid = 0 AND a.totaldiscamt != 0 AND a.item_id = :itemId AND a.listprice = :total")
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/rekap_kas/KasKeluarMasukSharedViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.rekap_kas\n\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.model.Cadj\nimport com.bits.bee.bpmc.domain.model.Cash\nimport com.bits.bee.bpmc.domain.model.Kas\nimport com.bits.bee.bpmc.domain.model.Posses\nimport com.bits.bee.bpmc.domain.usecase.common.GetActivePossesUseCase\nimport com.bits.bee.bpmc.domain.usecase.rekap_kas.*\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.DateFormatUtils\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.launch\nimport java.math.BigDecimal\nimport java.util.*\nimport java.util.regex.Pattern\nimport javax.inject.Inject\n\n@HiltViewModel\nclass KasKeluarMasukSharedViewModel @Inject constructor(\n    private val addKasKeluarMasukUseCase: AddKasKeluarMasukUseCase,\n    private val loadKasMasukSortUseCase: LoadKasMasukSortUseCase,\n    private val getCadjInByDateUseCase: GetCadjInByDateUseCase,\n    private val loadKasKeluarSortUseCase: LoadKasKeluarSortUseCase,\n    private val getCadjOutByDateUseCase: GetCadjOutByDateUseCase,\n    private val getActivePossesUseCase: GetActivePossesUseCase\n): BaseViewModel<KasKeluarMasukState, KasKeluarMasukSharedViewModel.UIEvent>() {\n\n    init {\n        state = KasKeluarMasukState()\n    }\n\n    fun checkPosses() = viewModelScope.launch {\n        getActivePossesUseCase.invoke().collect {\n            updateState(\n                state.copy(\n                    acrivePosses = it\n                )\n            )\n        }\n    }\n\n    fun onSaveKasMasuk(nominal: String, deskripsi: String, posses: Posses?, cash: Cash?) = viewModelScope.launch {\n        var isvalid = true\n        var mPosses = posses.let { it }\n        if (nominal.isEmpty()){\n           isvalid = false\n//            eventChannel.send(UIEvent.RequestDialogNominal)\n\n        }else{\n            val pattern = Pattern.compile(BPMConstants.REGEX_INPUT)\n            val matcher = pattern.matcher(nominal.replace(\"[,.]\".toRegex(), \"\"))\n            if (matcher.find()){\n                // pastikan tidak ada karakter\n            }\n        }\n\n        if (deskripsi.isEmpty()){\n            isvalid = false\n            // pastikan deskripsi tidak kosong\n        }\n\n        if (isvalid){\n            val user = mPosses?.userId\n            val cashierId = mPosses?.cashierId\n            val status = \"i\"\n            val longStartBal = nominal.replace(\"[.,]\".toRegex(), \"\").toLong()\n            val balance = BigDecimal.valueOf(longStartBal)\n            val note = deskripsi.replace(BPMConstants.REGEX_INPUT.toRegex(), \"\")\n            val reftype = BPMConstants.BPM_DEFAULT_TYPE_CASH_POSSES\n            val autogen = false\n\n            addKasKeluarMasukUseCase.invoke(note, reftype, balance, mPosses, status, autogen)\n//            eventChannel.send(UIEvent.SuccesAddkasMasuk)\n        }\n    }\n\n    fun onSaveKasKeluar(nominal: String, deskripsi: String, posses: Posses?, cash: Cash?) = viewModelScope.launch {\n        var isvalid = true\n        var mPosses = posses.let { it }\n        if (nominal.isEmpty()){\n            isvalid = false\n//            eventChannel.send(UIEvent.RequestDialogNominal)\n\n        }else{\n            val pattern = Pattern.compile(BPMConstants.REGEX_INPUT)\n            val matcher = pattern.matcher(nominal.replace(\"[,.]\".toRegex(), \"\"))\n            if (matcher.find()){\n                // pastikan tidak ada karakter\n            }\n        }\n\n        if (deskripsi.isEmpty()){\n            isvalid = false\n            // pastikan deskripsi tidak kosong\n        }\n\n        if (isvalid){\n            val user = mPosses?.userId\n            val cashierId = mPosses?.cashierId\n            val status = \"o\"\n            val longStartBal = nominal.replace(\"[.,]\".toRegex(), \"\").toLong()\n            val balance = BigDecimal.valueOf(longStartBal)\n            val note = deskripsi.replace(BPMConstants.REGEX_INPUT.toRegex(), \"\")\n            val reftype = BPMConstants.BPM_DEFAULT_TYPE_CASH_POSSES\n            val autogen = false\n\n            if (mPosses?.totIn!!.add(mPosses.startBal) < (mPosses.totOut?.add(balance)\n                    ?: BigDecimal.ZERO.add(balance))\n            ){\n                // blocking\n                msgChannel.send(\"Kas keluar tidak boleh melebihi saldo kasir !\")\n            }else{\n                addKasKeluarMasukUseCase.invoke(note, reftype, balance, mPosses, status, autogen)\n            }\n        }\n\n    }\n\n    fun loadKasMasuk(desc: Boolean, query: String) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                isDesc = desc\n            )\n        )\n        loadKasMasukSortUseCase.invoke(desc, query).collect{\n            updateState(\n                state.copy(\n                    cadjListIn = it\n                )\n            )\n        }\n    }\n\n    fun loadKasKeluar(desc: Boolean, query: String) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                isDesc = desc\n            )\n        )\n        loadKasKeluarSortUseCase.invoke(desc, query).collect{\n            updateState(\n                state.copy(\n                    cadjListOut = it\n                )\n            )\n        }\n    }\n\n    fun setListKasIn(dataList: List<Cadj>) = viewModelScope.launch {\n        val cadjMap : HashMap<Long, MutableList<Cadj>>\n                = HashMap()\n        cadjMap.clear()\n        val resultSorted: SortedMap<Long, MutableList<Cadj>>\n        for (cadj in dataList){\n            val key = DateFormatUtils.convertStartDate(cadj.trxDate)\n            if (!cadjMap.containsKey(key)){\n                val mutable: MutableList<Cadj> = mutableListOf()\n                mutable.add(cadj)\n                cadjMap.put(key, mutable)\n            }else{\n                cadjMap.get(key)!!.add(cadj)\n            }\n        }\n\n        if (state.isDesc){\n            resultSorted = cadjMap.toSortedMap(compareByDescending { it })\n        }else{\n            resultSorted = cadjMap.toSortedMap(compareBy { it })\n        }\n\n        parseMapCadjIn(resultSorted)\n    }\n\n    private fun parseMapCadjIn(cadjMap: SortedMap<Long, MutableList<Cadj>>) = viewModelScope.launch {\n        var jmlTrans = 0\n        val kasList = mutableListOf<Kas>()\n        for (newMap in cadjMap.entries){\n            getCadjInByDateUseCase.invoke(DateFormatUtils.convertStartDate(newMap.key), DateFormatUtils.convertEndDate(newMap.key)).collect{\n                jmlTrans = it.size\n            }\n            kasList.add(Kas(newMap.key, newMap.value, jmlTrans))\n        }\n\n        updateState(\n            state.copy(\n                cashInList = kasList\n            )\n        )\n    }\n\n    fun setListKasOut(dataList: List<Cadj>) = viewModelScope.launch {\n        val cadjMap : HashMap<Long, MutableList<Cadj>>\n                = HashMap()\n        cadjMap.clear()\n        val resultSorted: SortedMap<Long, MutableList<Cadj>>\n        for (cadj in dataList){\n            val key = DateFormatUtils.convertStartDate(cadj.trxDate)\n            if (!cadjMap.containsKey(key)){\n                val mutable: MutableList<Cadj> = mutableListOf()\n                mutable.add(cadj)\n                cadjMap.put(key, mutable)\n            }else{\n                cadjMap.get(key)!!.add(cadj)\n            }\n        }\n\n        if (state.isDesc){\n            resultSorted = cadjMap.toSortedMap(compareByDescending { it })\n        }else{\n            resultSorted = cadjMap.toSortedMap(compareBy { it })\n        }\n\n\n        parseMapCadjOut(resultSorted)\n    }\n\n    private fun parseMapCadjOut(cadjMap: SortedMap<Long, MutableList<Cadj>>) = viewModelScope.launch {\n        var jmlTrans = 0\n        val kasList = mutableListOf<Kas>()\n        for (newMap in cadjMap.entries){\n            getCadjOutByDateUseCase.invoke(DateFormatUtils.convertStartDate(newMap.key), DateFormatUtils.convertEndDate(newMap.key)).collect{\n                jmlTrans = it.size\n            }\n            kasList.add(Kas(newMap.key, newMap.value, jmlTrans))\n        }\n\n        updateState(\n            state.copy(\n                cashOutList = kasList\n            )\n        )\n    }\n\n    fun onAddKasMasuk() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestAddKasMasuk)\n    }\n\n    fun onAddKasKeluar() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestAddKasKeluar)\n    }\n\n    sealed class UIEvent{\n        object RequestAddKasMasuk: UIEvent()\n        object RequestAddKasKeluar: UIEvent()\n        object SuccesAddkasMasuk: UIEvent()\n        object SuccesAddKasKeluar: UIEvent()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/rekap_kas/KasKeluarMasukSharedViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/rekap_kas/KasKeluarMasukSharedViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/rekap_kas/KasKeluarMasukSharedViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/rekap_kas/KasKeluarMasukSharedViewModel.kt	(date 1669972683282)
@@ -62,8 +62,6 @@
         }
 
         if (isvalid){
-            val user = mPosses?.userId
-            val cashierId = mPosses?.cashierId
             val status = "i"
             val longStartBal = nominal.replace("[.,]".toRegex(), "").toLong()
             val balance = BigDecimal.valueOf(longStartBal)
@@ -97,8 +95,6 @@
         }
 
         if (isvalid){
-            val user = mPosses?.userId
-            val cashierId = mPosses?.cashierId
             val status = "o"
             val longStartBal = nominal.replace("[.,]".toRegex(), "").toLong()
             val balance = BigDecimal.valueOf(longStartBal)
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.pos.invoice\n\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.usecase.pos.AddTransactionUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 25/04/22.\n */\n@HiltViewModel\nclass InvoiceViewModel @Inject constructor(\n    private val addTransactionUseCase: AddTransactionUseCase\n) : BaseViewModel<Any, InvoiceViewModel.UIEvent>(){\n\n    init {\n        state = Any()\n    }\n\n    fun onClickBayar() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestPembayaran)\n    }\n\n    fun onClickBatal() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestBatal)\n    }\n\n    fun onClickDraft() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestDraft)\n    }\n\n    fun onClickPromo() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateKlaimPromo)\n    }\n\n    fun onDetailEmpty() = viewModelScope.launch {\n        msgChannel.send(\"Tidak ada data detail!\")\n        eventChannel.send(UIEvent.NavigatePos)\n    }\n\n    sealed class UIEvent {\n        object NavigatePos : UIEvent()\n        object NavigateKlaimPromo : UIEvent()\n        object RequestPembayaran : UIEvent()\n        object RequestBatal : UIEvent()\n        object RequestDraft : UIEvent()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceViewModel.kt	(date 1670394441514)
@@ -36,8 +36,8 @@
     }
 
     fun onDetailEmpty() = viewModelScope.launch {
-        msgChannel.send("Tidak ada data detail!")
         eventChannel.send(UIEvent.NavigatePos)
+        msgChannel.send("Tidak ada data detail!")
     }
 
     sealed class UIEvent {
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.pos.invoice\n\nimport android.view.*\nimport androidx.core.view.isVisible\nimport androidx.fragment.app.activityViewModels\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentInvoiceBinding\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.DialogBuilderHelper\nimport com.bits.bee.bpmc.presentation.ui.pos.MainViewModel\nimport com.bits.bee.bpmc.presentation.ui.pos.pos.PosFragmentDirections\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.CurrencyUtils\nimport com.bits.bee.bpmc.utils.extension.gone\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\n\n/**\n * Created by aldi on 22/04/22.\n */\n@AndroidEntryPoint\nclass InvoiceFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentInvoiceBinding = FragmentInvoiceBinding::inflate\n) : BaseFragment<FragmentInvoiceBinding>() {\n\n    private val viewModel : InvoiceViewModel by viewModels()\n\n    private val mainViewModel : MainViewModel by activityViewModels()\n\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n        menu.clear()\n        inflater.inflate(R.menu.menu_pos, menu)\n        if(BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_POTRAIT) {\n            menu.findItem(R.id.menu_draft).isVisible = false\n            menu.findItem(R.id.menu_search).isVisible = false\n        }\n        super.onCreateOptionsMenu(menu, inflater)\n    }\n\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when(item.itemId){\n            R.id.menu_draft -> {\n                mainViewModel.onClickDraft()\n            }\n            R.id.menu_diskon -> {\n                mainViewModel.onClickDiskonNota()\n            }\n            R.id.menu_search -> {\n                mainViewModel.onClickSearch()\n            }\n            R.id.menu_promo -> {\n                mainViewModel.onClickPromo()\n            }\n        }\n        return super.onOptionsItemSelected(item)\n    }\n\n    override fun initComponents() {\n        setHasOptionsMenu(true)\n        binding.apply {\n            clPromo.gone()\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            btnBayar.setOnClickListener {\n                viewModel.onClickBayar()\n            }\n            btnBatal.setOnClickListener {\n                viewModel.onClickBatal()\n            }\n            btnDraft.setOnClickListener {\n                viewModel.onClickDraft()\n            }\n            clPromo.setOnClickListener {\n                viewModel.onClickPromo()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                mainViewModel.viewStates().collect {\n                    it?.let {\n                        binding.apply {\n                            clPromo.isVisible = mainViewModel.listPromoBonus.size > 0\n                            tvPromo.text = getString(R.string.anda_mendapatkan_promo, mainViewModel.listPromoBonus.size)\n\n                            tvDiskon.text = getString(R.string.mata_uang_nominal, it.crc?.symbol ?: \"\",CurrencyUtils.formatCurrency(it.sale.discAmt))\n                            tvPajak.text = getString(R.string.mata_uang_nominal, it.crc?.symbol ?: \"\",CurrencyUtils.formatCurrency(it.sale.taxAmt))\n                            tvSubtotal.text = getString(R.string.mata_uang_nominal, it.crc?.symbol ?: \"\",CurrencyUtils.formatCurrency(it.sale.subtotal))\n                            tvRounding.text = getString(R.string.mata_uang_nominal, it.crc?.symbol ?: \"\",CurrencyUtils.formatCurrency(it.sale.rounding))\n                            tvTotal.text = getString(R.string.mata_uang_nominal, it.crc?.symbol ?: \"\",CurrencyUtils.formatCurrency(it.sale.total))\n                        }\n\n                        if(it.saledList.size == 0 && BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_POTRAIT){\n                            viewModel.onDetailEmpty()\n                        }\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch{\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect {\n                    when(it){\n                        InvoiceViewModel.UIEvent.RequestBatal -> {\n                            val dialog = DialogBuilderHelper.showDialogChoice (\n                                requireContext(),\n                                title = getString(R.string.batalkan_transaksi),\n                                msg = getString(R.string.msg_batalkan_transaksi),\n                                positiveTxt = getString(R.string.lanjut_bayar),\n                                positiveListener = {\n                                    it.dismiss()\n                                },\n                                negativeTxt = getString(R.string.batalkan),\n                                negativeListener = {\n                                    it.dismiss()\n                                    mainViewModel.resetState()\n                                    mainViewModel.sendMessage(getString(R.string.berhasil_batal_transaksi))\n                                    if(mainViewModel.orientation.value == BPMConstants.SCREEN_POTRAIT)\n                                        findNavController().popBackStack()\n                                }\n                            )\n                            dialog.show(parentFragmentManager, \"\")\n                        }\n                        InvoiceViewModel.UIEvent.RequestPembayaran -> {\n                            if (mainViewModel.state.saledList.isEmpty()) {\n                                showSnackbar(\"Detail Kosong!\")\n                            } else {\n                                val action = when (BeePreferenceManager.ORIENTATION) {\n                                    BPMConstants.SCREEN_POTRAIT -> InvoiceFragmentDirections.actionInvoiceFragmentToPembayaranFragment()\n                                    else -> PosFragmentDirections.actionPosFragmentToPembayaranFragment()\n                                }\n                                findNavController().navigate(action)\n                            }\n                        }\n                        InvoiceViewModel.UIEvent.RequestDraft -> {\n                            val dialog = DialogBuilderHelper.showDialogChoice(\n                                requireContext(),\n                                title = getString(R.string.simpan_sebagai_draft),\n                                msg = getString(R.string.msg_draft),\n                                positiveTxt = getString(R.string.simpan),\n                                positiveListener = {\n                                    it.dismiss()\n                                    if (mainViewModel.state.saledList.isEmpty()) {\n                                        showSnackbar(\"Detail Kosong!\")\n                                    } else {\n                                        mainViewModel.submitDraft(requireActivity())\n                                        if (mainViewModel.orientation.value == BPMConstants.SCREEN_POTRAIT)\n                                            findNavController().popBackStack()\n                                    }\n                                },\n                                negativeTxt = getString(R.string.batal),\n                                negativeListener = {\n                                    it.dismiss()\n                                }\n                            )\n                            dialog.show(parentFragmentManager, \"\")\n                        }\n                        InvoiceViewModel.UIEvent.NavigatePos -> {\n                            findNavController().popBackStack()\n                        }\n                        InvoiceViewModel.UIEvent.NavigateKlaimPromo -> {\n                            val action = when (BeePreferenceManager.ORIENTATION) {\n                                BPMConstants.SCREEN_POTRAIT -> InvoiceFragmentDirections.actionInvoiceFragmentToKlaimPromoFragment()\n                                else -> PosFragmentDirections.actionPosFragmentToKlaimPromoFragment()\n                            }\n                            findNavController().navigate(action)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/invoice/InvoiceFragment.kt	(date 1670394166974)
@@ -101,7 +101,7 @@
                             tvTotal.text = getString(R.string.mata_uang_nominal, it.crc?.symbol ?: "",CurrencyUtils.formatCurrency(it.sale.total))
                         }
 
-                        if(it.saledList.size == 0 && BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_POTRAIT){
+                        if(it.saledList.isEmpty() && BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_POTRAIT) {
                             viewModel.onDetailEmpty()
                         }
                     }
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.pos\n\nimport android.content.Context\nimport androidx.lifecycle.viewModelScope\nimport androidx.paging.cachedIn\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.data.list.ListPromoBonus\nimport com.bits.bee.bpmc.domain.calc.PromoCalc\nimport com.bits.bee.bpmc.domain.calc.SaleCalc\nimport com.bits.bee.bpmc.domain.model.*\nimport com.bits.bee.bpmc.domain.repository.ChannelRepository\nimport com.bits.bee.bpmc.domain.repository.CrcRepository\nimport com.bits.bee.bpmc.domain.repository.SrepRepository\nimport com.bits.bee.bpmc.domain.trans.SaleTrans\nimport com.bits.bee.bpmc.domain.usecase.common.*\nimport com.bits.bee.bpmc.domain.usecase.pos.*\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.TrxNoGeneratorUtils\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.ExperimentalCoroutinesApi\nimport kotlinx.coroutines.FlowPreview\nimport kotlinx.coroutines.flow.*\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.runBlocking\nimport java.math.BigDecimal\nimport javax.inject.Inject\n\n\n/**\n * Created by aldi on 21/04/22.\n */\n@HiltViewModel\nclass MainViewModel @Inject constructor(\n    private val getActiveChannelUseCase: GetActiveChannelUseCase,\n    private val getActivePossesUseCase: GetActivePossesUseCase,\n    private val getActiveCashierUseCase: GetActiveCashierUseCase,\n    private val getActiveBranchUseCase: GetActiveBranchUseCase,\n    private val getDefaultBpUseCase: GetDefaultBpUseCase,\n    private val getDefaultCrcUseCase: GetDefaultCrcUseCase,\n    private val getSaledBySaleUseCase: GetSaledBySaleUseCase,\n    private val getItemGroupAddOnUseCase: GetItemGroupAddOnUseCase,\n    private val addTransactionUseCase: AddTransactionUseCase,\n    private val getActiveItemUseCase: GetActiveItemUseCase,\n    private val getSalePromoBySaleUseCase: GetSalePromoBySaleUseCase,\n    private val getSaleAddOnBySaleUseCase: GetSaleAddOnBySaleUseCase,\n    private val getSaleAddonDByAddonUseCase: GetSaleAddonDByAddonUseCase,\n    private val getDefaultSalesmanUseCase: GetDefaultSalesmanUseCase,\n    private val promoCalc: PromoCalc,\n    private val channelRepository: ChannelRepository,\n    private val crcRepository: CrcRepository,\n    private val srepRepository: SrepRepository,\n    private val beePreferenceManager: BeePreferenceManager,\n    private val getRegUseCase: GetRegUseCase\n) : BaseViewModel<MainState, MainViewModel.UIEvent>(){\n\n    private val _posModeState = MutableStateFlow(PosModeState.FnBState)\n    @OptIn(FlowPreview::class)\n    val posModeState : StateFlow<PosModeState> = _posModeState\n        .filterNotNull()\n        .flatMapConcat { beePreferenceManager.modePreferences }\n        .stateIn(viewModelScope, SharingStarted.Eagerly, PosModeState.FnBState)\n\n\n    private val _saleTrans: SaleTrans = SaleTrans(promoCalc, SaleCalc(getRegUseCase))\n    val saleTrans : SaleTrans\n        get() = _saleTrans\n\n    private val _activeItemGroup : MutableStateFlow<Int> = MutableStateFlow(-1)\n    val activeItemGroup : MutableStateFlow<Int>\n        get() = _activeItemGroup\n\n    private val _activeBp : MutableStateFlow<Bp?> = MutableStateFlow(null)\n    val activeBp : MutableStateFlow<Bp?>\n        get() = _activeBp\n\n    private val _activeChannel : MutableStateFlow<Channel?> = MutableStateFlow(null)\n    val activeChannel : MutableStateFlow<Channel?>\n        get() = _activeChannel\n\n    private val _activeSrep : MutableStateFlow<Srep?> = MutableStateFlow(null)\n    val activeSrep : MutableStateFlow<Srep?>\n        get() = _activeSrep\n\n    val listPromoBonus = promoCalc.listPromoBonus\n\n    val posPreferences = beePreferenceManager.posPreferences\n\n    val orientation : MutableStateFlow<String> = MutableStateFlow(BPMConstants.SCREEN_LANDSCAPE)\n\n    init {\n        state = MainState()\n        viewModelScope.launch {\n            posPreferences.collect {\n                orientation.value = it.orientasi\n            }\n        }\n    }\n\n    @OptIn(ExperimentalCoroutinesApi::class)\n    val itemList = combine(\n        _activeItemGroup,\n        _activeBp,\n        _activeChannel\n    ) { (itemGroup, bp, channel) ->\n        ItemParameter(\n            itemGroup = itemGroup as Int,\n            bp = bp as Bp?,\n            channel = channel as Channel?\n        )\n    }.flatMapLatest {\n        getActiveItemUseCase (\n            bp = it.bp,\n            itemGrpId = it.itemGroup,\n            channel = it.channel,\n            usePid = posModeState.value is PosModeState.RetailState\n        ).cachedIn(viewModelScope)\n    }\n\n\n    fun loadData() = runBlocking {\n        combine(\n            getDefaultCrcUseCase(),\n            getActivePossesUseCase(),\n            getActiveBranchUseCase(),\n            getActiveCashierUseCase(),\n            getActiveChannelUseCase(),\n            getDefaultBpUseCase(),\n            getItemGroupAddOnUseCase(),\n            getDefaultSalesmanUseCase()\n        ) { array ->\n            val crc = array[0] as Crc?\n            val posses = array[1] as Posses?\n            val branch = array[2] as Branch\n            val cashier = array[3] as Cashier\n            val channelList = array[4] as List<Channel>\n            val bp = array[5] as Bp\n            val itgrpAddOn = array[6] as ItemGroup?\n            val srep = array[7] as Srep?\n\n            state.copy(\n                crc = crc,\n                activePosses = posses,\n                activeBranch = branch,\n                activeCashier = cashier,\n                channelList = channelList,\n                channel = if(channelList.isNotEmpty()) channelList[0] else null,\n                bp = bp,\n                itgrpAddOn = itgrpAddOn,\n                srep = srep\n            )\n        }.collect {\n            activeBp.emit(it.bp)\n            saleTrans.setBp(it.bp!!)\n            activeChannel.emit(it.channel)\n            activeSrep.emit(it.srep)\n            saleTrans.getMaster().channelId = it.channel?.id ?: -1\n            saleTrans.getMaster().srepId = it.srep?.id ?: -1\n            saleTrans.setGrpAddOn(it.itgrpAddOn)\n            updateState(it)\n        }\n    }\n\n    fun initPromo() = viewModelScope.launch(exceptionHandler) {\n        promoCalc.initPromo(saleTrans)\n    }\n\n    suspend fun loadDraft(sale : Sale) {\n        val saledList = getSaledBySaleUseCase(sale.id!!).first()\n        val saleAddOn = getSaleAddOnBySaleUseCase(sale.id!!).first()\n        var saleAddOnDList : List<SaleAddOnD> = mutableListOf()\n        saleAddOn?.let {\n            saleAddOnDList = getSaleAddonDByAddonUseCase(it.id!!).first()\n        }\n        val salePromoList = getSalePromoBySaleUseCase(sale.id!!).first()\n\n        saleTrans.loadTrans(sale, saledList.toMutableList(), saleAddOn, saleAddOnDList.toMutableList(), salePromoList.toMutableList())\n        sale.bp?.let {\n            updateActiveBp(it)\n        }\n        channelRepository.getChannelById(sale.channelId).first().let {\n            it?.let {\n                updateActiveChannel(it)\n            }\n        }\n        sale.srepId?.let {\n            srepRepository.getSrepById(it).first().let {\n                it?.let {\n                    updateActiveSrep(it)\n                }\n            }\n        }\n        deployData()\n    }\n\n    fun onClickDraft() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToDraft)\n    }\n\n    fun onClickDiskonNota() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToDiskonNota)\n    }\n\n    fun onClickSearch() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToSearch)\n    }\n\n    fun onClickMember() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestMember)\n    }\n\n    fun onClickSalesman() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestSalesman)\n    }\n\n    fun onClickChannel() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestChannel)\n    }\n\n    fun onClickPromo() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToPromo)\n    }\n\n    fun onAddDetail(item : ItemWithUnit, useItemqty: Boolean = false,\n                    promoBonus: ListPromoBonus.PromoBonus? = null, isBonus : Boolean = false) = viewModelScope.launch(exceptionHandler) {\n        saleTrans.addDetail(\n            itemWithUnit = item,\n            useItemqty = useItemqty,\n            promoBonus = promoBonus,\n            isBonus = isBonus\n        )\n        saleTrans.mergeAddon()\n        saleTrans.mergeItemAddon()\n        promoCalc.generatePromo()\n        deployData()\n    }\n\n    fun onAddAddOn(variant: ItemWithUnit?, addOnList : List<ItemWithUnit>) = viewModelScope.launch(exceptionHandler) {\n        variant?.let {\n            saleTrans.addDetail(\n                itemWithUnit = variant,\n            )\n            saleTrans.mergeAddon()\n            saleTrans.mergeItemAddon()\n            promoCalc.generatePromo()\n        }\n        for(addOn in addOnList){\n            saleTrans.addDetail(\n                itemWithUnit = addOn\n            )\n        }\n        saleTrans.mergeAddon()\n        saleTrans.mergeItemAddon()\n        deployData()\n    }\n\n    fun onItemAddOn(itemList : List<Item?>, upSaled: Saled?) = viewModelScope.launch(exceptionHandler) {\n        for (item in itemList){\n            item?.let {\n                if(upSaled == null){\n                    saleTrans.addDetail(ItemWithUnit(item))\n                } else {\n                    saleTrans.addDetail(ItemWithUnit(item), saledParent = upSaled)\n                }\n            }\n        }\n        promoCalc.generatePromo()\n        deployData()\n    }\n\n    fun onMinusClick(item : Item) = viewModelScope.launch {\n        val saled = saleTrans.getListDetail().firstOrNull {\n            item.id == it.itemId\n        }\n        saled?.let {\n            if(it.qty > BigDecimal.ONE) {\n                onEditDetail(it.copy(qty = it.qty.subtract(BigDecimal.ONE)))\n            } else {\n                onDeleteDetail(saled)\n            }\n        }\n\n    }\n\n    fun onDeleteDetail(saled: Saled) = viewModelScope.launch(exceptionHandler) {\n        if(saled.item?.isVariant == true) {\n            saleTrans.addOnTrans?.let {\n                val saledRemoveList = mutableListOf<Saled>()\n                val saledAddOnList = it.getListDetail().filter { it.upSaled == saled }.map { it.saled }\n                saledAddOnList.forEach { saled1 ->\n                    saleTrans.getListDetail().forEach { saled ->\n                        if(saled1 == saled)\n                            saledRemoveList.add(saled)\n                    }\n                }\n                for (saled1 in saledRemoveList){\n                    saleTrans.deleteDetail(saled1)\n                }\n            }\n        }\n        saleTrans.deleteDetail(saled)\n        saleTrans.mergeAddon()\n        saleTrans.mergeItemAddon()\n        promoCalc.generatePromo()\n        deployData()\n    }\n\n    fun onEditDetail(saled: Saled) = viewModelScope.launch(exceptionHandler) {\n        saleTrans.editDetail(saled)\n\n        promoCalc.generatePromo()\n        deployData()\n    }\n\n    fun onDeleteAddOnData(upSaled : Saled, saled : Saled) = viewModelScope.launch(exceptionHandler) {\n        saleTrans.deleteAddon(upSaled, saled)\n\n        saleTrans.mergeAddon()\n        saleTrans.mergeItemAddon()\n\n        promoCalc.generatePromo()\n\n        deployData()\n    }\n\n    fun onUpdateDiskonNota(diskon : String) = viewModelScope.launch(exceptionHandler) {\n        saleTrans.updateDiskonMaster(diskon)\n        deployData()\n    }\n\n    private fun updateTrxOrderNo(context : Context)  {\n        val trxOrderNum = BeePreferenceManager.getDataFromPreferences(context, context.getString(R.string.trx_ordernum), 0) as Int + 1\n        BeePreferenceManager.saveToPreferences(context, context.getString(R.string.trx_ordernum), trxOrderNum)\n    }\n\n    fun getTrxNo(context: Context) : String{\n        val trxOrderNum = BeePreferenceManager.getDataFromPreferences(context, context.getString(R.string.trx_ordernum), 0) as Int + 1\n        val trxNo = TrxNoGeneratorUtils.counterNoTrx(trxOrderNum, state.activeCashier!!)\n        saleTrans.getMaster().trxOrderNum = trxOrderNum\n        saleTrans.getMaster().trxNo = trxNo\n        return trxNo\n    }\n\n    fun resetState() {\n        saleTrans.newTrans()\n        resetTransaction()\n    }\n\n    private fun resetTransaction() = viewModelScope.launch(exceptionHandler) {\n        combine(\n            getDefaultCrcUseCase(),\n            getActivePossesUseCase(),\n            getActiveBranchUseCase(),\n            getActiveCashierUseCase(),\n            getDefaultBpUseCase(),\n        ) { array ->\n            val crc = array[0] as Crc?\n            val posses = array[1] as Posses?\n            val branch = array[2] as Branch\n            val cashier = array[3] as Cashier\n            val bp = array[4] as Bp\n\n            state.copy(\n                crc = crc,\n                activePosses = posses,\n                activeBranch = branch,\n                activeCashier = cashier,\n                channel = state.channelList[0],\n                bp = bp,\n                sale = Sale(),\n                saledList = mutableListOf(),\n                saleAddOn = SaleAddOn(),\n                saleAddOnDList = mutableListOf(),\n                salePromoList = mutableListOf(),\n            )\n        }.collect {\n            activeBp.emit(it.bp)\n            activeChannel.emit(it.channel)\n            saleTrans.setBp(it.bp!!)\n            saleTrans.getMaster().channelId = it.channel?.id ?: -1\n//            saleTrans.getMaster().channel = it.channel\n            updateState(it)\n        }\n    }\n\n    suspend fun submitSale(\n        context: Context,\n        termType : String,\n        paymentAmt : BigDecimal = BigDecimal.ZERO,\n        pmtd : Pmtd? = null,\n        trackNo : String = \"\",\n        cardNo : String = \"\",\n        note : String = \"\",\n    ) {\n\n        updateTrxOrderNo(context)\n\n        val sale = saleTrans.getMaster()\n        val saledList = saleTrans.getListDetail()\n        val saleAddOn = saleTrans.addOnTrans?.getMaster()\n        val saleAddOnDList = saleTrans.addOnTrans?.getListDetail() ?: mutableListOf()\n        val salePromoList = saleTrans.salePromoList\n        sale.termType = termType\n        sale.isDraft = false\n\n        val saleNew = addTransactionUseCase(\n            sale = sale,\n            saledList = saledList,\n            saleAddOn = saleAddOn,\n            saleAddOnDList = saleAddOnDList,\n            salePromoList = salePromoList,\n            paymentAmt = paymentAmt,\n            pmtd = pmtd,\n            trackNo = trackNo,\n            cardNo = cardNo,\n            note = note,\n            counter = BeePreferenceManager.getDataFromPreferences(context, context.getString(R.string.trx_ordernum), 1) as Int)\n\n        state.sale = saleNew\n    }\n\n    fun submitDraft(context: Context) = viewModelScope.launch {\n        updateTrxOrderNo(context)\n\n        val sale = saleTrans.getMaster()\n        val saledList = saleTrans.getListDetail()\n        val saleAddOn = saleTrans.addOnTrans?.getMaster()\n        val saleAddOnDList = saleTrans.addOnTrans?.getListDetail() ?: mutableListOf()\n        val salePromoList = saleTrans.salePromoList\n        sale.isDraft = true\n\n        kotlin.runCatching {\n            addTransactionUseCase(\n                sale = sale,\n                saledList = saledList,\n                saleAddOn = saleAddOn,\n                saleAddOnDList = saleAddOnDList,\n                salePromoList = salePromoList,\n                counter = BeePreferenceManager.getDataFromPreferences(context, context.getString(R.string.trx_ordernum), 1) as Int\n            )\n        }\n            .onSuccess {\n                sendMessage(\"Berhasil simpan sebagai draft\")\n                resetState()\n            }\n            .onFailure {\n                sendMessage(it.message)\n            }\n    }\n\n    private fun deployData() = viewModelScope.launch {\n        val saledList = mutableListOf<Saled>()\n        saleTrans.getListDetail().forEach {\n            saledList.add(it.copy())\n        }\n        updateState(\n            state.copy(\n                sale = saleTrans.getMaster().copy(),\n                saledList = saledList,\n                saleAddOn = saleTrans.addOnTrans?.getMaster() ?: SaleAddOn(),\n                saleAddOnDList = saleTrans.addOnTrans?.getListDetail() ?: mutableListOf(),\n                salePromoList = saleTrans.salePromoList\n            )\n        )\n    }\n\n    fun updateActiveItemGroup(itemGroup: ItemGroup?) = viewModelScope.launch {\n        _activeItemGroup.emit(itemGroup?.id ?: -1)\n    }\n\n    fun updateActiveBp(bp : Bp) = viewModelScope.launch {\n        _activeBp.emit(bp)\n        saleTrans.setBp(bp)\n        val id = bp.bpAccList.firstOrNull { it.isDefault }?.crcId ?: throw Exception(\"BpAcc tidak ditemukan!\")\n        state.crc = crcRepository.getCrcById(id).first()\n        deployData()\n    }\n\n    fun updateActiveChannel(channel : Channel) = viewModelScope.launch {\n        _activeChannel.emit(channel)\n        saleTrans.getMaster().channelId = channel.id\n//        saleTrans.getMaster().channel = channel\n        saleTrans.calculate()\n        deployData()\n    }\n\n    fun updateActiveSrep(channel : Srep) = viewModelScope.launch {\n        _activeSrep.emit(channel)\n        if(posModeState.value is PosModeState.RetailState)\n            saleTrans.getMaster().srepId = channel.id\n//        saleTrans.calculate()\n        deployData()\n    }\n\n    fun generatePromo() = viewModelScope.launch {\n        promoCalc.generatePromo()\n        deployData()\n    }\n\n    sealed class UIEvent {\n        object RequestMember : UIEvent()\n        object RequestSalesman : UIEvent()\n        object RequestChannel: UIEvent()\n        object NavigateToDraft : UIEvent()\n        object NavigateToDiskonNota : UIEvent()\n        object NavigateToPromo : UIEvent()\n        object NavigateToSearch : UIEvent()\n    }\n\n    data class ItemParameter(\n        val bp : Bp?,\n        val itemGroup : Int = -1,\n        val channel : Channel?,\n        val usePid : Boolean = false\n    )\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainViewModel.kt	(date 1670319099395)
@@ -480,15 +480,15 @@
     fun updateActiveChannel(channel : Channel) = viewModelScope.launch {
         _activeChannel.emit(channel)
         saleTrans.getMaster().channelId = channel.id
-//        saleTrans.getMaster().channel = channel
+        saleTrans.getMaster().channel = channel.name
         saleTrans.calculate()
         deployData()
     }
 
-    fun updateActiveSrep(channel : Srep) = viewModelScope.launch {
-        _activeSrep.emit(channel)
+    fun updateActiveSrep(srep : Srep) = viewModelScope.launch {
+        _activeSrep.emit(srep)
         if(posModeState.value is PosModeState.RetailState)
-            saleTrans.getMaster().srepId = channel.id
+            saleTrans.getMaster().srepId = srep.id
 //        saleTrans.calculate()
         deployData()
     }
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.setting_printer.add_printer\n\nimport android.view.*\nimport android.widget.Toast\nimport androidx.core.content.ContextCompat\nimport androidx.core.view.isVisible\nimport androidx.core.widget.addTextChangedListener\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentSettingAddPrinterBinding\nimport com.bits.bee.bpmc.domain.model.Printer\nimport com.bits.bee.bpmc.domain.model.PrinterKitchen\nimport com.bits.bee.bpmc.domain.printer.helper.PrinterHelper\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.tipe_printer.TipePrinterDialog\nimport com.bits.bee.bpmc.presentation.ui.setting_printer.list_printer_search.PrinterDevice\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\nconst val TAG = \"Tambah Printer\"\n\n@AndroidEntryPoint\nclass AddPrinterFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentSettingAddPrinterBinding = FragmentSettingAddPrinterBinding::inflate\n): BaseFragment<FragmentSettingAddPrinterBinding>() {\n\n    private val viewModel : AddPrinterViewModel by viewModels()\n    private lateinit var sectionKitchenAdapter: SectionKitchenAdapter\n\n    @Inject\n    lateinit var printerHelper: PrinterHelper\n\n    var isKitchen = false\n    private lateinit var menuDelete : MenuItem\n\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n        inflater.inflate(R.menu.menu_delete, menu)\n        menu.findItem(R.id.menu_delete).isVisible = viewModel.state.mPrinter?.id != null\n        super.onCreateOptionsMenu(menu, inflater)\n    }\n\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when(item.itemId){\n            R.id.menu_delete -> {\n                viewModel.onClickDelete()\n            }\n        }\n        return super.onOptionsItemSelected(item)\n    }\n\n    override fun initComponents() {\n        setHasOptionsMenu(true)\n        arguments?.let {\n            val printer = it.getParcelable<Printer>(\"printer\")\n            printer?.let {\n                viewModel.updateState(\n                    viewModel.state.copy(\n                        mPrinter = printer\n                    )\n                )\n                viewModel.setPrinterKitchen(it)\n            }\n        }\n        binding.apply {\n            sectionKitchenAdapter = SectionKitchenAdapter {\n                val action = AddPrinterFragmentDirections.actionAddPrinterFragmentToKitchenFragment(viewModel.state.printerKitchenList[it])\n                findNavController().navigate(action)\n            }\n            rvKitchenPrinter.layoutManager = LinearLayoutManager(requireContext())\n            rvKitchenPrinter.adapter = sectionKitchenAdapter\n        }\n        findNavController().currentBackStackEntry?.savedStateHandle?.apply {\n            getLiveData<PrinterDevice>(\"printer\").observe(viewLifecycleOwner) {\n                val printer = viewModel.state.mPrinter ?: Printer()\n                viewModel.updateState(\n                    viewModel.state.copy(\n                        mPrinter = printer.copy(\n                            printerName = it.nama,\n                            address = it.address\n                        )\n                    )\n                )\n                viewModel.bluetoothConnectService.onEventConnectPrinter(viewModel.state.mPrinter!!, 0)\n            }\n            getLiveData<PrinterKitchen>(\"printerKitchen\").observe(viewLifecycleOwner) {\n                viewModel.onClickAddKitchen(it)\n                sectionKitchenAdapter.notifyDataSetChanged()\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            etNamaPrinter.addTextChangedListener {\n                viewModel.state.mPrinter?.printerName = etNamaPrinter.text.toString().trim()\n            }\n            etMacAddress.addTextChangedListener {\n                viewModel.state.mPrinter?.address = etMacAddress.text.toString().trim()\n            }\n\n            etTipePrinter.setOnClickListener {\n                viewModel.onClickShowPrinter()\n            }\n            clPrinterKasir.setOnClickListener {\n                swcPrinterKasir.isChecked = !swcPrinterKasir.isChecked\n            }\n            swcPrinterKasir.setOnCheckedChangeListener { _, b ->\n                viewModel.onClickPrinterKasir(b)\n            }\n\n            clPrinterSetoran.setOnClickListener {\n                swcPrinterSetoran.isChecked = !swcPrinterSetoran.isChecked\n            }\n            swcPrinterSetoran.setOnCheckedChangeListener { _, b ->\n                viewModel.onClickPrinterSetoran(b)\n            }\n\n            clPrinterKitchen.setOnClickListener {\n                swcPrinterKitchen.isChecked = !swcPrinterKitchen.isChecked\n            }\n            swcPrinterKitchen.setOnCheckedChangeListener { _, b ->\n                viewModel.onClickPrinterKitchen(b)\n            }\n\n            btnSimpanEdit.setOnClickListener {\n                viewModel.doSave()\n            }\n\n            btnKitchenPlus.setOnClickListener {\n                viewModel.onClickAddPrinterKitchen()\n            }\n            btnKitchenMinus.setOnClickListener {\n                viewModel.onClickMinuPrintersKitchen()\n            }\n\n            btnTesPrint.setOnClickListener {\n                viewModel.onClickTesPrint()\n            }\n            rbSize1.setOnCheckedChangeListener { _, b ->\n                if(b)\n                    viewModel.onClickRadio(getString(R.string.kertas58))\n            }\n            rbSize2.setOnCheckedChangeListener { _, b ->\n                if(b)\n                    viewModel.onClickRadio(getString(R.string.kertas80))\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.msg.collect {\n                showSnackbar(it)\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                viewModel.event.collect { event ->\n                    when(event){\n                        AddPrinterViewModel.UIEvent.RequestTipePrinter -> {\n                            val dialog = TipePrinterDialog(onSaveClick = { data ->\n                                Toast.makeText(requireContext(), data, Toast.LENGTH_LONG).show()\n                                val printer = viewModel.state.mPrinter ?: Printer()\n                                viewModel.updateState(\n                                    viewModel.state.copy(\n                                        tipePrinter = data,\n                                        mPrinter = printer.copy(\n                                            tipe = getTipePrinter(data)\n                                        )\n                                    )\n                                )\n\n                                if (data == resources.getString(R.string.bluetooth_printer)){\n                                    val action = AddPrinterFragmentDirections.actionAddPrinterFragmentToListPrinterFragment()\n                                    findNavController().navigate(action)\n                                    return@TipePrinterDialog\n                                } else{\n                                    return@TipePrinterDialog\n                                }\n                            }, requireContext())\n                            dialog.show(parentFragmentManager, TAG)\n                        }\n                        AddPrinterViewModel.UIEvent.NavigateBack ->{\n                            findNavController().popBackStack()\n                        }\n                        AddPrinterViewModel.UIEvent.RequestTesPrint -> {\n                            val printer = viewModel.state.mPrinter\n                            if(printer != null && printer.address.isNotEmpty())\n                                printerHelper.testPrint(requireActivity(), printer)\n                            else\n                                showSnackbar(\"Harap pilih printer terlebih dahulu\")\n                        }\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                viewModel.viewStates().collect { state ->\n                    state?.let {\n                        binding.apply {\n                            it.mPrinter?.let {\n                                etNamaPrinter.setText(it.printerName)\n                                etMacAddress.setText(it.address)\n                                etMacAddress.isEnabled = it.tipe != 0\n                                val tipe = when(it.tipe){\n                                    0 -> getString(R.string.bluetooth_printer)\n                                    else -> getString(R.string.network_printer)\n                                }\n                                etTipePrinter.setText(tipe)\n\n                                rbSize1.isChecked = it.size == getString(R.string.kertas58)\n                                rbSize2.isChecked = it.size == getString(R.string.kertas80)\n                                swcPrinterKasir.isChecked =  it.isReceipt\n                                swcPrinterKitchen.isChecked =  it.isKitchen\n                                swcPrinterSetoran.isChecked =  it.isReport\n                            }\n                            btnSimpanEdit.background = ContextCompat.getDrawable(\n                                requireActivity(),\n                                if(state.mPrinter != null)\n                                    R.drawable.btn_rect_primary\n                                else\n                                    R.drawable.btn_rect_disable\n                            )\n\n                            btnTesPrint.isVisible = state.mPrinter != null && state.mPrinter!!.printerName.isNotEmpty() && state.mPrinter!!.address.isNotEmpty()\n\n                            rvKitchenPrinter.isVisible = state.printerKitchenList.isNotEmpty()\n                            llQtyKitchen.isVisible = state.printerKitchenList.isNotEmpty()\n\n                            tvQty.text = state.printerKitchenList.size.toString()\n\n                            sectionKitchenAdapter.submitList(state.printerKitchenList)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n        if (viewModel.state.mPrinter == null || viewModel.state.mPrinter?.address.isNullOrEmpty())\n            viewModel.onClickShowPrinter()\n    }\n\n    private fun getTipePrinter(tipe : String): Int =\n        when(tipe){\n            getString(R.string.bluetooth_printer) -> 0\n            getString(R.string.network_printer) -> 1\n            else -> -1\n        }\n\n    private fun getNamaPrinter(): String{\n        return binding.etNamaPrinter.text.toString()\n    }\n\n    private fun getMacAddress(): String{\n        return binding.etMacAddress.text.toString()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterFragment.kt	(date 1670385467981)
@@ -18,8 +18,10 @@
 import com.bits.bee.bpmc.domain.printer.helper.PrinterHelper
 import com.bits.bee.bpmc.presentation.base.BaseFragment
 import com.bits.bee.bpmc.presentation.dialog.tipe_printer.TipePrinterDialog
+import com.bits.bee.bpmc.presentation.ui.pos.PosModeState
 import com.bits.bee.bpmc.presentation.ui.setting_printer.list_printer_search.PrinterDevice
 import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.flow.first
 import kotlinx.coroutines.launch
 import javax.inject.Inject
 
@@ -205,6 +207,12 @@
                 viewModel.viewStates().collect { state ->
                     state?.let {
                         binding.apply {
+                            val mode = viewModel.modePreferences.first()
+                            (mode != PosModeState.RetailState).also {
+                                clPrinterKitchen.isVisible = it
+                                rvKitchenPrinter.isVisible = it
+                                llQtyKitchen.isVisible = it
+                            }
                             it.mPrinter?.let {
                                 etNamaPrinter.setText(it.printerName)
                                 etMacAddress.setText(it.address)
Index: app/src/main/java/com/bits/bee/bpmc/domain/report/ReportGeneratorInvoice.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.domain.report\n\nimport android.content.ContentValues\nimport android.util.Log\nimport com.bits.bee.bpmc.domain.model.*\nimport com.bits.bee.bpmc.domain.repository.*\nimport com.bits.bee.bpmc.domain.usecase.common.*\nimport com.bits.bee.bpmc.domain.usecase.pos.GetItemGroupAddOnUseCase\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.CurrencyUtils\nimport com.bits.bee.bpmc.utils.DateFormatUtils\nimport kotlinx.coroutines.flow.first\nimport java.math.BigDecimal\nimport java.math.RoundingMode\nimport java.util.*\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\n/**\n * Created by aldi on 03/11/22\n */\n@Singleton\nclass ReportGeneratorInvoice @Inject constructor(\n    private val beePreferenceManager: BeePreferenceManager,\n    private val getActiveBranchUseCase: GetActiveBranchUseCase,\n    private val getSaledBySaleUseCase: GetSaledBySaleUseCase,\n    private val saleCrcvRepository: SaleCrcvRepository,\n    private val saleRepository: SaleRepository,\n    private val saledRepository: SaledRepository,\n    private val channelRepository: ChannelRepository,\n    private val getSaleAddOnBySaleUseCase: GetSaleAddOnBySaleUseCase,\n    private val getSaleAddonDByAddonUseCase: GetSaleAddonDByAddonUseCase,\n    private val salePromoRepository: SalePromoRepository,\n    private val cadjRepository: CadjRepository,\n    private val getItemGroupAddOnUseCase: GetItemGroupAddOnUseCase,\n    private val userRepository: UserRepository,\n    private val getRegUseCase: GetRegUseCase\n) {\n\n    suspend fun printRptInvoice(sale: Sale, maxChar: Int): String {\n        val builder = StringBuilder()\n        builder.append(ReportHelper.centerString(printHeader(maxChar), maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(printInvoiceHeader(sale, maxChar, false))\n        builder.append(printInvoiceSaled(sale, mutableListOf(), maxChar, false))\n        builder.append(printInvoiceFooter(sale, maxChar))\n        builder.append(ReportHelper.centerString(printFooter(maxChar), maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        println(builder.toString())\n        return builder.toString()\n    }\n\n    suspend fun printKitchen(\n        sale: Sale,\n        kitchen_name: String,\n        saleds: List<Saled>,\n        maxChar: Int\n    ): String {\n        val builder = StringBuilder()\n        builder.append(ReportHelper.centerString(sale.channel, maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(printHeaderDapur(kitchen_name, maxChar))\n        builder.append(printInvoiceHeader(sale, maxChar, true))\n        builder.append(printInvoiceSaled(sale, saleds, maxChar, true))\n        builder.append(ReportHelper.centerString(printTotalQtyKitchen(saleds), maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        println(builder.toString())\n        return builder.toString()\n    }\n\n    private fun printHeaderDapur(name: String, maxChar: Int): String {\n        var s = \"\"\n        val builder = StringBuilder(maxChar)\n        builder.append(\"Dapur  : \")\n        builder.append(name)\n        builder.append(BPMConstants.CHAR_ENTER)\n        s += builder\n        return s\n    }\n\n    suspend fun printRptInvoiceBillGopay(\n        sale: Sale,\n        maxChar: Int\n    ): String {\n        val builder = StringBuilder()\n        builder.append(ReportHelper.centerString(printHeader(maxChar), maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(printInvoiceHeaderGopay(sale, maxChar))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(ReportHelper.centerString(\"TAGIHAN\", maxChar))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"SILAHKAN SCAN KODE QR\", maxChar))\n        builder.append(ReportHelper.centerString(\"UNTUK MEMBAYAR\", maxChar))\n        return builder.toString()\n    }\n\n    fun printRptFooterBillGopay(sale: Sale, maxChar: Int): String {\n        val builder = StringBuilder()\n        builder.append(\n            ReportHelper.centerString(\n                \"Rp \" + CurrencyUtils.formatCurrency(\n                    sale.total,\n                ), maxChar\n            )\n        )\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"*** BUKAN BUKTI PEMBAYARAN ***\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        return builder.toString()\n    }\n\n    //    untuk cetak struk duplikat\n    suspend fun printRptInvoiceDuplicate(sale: Sale, maxChar: Int): String {\n        val builder = StringBuilder()\n        builder.append(ReportHelper.centerString(printHeader( maxChar), maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(printInvoiceHeader(sale, maxChar, false))\n        builder.append(printInvoiceSaled(sale, mutableListOf(), maxChar, false))\n        if (sale.isVoid) {\n            builder.append(ReportHelper.centerString(printFooterVoid(), maxChar))\n        } else {\n            builder.append(ReportHelper.centerString(printFooterDuplicate(), maxChar))\n        }\n        builder.append(printInvoiceFooter(sale, maxChar))\n        builder.append(ReportHelper.centerString(printFooter(maxChar), maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        return builder.toString()\n    }\n\n    suspend fun printRptClosingCashierNew(posses: Posses, maxChar: Int): String {\n        val notaPreferences = beePreferenceManager.notaPreferences.first()\n        val builder = StringBuilder()\n        builder.append(ReportHelper.centerString(\"Rekapitulasi Setoran Kasir\", maxChar))\n        builder.append(printHeaderRekapKasir(posses, maxChar))\n        builder.append(ReportHelper.generateLine(\"-\", maxChar))\n        builder.append(printRekapClosingSetoran(posses, maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Pembayaran Tunai\", maxChar))\n        builder.append(printRekapClosingPaymentCash(posses, maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Pembayaran Non Tunai\", maxChar))\n        builder.append(printRekapClosingPaymentNonCash(posses, maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Rincian Total Pemasukan\", maxChar))\n        builder.append(printRekapClosingPayment(posses, maxChar))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(\"*Tidak termasuk nota void\")\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Expense\", maxChar))\n        builder.append(printRekapClosingCashTotal(posses.possesId!!.toLong(), maxChar))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Rincian Expense\", maxChar))\n        builder.append(printRekapClosingTransaksiCashInOut(posses.possesId!!.toLong(), maxChar))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Pembayaran Kartu Debit\", maxChar))\n        builder.append(printRekapClosingTransaksiNonTunai(posses.possesId!!.toLong(), maxChar, \"DC\"))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        builder.append(ReportHelper.centerString(\"Pembayaran Kartu Kredit\", maxChar))\n        builder.append(printRekapClosingTransaksiNonTunai(posses.possesId!!.toLong(), maxChar, \"CC\"))\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        val printRekapPerCust = notaPreferences.isRekapCust\n        val printRekapPerItem = notaPreferences.isRekapItem\n        val printRekapFaktur = notaPreferences.isRekapFaktur\n        val printRekapChannel = notaPreferences.isRekapChannel\n        val printRekapItemChannel = notaPreferences.isRekapItemChannel\n        if (printRekapChannel) {\n            builder.append(ReportHelper.centerString(\"Rekapitulasi Per Channel\", maxChar))\n            builder.append(printRekapClosingTransaksiChannel(posses.possesId!!.toLong(), maxChar))\n            builder.append(ReportHelper.generateLine(\"=\", maxChar))\n            builder.append(BPMConstants.CHAR_ENTER)\n        }\n        if (printRekapPerItem) {\n            builder.append(\n                ReportHelper.centerString(\n                    \"Rekapitulasi Total Item Terjual\",\n                    maxChar\n                )\n            )\n            builder.append(BPMConstants.CHAR_ENTER)\n            if (printRekapItemChannel) {\n                builder.append(\n                    printRekapClosingTransaksiWithDiskonChannel(\n                        posses.possesId!!.toLong(),\n                        maxChar\n                    )\n                )\n            } else {\n                builder.append(\n                    printRekapClosingTransaksiWithDiskon(\n                        posses.possesId!!.toLong(),\n                        maxChar\n                    )\n                )\n            }\n        }\n        if (printRekapPerCust) {\n            builder.append(ReportHelper.generateLine(\"=\", maxChar))\n            builder.append(BPMConstants.CHAR_ENTER)\n            builder.append(ReportHelper.centerString(\"Rekapitulasi Per Customer\", maxChar))\n            builder.append(printRekapClosingCustomer(posses.possesId!!.toLong(), maxChar))\n        }\n        if (printRekapFaktur) {\n            builder.append(\n                printRekapFaktur(\n                    \"Rekap Penjualan Tunai\",\n                    posses,\n                    isCash = true,\n                    isVoid = false,\n                    maxChar = maxChar\n                )\n            )\n            builder.append(\n                printRekapFaktur(\n                    \"Rekap Penjualan Tunai (Void)\",\n                    posses,\n                    isCash = true,\n                    isVoid = true,\n                    maxChar = maxChar\n                )\n            )\n            builder.append(\n                printRekapFaktur(\n                    \"Rekap Penjualan Non Tunai\",\n                    posses,\n                    isCash =false,\n                    isVoid = false,\n                    maxChar = maxChar\n                )\n            )\n            builder.append(\n                printRekapFaktur(\n                    \"Rekap Penj. Non Tunai (Void)\",\n                    posses,\n                    isCash = false,\n                    isVoid = true,\n                    maxChar = maxChar\n                )\n            )\n        }\n        //        builder.append(\"*Tidak termasuk nota void\");\n//        builder.append(BPMConstants.CHAR_ENTER);\n        builder.append(ReportHelper.generateLine(\"=\", maxChar))\n        builder.append(BPMConstants.CHAR_ENTER)\n        Log.i(\"Print Rekap \", builder.toString())\n        return builder.toString()\n    }\n\n    private suspend fun printHeader(maxChar: Int): String {\n        val notaPreferences = beePreferenceManager.notaPreferences.first()\n        val branch = getActiveBranchUseCase().first() ?: throw Exception(\"No branch active!!\")\n        val companyAddressLong: Int = branch.cmpAddress.length\n        var header = notaPreferences.header\n        val valHeader = notaPreferences.isLoadLogo\n\n//        jika header belum di set\n        if (header.isEmpty() && valHeader && companyAddressLong <= maxChar) {\n            header = (branch.cmpName + \"\\n\"\n                    + branch.cmpAddress.substring(0, companyAddressLong) + \"\\n\"\n                    + branch.name + \", \" + branch.cmpPhone + \"\\n\")\n        } else if (header.isEmpty() && valHeader && companyAddressLong >= maxChar) {\n            header = (branch.cmpName + \"\\n\"\n                    + branch.cmpAddress.substring(0, maxChar) + \"\\n\"\n                    + branch.cmpAddress.substring(maxChar, companyAddressLong) + \"\\n\"\n                    + branch.name + \", \" + branch.cmpPhone + \"\\n\")\n        } else if (!valHeader) {\n            header = \"\"\n        } else if (valHeader && header.isNotEmpty()) {\n            if (header.length > maxChar) {\n                header = ReportHelper.cutString(header, maxChar)\n            }\n        }\n        return header\n    }\n\n    private suspend fun printFooter(maxChar: Int): String {\n        val notaPreferences = beePreferenceManager.notaPreferences.first()\n\n        var footer = notaPreferences.footer\n        val valFooter = notaPreferences.isFooter\n\n//        jika footer belum di setting\n        if (footer.isEmpty() && valFooter) {\n            footer = \"** Supported by bee.id **\"\n        } else if (!valFooter) {\n            footer = \"\"\n        } else if (valFooter && footer.isNotEmpty()) {\n            if (footer.length > maxChar) footer = ReportHelper.cutString(footer, maxChar)\n        }\n        return footer\n    }\n\n    //    footer untuk struk duplikat\n    private fun printFooterDuplicate(): String {\n        var footer = \"\"\n        footer += \"== Duplicate ==\\n\"\n        return footer\n    }\n\n    //    footer untuk struk duplikat\n    private fun printFooterVoid(): String {\n        var footer = \"\"\n        footer += \"*** VOID ***\\n\"\n        return footer\n    }\n\n    private suspend fun printInvoiceHeader(sale: Sale, maxChar: Int, kitchen: Boolean): String {\n        val posPreferences = beePreferenceManager.posPreferences.first()\n        var s = \"\"\n        val trxDate = DateFormatUtils.formatDateToString(\"dd-MM-yyyy kk:mm\", sale.trxDate)\n        val noOrder = sale.trxNo\n        val oprName = sale.userName\n        val isEnableCust = posPreferences.isKonfirmasiCust\n        val cust = sale.bpName\n        val member = sale.bpName\n        val channel = sale.channel\n\n        val trxDateB = StringBuilder(maxChar)\n        val noOrderB = StringBuilder(maxChar)\n        val oprNameB = StringBuilder(maxChar)\n        val custMemberB = StringBuilder(maxChar)\n        val custB = StringBuilder(maxChar)\n        val channelB = StringBuilder(maxChar)\n        trxDateB.append(\"Tanggal: \")\n        trxDateB.append(trxDate)\n        trxDateB.append(BPMConstants.CHAR_ENTER)\n        noOrderB.append(\"No Trx : \")\n        noOrderB.append(noOrder)\n        noOrderB.append(BPMConstants.CHAR_ENTER)\n        oprNameB.append(\"Kasir  : \")\n        oprNameB.append(oprName)\n        oprNameB.append(BPMConstants.CHAR_ENTER)\n        custMemberB.append(\"Member : \")\n        custMemberB.append(member)\n        custMemberB.append(BPMConstants.CHAR_ENTER)\n        custB.append(\"Cust  : \")\n        custB.append(cust)\n        custB.append(BPMConstants.CHAR_ENTER)\n        channelB.append(\"Channel: \")\n        channelB.append(channel)\n        channelB.append(BPMConstants.CHAR_ENTER)\n        s += trxDateB\n        if (!kitchen) s += oprNameB\n        s += noOrderB\n        if (!kitchen) s += custMemberB\n        if (isEnableCust) {\n            s += custB\n        }\n        if (!kitchen) s += channelB\n        s += ReportHelper.generateLine(\"=\", maxChar)\n        return s\n    }\n\n    private fun printInvoiceHeaderGopay(sale: Sale, maxChar: Int): String {\n        var s = \"\"\n        val trxID: String = sale.gopayTransactionId\n        val noOrder: String = sale.trxNo\n        val trxIdB = StringBuilder(maxChar)\n        val noOrderB = StringBuilder(maxChar)\n        trxIdB.append(\"Transaction ID: \")\n        trxIdB.append(trxID)\n        trxIdB.append(BPMConstants.CHAR_ENTER)\n        noOrderB.append(\"No Trx : \")\n        noOrderB.append(noOrder)\n        noOrderB.append(BPMConstants.CHAR_ENTER)\n        s += trxIdB\n        s += noOrderB\n        return s\n    }\n\n    suspend fun printHeaderRekapKasir(posses: Posses, maxChar: Int): String {\n        var s = \"\"\n        val user = userRepository.getUserById(posses.userId).first()\n        val trxno: String = posses.trxNo\n        val trxDate: String = DateFormatUtils.formatDateToString(\"dd-MM-yyyy\", posses.trxDate)\n        val startTime: String = DateFormatUtils.formatDateToString(\"kk:mm:ss\", posses.startTime)\n        val endTime: String =\n            DateFormatUtils.formatDateToString(BPMConstants.DEFAULT_DATE_FORMAT, posses.endTime ?: Date())\n        val startDateTime = String.format(\"%s %s\", trxDate, startTime)\n        val endDateTime = String.format(\"%s\", endTime)\n        val shift: String = posses.shift.toString()\n\n        val lblTrxDate = StringBuilder(maxChar)\n        val lblStartTime = StringBuilder(maxChar)\n        val lblEndTime = StringBuilder(maxChar)\n        val lblShift = StringBuilder(maxChar)\n        val lblOperator = StringBuilder(maxChar)\n        //\n        lblTrxDate.append(\"Posses   \")\n        lblTrxDate.append(ReportHelper.generateTab(lblTrxDate.toString(), trxno, BPMConstants.BPM_TAB_HEADER_LARGE, maxChar))\n        lblTrxDate.append(\": \")\n        lblTrxDate.append(trxno)\n        lblTrxDate.append(BPMConstants.CHAR_ENTER)\n        lblStartTime.append(\"Buka     \")\n        lblStartTime.append(ReportHelper.generateTab(lblStartTime.toString(), startDateTime, BPMConstants.BPM_TAB_HEADER_NORMAL, maxChar))\n        lblStartTime.append(\": \")\n        lblStartTime.append(startDateTime)\n        lblStartTime.append(BPMConstants.CHAR_ENTER)\n        lblEndTime.append(\"Tutup    \")\n        lblEndTime.append(ReportHelper.generateTab(lblEndTime.toString(), endDateTime, BPMConstants.BPM_TAB_HEADER_NORMAL, maxChar))\n        lblEndTime.append(\": \")\n        lblEndTime.append(endDateTime)\n        lblEndTime.append(BPMConstants.CHAR_ENTER)\n        lblOperator.append(\"Operator \")\n        lblOperator.append(\": \")\n        lblOperator.append(user.name)\n        lblOperator.append(BPMConstants.CHAR_ENTER)\n        lblShift.append(\"Shift    \")\n        lblShift.append(\": \")\n        lblShift.append(shift)\n        lblShift.append(BPMConstants.CHAR_ENTER)\n\n        s += lblTrxDate\n        s += lblStartTime\n        s += lblEndTime\n        s += lblOperator\n        s += lblShift\n        return s\n    }\n\n\n    private suspend fun printInvoiceFooter(sale: Sale, maxChar: Int): String {\n        var s = \"\"\n        val saleCrcList = saleCrcvRepository.getSalecrcvBySale(sale.id!!).first()\n\n        val surcamt = if(saleCrcList.isNotEmpty()) CurrencyUtils.formatCurrency(BigDecimal(saleCrcList[0].surcAmt ?: \"0\")) else \"\"\n        val subTotal: String = CurrencyUtils.formatCurrency(sale.subtotal.setScale(0, RoundingMode.HALF_UP))\n        val tax = CurrencyUtils.formatCurrency(sale.taxAmt.setScale(0, RoundingMode.HALF_UP))\n        val roundAmt: String = CurrencyUtils.formatCurrency(sale.rounding)\n        val discAmt: String = CurrencyUtils.formatCurrency(sale.discAmt)\n\n        var disc2Amt = \"\"\n        if(sale.discExp.isNotEmpty()) {\n            disc2Amt = if (sale.discExp.substring(sale.discExp.length - 1).contains(\"%\")) {\n                CurrencyUtils.formatCurrency(sale.discAmt)\n            } else {\n                CurrencyUtils.formatCurrency(BigDecimal(sale.discExp))\n            }\n        }\n        val grandTotal = CurrencyUtils.formatCurrency(sale.total.setScale(0, RoundingMode.HALF_UP))\n\n        val changeAmt = if (sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI) {\n            \"0\"\n        } else {\n            CurrencyUtils.formatCurrency(sale.totChange.setScale(0, RoundingMode.HALF_UP))\n\n        }\n        val paidAmt = CurrencyUtils.formatCurrency(sale.totPaid.setScale(0, RoundingMode.HALF_UP))\n\n        //\n        val subTotalB = StringBuilder(maxChar)\n        val taxB = StringBuilder(maxChar)\n        val discAmtB = StringBuilder(maxChar)\n        val disc2AmtB = StringBuilder(maxChar)\n        val grandTotalB = StringBuilder(maxChar)\n        val paidAmtB = StringBuilder(maxChar)\n        val changeAmtB = StringBuilder(maxChar)\n        val surchargeAmtB = StringBuilder(maxChar)\n        val roundAmtB = StringBuilder(maxChar)\n        //\n        for (i in 0 until grandTotalB.capacity()) {\n            subTotalB.append(BPMConstants.CHAR_SPACE)\n            taxB.append(BPMConstants.CHAR_SPACE)\n            surchargeAmtB.append(BPMConstants.CHAR_SPACE)\n            discAmtB.append(BPMConstants.CHAR_SPACE)\n            disc2AmtB.append(BPMConstants.CHAR_SPACE)\n            grandTotalB.append(BPMConstants.CHAR_SPACE)\n            paidAmtB.append(BPMConstants.CHAR_SPACE)\n            changeAmtB.append(BPMConstants.CHAR_SPACE)\n            roundAmtB.append(BPMConstants.CHAR_SPACE)\n        }\n        //\n        val maxLengthArray = IntArray(9)\n        var maxLength = 0\n        //\n        maxLengthArray[0] = subTotal.length\n        maxLengthArray[1] = tax.length\n        maxLengthArray[2] = surcamt.length\n        maxLengthArray[3] = discAmt.length\n        maxLengthArray[4] = disc2Amt.length\n        maxLengthArray[5] = grandTotal.length\n        maxLengthArray[6] = paidAmt.length\n        maxLengthArray[7] = changeAmt.length\n        maxLengthArray[8] = roundAmt.length\n        //\n        for (i in maxLengthArray.indices) {\n            if (maxLengthArray[i] > maxLength) {\n                maxLength = maxLengthArray[i]\n            }\n        }\n        //\n        subTotalB.replace(0, \"Subtotal\".length, \"Subtotal\")\n        subTotalB.replace(subTotalB.capacity() - subTotal.length, subTotalB.capacity(), subTotal + BPMConstants.CHAR_ENTER)\n        //\n        taxB.replace(0, \"Pajak\".length, \"Pajak\")\n        taxB.replace(\n            taxB.capacity() - tax.length,\n            taxB.capacity(),\n            tax + BPMConstants.CHAR_ENTER\n        )\n        surchargeAmtB.replace(0, \"Surcharge\".length, \"Surcharge\")\n        surchargeAmtB.replace(\n            surchargeAmtB.capacity() - surcamt.length,\n            surchargeAmtB.capacity(),\n            surcamt + BPMConstants.CHAR_ENTER\n        )\n\n//        discAmtB.replace(0, \"Anda Hemat\".length(), \"Anda Hemat\");\n//        discAmtB.replace(discAmtB.capacity()-discAmt.length()-2, discAmtB.capacity(), \"(\"+discAmt+\")\");\n//\n        disc2AmtB.replace(0, \"Diskon\".length, \"Diskon\")\n        disc2AmtB.replace(\n            disc2AmtB.capacity() - disc2Amt.length - 2,\n            disc2AmtB.capacity(),\n            \"(\" + disc2Amt + \")\" + BPMConstants.CHAR_ENTER\n        )\n        roundAmtB.replace(0, \"Pembulatan\".length, \"Pembulatan\")\n        roundAmtB.replace(\n            roundAmtB.capacity() - roundAmt.length,\n            roundAmtB.capacity(),\n            roundAmt + BPMConstants.CHAR_ENTER\n        )\n        //\n        grandTotalB.replace(0, \"Total\".length, \"Total\")\n        grandTotalB.replace(\n            grandTotalB.capacity() - grandTotal.length,\n            grandTotalB.capacity(),\n            grandTotal + BPMConstants.CHAR_ENTER\n        )\n        val paidType = when(sale.termType){\n            BPMConstants.BPM_DEFAULT_TYPE_KREDIT -> \"Kartu Kredit\"\n            BPMConstants.BPM_DEFAULT_TYPE_DEBIT -> \"Kartu Debit\"\n            else -> BPMConstants.BPM_DEFAULT_TYPE_TUNAI\n        }\n        paidAmtB.replace(0, paidType.length, paidType)\n        paidAmtB.replace(\n            paidAmtB.capacity() - paidAmt.length,\n            paidAmtB.capacity(),\n            paidAmt + BPMConstants.CHAR_ENTER\n        )\n        changeAmtB.replace(0, \"Kembalian\".length, \"Kembalian\")\n        changeAmtB.replace(\n            changeAmtB.capacity() - changeAmt.length,\n            changeAmtB.capacity(),\n            changeAmt + BPMConstants.CHAR_ENTER\n        )\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += subTotalB\n        if (disc2Amt != \"0\" && !disc2Amt.isEmpty()) {\n            s += disc2AmtB\n        }\n\n        s += taxB\n\n        if (sale.rounding.compareTo(BigDecimal.ZERO) != 0) s += roundAmtB\n        if (sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI) {\n            s += surchargeAmtB\n        }\n        s += grandTotalB\n        s += paidAmtB\n        s += changeAmtB\n        //        s += discAmtB;\n        s += ReportHelper.generateLine(\"=\", maxChar)\n        return s\n    }\n\n    private suspend fun printInvoiceSaled(\n        sale: Sale,\n        saledList: List<Saled>,\n        maxChar: Int,\n        kitchen: Boolean\n    ): String {\n        val saledList1 = if (!kitchen) getSaledBySaleUseCase(sale.id!!).first() else saledList\n        val grpAddOn = getItemGroupAddOnUseCase().first()\n\n        var s = \"\"\n        var itemName: String\n        var itemQty: String\n        var itemPrice: String\n        var itemDisc: String\n        var itemDiscAmt: String\n        var itemSubTotal: String\n        var qtyAndPrice: String\n        var subTotal: String\n        var disc: String\n        var note: String\n        var spaceQtyAndPrice = \"\"\n        var spaceSubTotal = \"\"\n\n\n//        Collections.reverse(saledList);\n        for (saled in saledList1) {\n            if (grpAddOn == null || (saled.item != null && saled.item!!.itemGrpId != null && saled.item!!.itemGrpId!! != grpAddOn.id)) {\n                var maxQtyAndPriceLength = 0\n                var maxSubTotalLength = 0\n                var itemNameB = StringBuilder(maxChar)\n                var itemDetailB = StringBuilder(maxChar)\n                var itemDiscB = StringBuilder(maxChar)\n                val itemNoteB = StringBuilder(maxChar)\n                for (i in 0 until itemNameB.capacity()) {\n                    itemNameB.append(BPMConstants.CHAR_SPACE)\n                    itemDetailB.append(BPMConstants.CHAR_SPACE)\n                    itemDiscB.append(BPMConstants.CHAR_SPACE)\n                    itemNoteB.append(BPMConstants.CHAR_SPACE)\n                }\n                for (j in 0 until itemNameB.capacity()) {\n                    itemNameB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                }\n                for (j in 0 until itemDetailB.capacity()) {\n                    itemDetailB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                }\n                for (j in 0 until itemDiscB.capacity()) {\n                    itemDiscB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                }\n                for (j in 0 until itemNoteB.capacity()) {\n                    itemNoteB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                }\n                itemQty = CurrencyUtils.formatCurrency(saled.qty)\n                itemName =\n                    if (kitchen) itemQty + BPMConstants.CHAR_SPACE + saled.name else saled.name\n                itemDisc = saled.discExp\n                itemDiscAmt =\n                    CurrencyUtils.formatCurrency(\n                        saled.totalDiscAmt\n                    )\n\n                itemPrice =\n                    CurrencyUtils.formatCurrency(\n                        saled.listPrice\n                    )\n\n                itemSubTotal = CurrencyUtils.formatCurrency(\n                    saled.qty.multiply(saled.listPrice)\n                        .setScale(2, RoundingMode.HALF_UP)\n                )\n\n                if (itemName.length > itemNameB.capacity()) {\n                    itemName = itemName.substring(0, itemNameB.capacity())\n                }\n                if (itemQty.length > maxQtyAndPriceLength) {\n                    maxQtyAndPriceLength = itemQty.length\n                }\n                if (itemSubTotal.length > maxSubTotalLength) {\n                    maxSubTotalLength = itemSubTotal.length\n                }\n                itemNameB.replace(0, itemName.length, itemName)\n                itemNameB.replace(\n                    itemNameB.capacity() - itemName.length,\n                    itemNameB.capacity(),\n                    BPMConstants.CHAR_ENTER\n                )\n                for (j in 0 until maxQtyAndPriceLength) {\n                    spaceQtyAndPrice += BPMConstants.CHAR_SPACE\n                }\n                for (j in 0 until maxSubTotalLength) {\n                    spaceSubTotal += BPMConstants.CHAR_SPACE\n                }\n                qtyAndPrice = BPMConstants.CHAR_SPACE + spaceQtyAndPrice.substring(\n                    0,\n                    maxQtyAndPriceLength - itemQty.length\n                ) + itemQty + \" x \" + itemPrice\n                subTotal = BPMConstants.CHAR_SPACE + spaceSubTotal.substring(\n                    0,\n                    maxSubTotalLength - itemSubTotal.length\n                ) + itemSubTotal\n                disc = if (!saled.discExp.contains(\"%\")) {\n                    \"Disc Rp$itemDisc\"\n                } else {\n                    \"Disc $itemDisc\"\n                }\n                itemDetailB.replace(0, qtyAndPrice.length, qtyAndPrice)\n                itemDetailB.replace(\n                    itemDetailB.capacity() - subTotal.length,\n                    itemDetailB.capacity(),\n                    itemSubTotal + BPMConstants.CHAR_ENTER\n                )\n                itemDiscB.replace(0, disc.length, disc)\n                itemDiscB.replace(\n                    itemDiscB.capacity() - itemDiscAmt.length - 3,\n                    itemDiscB.capacity(),\n                    \"(\" + itemDiscAmt + \")\" + BPMConstants.CHAR_ENTER\n                )\n                s += itemName + BPMConstants.CHAR_ENTER\n                if (!kitchen) {\n                    s += itemDetailB\n                }\n                if (saled.discAmt > BigDecimal.ONE && !kitchen) {\n                    s += itemDiscB\n                }\n\n                val listSalePromo = salePromoRepository.getPromoBySaledBonus(sale.id!!, saled.id!!).first()\n                if (!kitchen && listSalePromo.isNotEmpty()) s += \"Free\" + BPMConstants.CHAR_ENTER\n\n                val saleAddOn = getSaleAddOnBySaleUseCase(sale.id!!).first()\n                saleAddOn?.let {\n                    val saleAddOnDList = getSaleAddonDByAddonUseCase(saleAddOn.id!!).first()\n                    for (saleAddOnD in saleAddOnDList) {\n                        maxQtyAndPriceLength = 0\n                        maxSubTotalLength = 0\n                        spaceQtyAndPrice = \"\"\n                        spaceSubTotal = \"\"\n                        maxQtyAndPriceLength = 0\n                        maxSubTotalLength = 0\n                        itemNameB = StringBuilder(maxChar)\n                        itemDetailB = StringBuilder(maxChar)\n                        itemDiscB = StringBuilder(maxChar)\n                        for (i in 0 until itemNameB.capacity()) {\n                            itemNameB.append(BPMConstants.CHAR_SPACE)\n                            itemDetailB.append(BPMConstants.CHAR_SPACE)\n                            itemDiscB.append(BPMConstants.CHAR_SPACE)\n                        }\n                        if (saled.dno == saleAddOnD.upSaled?.dno) {\n                            val saled1: Saled = saleAddOnD.saled!!\n                            for (j in 0 until itemNameB.capacity()) {\n                                itemNameB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                            }\n                            for (j in 0 until itemDetailB.capacity()) {\n                                itemDetailB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                            }\n                            for (j in 0 until itemDiscB.capacity()) {\n                                itemDiscB.replace(j, j + 1, BPMConstants.CHAR_SPACE)\n                            }\n                            val itemQtyPcs: BigDecimal =\n                                saled1.qty.divide(saled.qty)\n                            itemQty = CurrencyUtils.formatCurrency(saled1.qty)\n                            itemName =\n                                if (kitchen) BPMConstants.CHAR_SPACE + \"+\" + BPMConstants.CHAR_SPACE + itemQtyPcs + BPMConstants.CHAR_SPACE + saled1.name else BPMConstants.CHAR_SPACE + \"+\" + BPMConstants.CHAR_SPACE + saled1.name\n                            itemDisc = CurrencyUtils.formatCurrency(saled1.disc)\n                            itemDiscAmt =\n                                CurrencyUtils.formatCurrency(\n                                    saled1.discAmt\n                                )\n\n                            itemPrice =\n                                CurrencyUtils.formatCurrency(\n                                    saled1.listPrice\n                                )\n\n                            itemSubTotal =\n                                CurrencyUtils.formatCurrency(\n                                    saled1.subtotal\n                                ) + \" \"\n                            if (itemName.length > itemNameB.capacity()) {\n                                itemName = itemName.substring(0, itemNameB.capacity())\n                            }\n                            if (itemQtyPcs.toString().length > maxQtyAndPriceLength) {\n                                maxQtyAndPriceLength = itemQtyPcs.toString().length\n                            }\n                            if (itemSubTotal.length > maxSubTotalLength) {\n                                maxSubTotalLength = itemSubTotal.length\n                            }\n                            itemNameB.replace(0, itemName.length, itemName)\n                            itemNameB.replace(\n                                itemNameB.capacity() - itemName.length,\n                                itemNameB.capacity(),\n                                BPMConstants.CHAR_ENTER\n                            )\n                            for (j in 0 until maxQtyAndPriceLength) {\n                                spaceQtyAndPrice += BPMConstants.CHAR_SPACE\n                            }\n                            for (j in 0 until maxSubTotalLength) {\n                                spaceSubTotal += BPMConstants.CHAR_SPACE\n                            }\n                            qtyAndPrice =\n                                BPMConstants.CHAR_SPACE + BPMConstants.CHAR_SPACE + BPMConstants.CHAR_SPACE + spaceQtyAndPrice.substring(\n                                    0,\n                                    maxQtyAndPriceLength - itemQtyPcs.toString().length\n                                ) + itemQtyPcs.toString() + \" x \" + itemPrice\n                            subTotal = spaceSubTotal.substring(\n                                0,\n                                maxSubTotalLength - itemSubTotal.length\n                            ) + itemSubTotal\n                            disc = if (saled1.discExp.equals(\"0\")) {\n                                \"Disc Rp$itemDisc\"\n                            } else {\n                                \"Disc $itemDisc%\"\n                            }\n                            itemDetailB.replace(0, qtyAndPrice.length, qtyAndPrice)\n                            itemDetailB.replace(\n                                itemDetailB.capacity() - subTotal.length,\n                                itemDetailB.capacity(),\n                                itemSubTotal + BPMConstants.CHAR_ENTER\n                            )\n                            if (itemQty != \"1\" && saled1.listPrice.compareTo(BigDecimal.ZERO) != 0)\n                                itemDetailB.replace(itemDetailB.length / 2, itemDetailB.length / 2 + itemQty.length, itemQty)\n                            itemDiscB.replace(0, disc.length, disc)\n                            itemDiscB.replace(\n                                itemDiscB.capacity() - itemDiscAmt.length - 3,\n                                itemDiscB.capacity(),\n                                \"(\" + itemDiscAmt + \")\" + BPMConstants.CHAR_ENTER\n                            )\n                            s += itemName + BPMConstants.CHAR_ENTER\n                            if (!kitchen) {\n                                if (itemQtyPcs.toInt() >= 1 && saled1.listPrice\n                                        .compareTo(\n                                            BigDecimal.ZERO\n                                        ) != 0\n                                ) s += itemDetailB\n                            }\n                            if (saled1.discAmt > BigDecimal.ONE && !kitchen) {\n                                s += itemDiscB\n                            }\n                        }\n                    }\n                }\n\n\n                note = \"Note : \" + saled.dNotes\n                itemNoteB.replace(0, note.length, note)\n                if (saled.dNotes.isNotEmpty()) s += itemNoteB\n                if (kitchen) s += BPMConstants.CHAR_ENTER\n            }\n        }\n        if (kitchen) {\n            s += ReportHelper.generateLine(\"-\", maxChar)\n        }\n        return s\n    }\n\n    private suspend fun printRekapClosingSetoran(posses: Posses, maxChar: Int): String {\n        var s = \"\"\n        val saleList = saleRepository.getSaleByPosses(posses.possesId!!).first()\n        val cadjList= cadjRepository.getCashInOut(posses.possesId!!.toLong()).first()\n        val totAllCash = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_TUNAI && !it.isVoid }.sumOf { it.total }\n        val totCash = saleList.filter { !it.isVoid }.sumOf { it.total }\n        val totVoid = saleList.filter { it.isVoid }.sumOf { it.total }\n        val rounding = saleList.filter { !it.isVoid }.sumOf { it.rounding }\n        val totExpIn = cadjList.filter { it.status == \"i\" }.sumOf { it.amount }\n        val totExpOut = cadjList.filter { it.status == \"o\" }.sumOf { it.amount }\n\n        val valRounding = CurrencyUtils.formatCurrency(rounding)\n        val valIncome = CurrencyUtils.formatCurrency(totCash.subtract(rounding))\n        val valTotExpense = CurrencyUtils.formatCurrency(totExpIn.subtract(totExpOut))\n\n        val lblModal = \"Modal\"\n        val lblIncome = \"Penjualan\"\n        val lblExpense = \"Expense\"\n        val lblRounding = \"Pembulatan\"\n        val lblOmset = \"Total Setoran\"\n        val lblVoid = \"Void\"\n        val lblcountIncome = \" (${saleList.filter { !it.isDraft && !it.isVoid }.size})\"\n        val lblcountVoid = \"      (${saleList.filter { it.isVoid }.size}) \"\n        val valModal: String = CurrencyUtils.formatCurrency(posses.startBal)\n\n\n        val valOmset = CurrencyUtils.formatCurrency(posses.startBal + (posses.totIn ?: BigDecimal.ZERO) - (posses.totOut ?: BigDecimal.ZERO))\n        val valVoid: String = CurrencyUtils.formatCurrency(totVoid)\n        s += lblModal\n        s += ReportHelper.generateTab(lblModal, valModal, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valModal\n        s += BPMConstants.CHAR_ENTER\n        s += lblIncome\n        s += lblcountIncome\n        s += ReportHelper.generateTab(\n            lblIncome + lblcountIncome,\n            valIncome, BPMConstants.BPM_TAB_LARGE, maxChar\n        )\n        s += valIncome\n        s += BPMConstants.CHAR_ENTER\n        s += lblExpense\n        s += ReportHelper.generateTab(\n            lblExpense,\n            valTotExpense,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valTotExpense\n        s += BPMConstants.CHAR_ENTER\n        s += lblRounding\n        s += ReportHelper.generateTab(\n            lblRounding,\n            valRounding,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valRounding\n        s += BPMConstants.CHAR_ENTER\n        s += lblOmset\n        s += ReportHelper.generateTab(lblOmset, valOmset, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valOmset\n        s += BPMConstants.CHAR_ENTER\n        if (totVoid.intValueExact() > 0) {\n            s += lblVoid\n            s += lblcountVoid\n            s += ReportHelper.generateTab(lblVoid, valVoid, 6, maxChar)\n            s += valVoid\n            s += BPMConstants.CHAR_ENTER\n        }\n        s += ReportHelper.generateLine(\"=\", maxChar)\n        return s\n    }\n\n    private suspend fun printRekapClosingPayment(posses: Posses, maxChar: Int): String {\n        val saleList = saleRepository.getSaleByPosses(posses.possesId!!).first()\n        val cadjList= cadjRepository.getCashInOut(posses.possesId!!.toLong()).first()\n        var totDebit = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_DEBIT && !it.isVoid }.sumOf { it.total }\n        var totKredit = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_KREDIT && !it.isVoid }.sumOf { it.total }\n        val totGopay = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_CASH_GOPAY && !it.isVoid }.sumOf { it.total }\n        val totCash = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_TUNAI && !it.isVoid }.sumOf { it.total }\n        val totExpIn = cadjList.filter { it.status == \"i\" }.sumOf { it.amount }\n        val totExpOut = cadjList.filter { it.status == \"o\" }.sumOf { it.amount }\n\n        var s = \"\"\n        val valTotal: String\n        val valExpense: String\n        val valSurcharge: String\n        val lblCash = \"Cash\"\n        val lblDebit = \"Debit*\"\n        val lblKredit = \"Kredit*\"\n        val lblGopay = \"Gopay\"\n        val lblTotal = \"Total\"\n        val lblSaldoAwal = \"Saldo Awal\"\n        val lblSurcharge = \"Surcharge\"\n        val lblExpense = \"Expense\"\n        val lblTotalSetoran = \"Total Setoran\"\n        val surc: BigDecimal\n        val expense: BigDecimal\n        val totCashIn = totExpIn\n        val totCashOut = totExpOut\n\n        val surcDebit: BigDecimal = saleCrcvRepository.getTotalSurchargeByPossesNonCash(posses.possesId!!, \"DC\").first() ?: BigDecimal.ZERO\n        val surcKredit: BigDecimal = saleCrcvRepository.getTotalSurchargeByPossesNonCash(posses.possesId!!, \"CC\").first() ?: BigDecimal.ZERO\n\n        totDebit = totDebit.subtract(surcDebit)\n        totKredit = totKredit.subtract(surcKredit)\n        val total: BigDecimal = totCash.add(totDebit).add(totKredit).add(totGopay)\n        surc = surcDebit.add(surcKredit)\n        expense = totCashIn.add(totCashOut)\n        val valCash = CurrencyUtils.formatCurrency(totCash)\n        val valDebit = CurrencyUtils.formatCurrency(totDebit)\n        val valKredit = CurrencyUtils.formatCurrency(totKredit)\n        val valGopay = CurrencyUtils.formatCurrency(totGopay)\n        valTotal = CurrencyUtils.formatCurrency(total)\n        val valSaldoAwal = CurrencyUtils.formatCurrency(posses.startBal)\n        valSurcharge = CurrencyUtils.formatCurrency(surc)\n        valExpense = CurrencyUtils.formatCurrency(expense)\n        val valTotalSetoran = CurrencyUtils.formatCurrency(posses.endBal)\n\n        s += lblCash\n        s += ReportHelper.generateTab(lblCash, valCash, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valCash\n        s += BPMConstants.CHAR_ENTER\n        s += lblDebit\n        s += ReportHelper.generateTab(lblDebit, valDebit, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valDebit\n        s += BPMConstants.CHAR_ENTER\n        s += lblKredit\n        s += ReportHelper.generateTab(lblKredit, valKredit, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valKredit\n        s += BPMConstants.CHAR_ENTER\n        s += lblGopay\n        s += ReportHelper.generateTab(lblGopay, valGopay, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valGopay\n        s += BPMConstants.CHAR_ENTER\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += lblTotal\n        s += ReportHelper.generateTab(lblTotal, valTotal, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valTotal\n        s += BPMConstants.CHAR_ENTER\n        s += lblSaldoAwal\n        s += ReportHelper.generateTab(\n            lblSaldoAwal,\n            valSaldoAwal,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valSaldoAwal\n        s += BPMConstants.CHAR_ENTER\n        s += lblSurcharge\n        s += ReportHelper.generateTab(\n            lblSurcharge,\n            valSurcharge,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valSurcharge\n        s += BPMConstants.CHAR_ENTER\n        s += lblExpense\n        s += ReportHelper.generateTab(\n            lblExpense,\n            valExpense,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valExpense\n        s += BPMConstants.CHAR_ENTER\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += lblTotalSetoran\n        s += ReportHelper.generateTab(\n            lblTotalSetoran,\n            valTotalSetoran,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valTotalSetoran\n        s += BPMConstants.CHAR_ENTER\n        return s\n    }\n\n    private suspend fun printRekapClosingPaymentCash(posses: Posses, maxChar: Int): String {\n\n        val saleList = saleRepository.getSaleByPosses(posses.possesId!!).first()\n        val cadjList= cadjRepository.getCashInOut(posses.possesId!!.toLong()).first()\n        val totCash = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_TUNAI && !it.isVoid }.sumOf { it.total }\n        val totVoid = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_TUNAI && it.isVoid }.sumOf { it.total }\n        val rounding = saleList.filter { !it.isVoid }.sumOf { it.rounding }\n        val totExpIn = cadjList.filter { it.status == \"i\" }.sumOf { it.amount }\n        val totExpOut = cadjList.filter { it.status == \"o\" }.sumOf { it.amount }\n        var s = \"\"\n        val valSaldoAwal: String\n        val valSetoranKasir: String\n        val valSetorButa: String\n        val valSelisih: String\n        val lblSaldoAwal = \"Saldo Awal     :\"\n        val lblCash = \"Nota Tunai     :\"\n        val lblKasMasuk = \"Kas Masuk      :\"\n        val lblVoid = \"Nota Batal     :\"\n        val lblKasKeluar = \"Kas Keluar     :\"\n        val lblRounding = \"Pembulatan     :\"\n        val lblSetroanKasir = \"Setoran Kasir  :\"\n        val lblSetorButa = \"Setor Buta     :\"\n        val lblSelisih = \"Selisih        :\"\n\n        val startBal = posses.startBal\n        val totalSetoranKasir = startBal.add(totCash).add(totExpIn).subtract(totVoid).add(totExpOut)\n        val setorButa: BigDecimal = posses.totalActualCash\n        val totalSelisih: BigDecimal = posses.totalDiffCash\n\n        val possesRegActualPosses: Reg = getRegUseCase(BPMConstants.REG_POSSES_ACTUAL_ENDCASH).first()!!\n        valSaldoAwal = CurrencyUtils.formatCurrency(startBal)\n        val valCash = CurrencyUtils.formatCurrency(totCash.subtract(rounding))\n        val valVoid = \"(\" + CurrencyUtils.formatCurrency(totVoid) + \")\"\n        val valKasMasuk = CurrencyUtils.formatCurrency(totExpIn)\n        val valRounding = CurrencyUtils.formatCurrency(rounding)\n        val valKasKeluar = CurrencyUtils.formatCurrency(totExpOut)\n        valSetoranKasir = CurrencyUtils.formatCurrency(totalSetoranKasir)\n        valSetorButa = CurrencyUtils.formatCurrency(setorButa)\n        valSelisih = \"(\" + CurrencyUtils.formatCurrency(totalSelisih) + \")\"\n\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += lblSaldoAwal\n        s += ReportHelper.generateTab(\n            lblSaldoAwal,\n            valSaldoAwal,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valSaldoAwal\n        s += BPMConstants.CHAR_ENTER\n        s += lblCash\n        s += ReportHelper.generateTab(lblCash, valCash, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valCash\n        s += BPMConstants.CHAR_ENTER\n        s += lblVoid\n        s += ReportHelper.generateTab(lblVoid, valVoid, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valVoid\n        s += BPMConstants.CHAR_ENTER\n        s += lblKasMasuk\n        s += ReportHelper.generateTab(\n            lblKasMasuk,\n            valKasMasuk,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valKasMasuk\n        s += BPMConstants.CHAR_ENTER\n        s += lblKasKeluar\n        s += ReportHelper.generateTab(\n            lblKasKeluar,\n            valKasKeluar,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valKasKeluar\n        s += BPMConstants.CHAR_ENTER\n        s += lblRounding\n        s += ReportHelper.generateTab(\n            lblRounding,\n            valRounding,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valRounding\n        s += BPMConstants.CHAR_ENTER\n        s += ReportHelper.generateSpace(lblCash.length)\n        s += ReportHelper.generateLineCustom(\"-\", maxChar - lblCash.length - 1)\n        s += lblSetroanKasir\n        s += ReportHelper.generateTab(\n            lblSetroanKasir,\n            valSetoranKasir,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valSetoranKasir\n        s += BPMConstants.CHAR_ENTER\n        if (possesRegActualPosses.value == \"1\") {\n            s += lblSetorButa\n            s += ReportHelper.generateTab(\n                lblSetorButa,\n                valSetorButa,\n                BPMConstants.BPM_TAB_LARGE,\n                maxChar\n            )\n            s += valSetorButa\n            s += BPMConstants.CHAR_ENTER\n            s += ReportHelper.generateSpace(lblCash.length)\n            s += ReportHelper.generateLineCustom(\"-\", maxChar - lblCash.length - 1)\n            s += BPMConstants.CHAR_ENTER\n            s += lblSelisih\n            s += ReportHelper.generateTab(\n                lblSelisih,\n                valSelisih,\n                BPMConstants.BPM_TAB_LARGE,\n                maxChar\n            )\n            s += valSelisih\n        }\n        s += BPMConstants.CHAR_ENTER\n        Log.d(\"RekapClose\", \"printRekapClosingPaymentCash: $s\")\n        Log.i(ContentValues.TAG, \"printRekapClosingPaymentCash: $s\")\n        return s\n    }\n\n    private suspend fun printRekapClosingPaymentNonCash(posses: Posses, maxChar: Int): String {\n        var s = \"\"\n        val saleList = saleRepository.getSaleByPosses(posses.possesId!!).first()\n        val totDebit = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_DEBIT }.sumOf { it.total }\n        val totKredit = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_KREDIT }.sumOf { it.total }\n        val totGopay = saleList.filter { it.termType == BPMConstants.BPM_DEFAULT_TYPE_CASH_GOPAY }.sumOf { it.total }\n        val totVoidNonCash = saleList.filter { it.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI && it.isVoid }.sumOf { it.total }\n        val totRoundVoidNonCash = saleList.filter { it.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI && it.isVoid }.sumOf { it.rounding }\n\n        val valDebit: String\n        val valKredit: String\n        val valGopay: String\n        val valVoid: String\n        val valRounding: String\n        val valTotalNonTunai: String\n        val valSurcharge: String\n        val valTotal: String\n        val lblDebit = \"Debit*         :\"\n        val lblKredit = \"Kredit*        :\"\n        val lblGopay = \"Gopay          :\"\n        val lblVoid = \"Non Tunai Batal:\"\n        val lblTotalNonTunai = \"Non Tunai Total:\"\n        val lblRounding = \"Pembulatan     :\"\n        val lblSurcharge = \"Surcharge      :\"\n        val lblTotal = \"Total          :\"\n\n        val surcDebit = saleCrcvRepository.getTotalSurchargeByPossesNonCashAll(posses.possesId!!, \"DC\").first() ?: BigDecimal.ZERO\n        val totalDebit: BigDecimal = totDebit.subtract(surcDebit)\n        val surcCredit: BigDecimal = saleCrcvRepository.getTotalSurchargeByPossesNonCashAll(posses.possesId!!, \"CC\").first()  ?: BigDecimal.ZERO\n        val totalKredit: BigDecimal = totKredit.subtract(surcCredit)\n        val totalGopay: BigDecimal = totGopay\n        val surcVoid: BigDecimal = saleCrcvRepository.getTotalSurchargeByPossesVoid(posses.possesId!!).first()  ?: BigDecimal.ZERO\n        val totalVoid: BigDecimal = totVoidNonCash.subtract(surcVoid)\n        val totalNonTunai = totalDebit.add(totalKredit).add(totalGopay).subtract(totalVoid)\n        val totalRounding: BigDecimal = totRoundVoidNonCash\n        val totalSurcharge: BigDecimal = saleCrcvRepository.getTotalSurchargeByPosses(posses.possesId!!).first() ?: BigDecimal.ZERO\n        val total = totalNonTunai.add(totalSurcharge)\n        valDebit = CurrencyUtils.formatCurrency(totalDebit)\n        valKredit = CurrencyUtils.formatCurrency(totalKredit)\n        valGopay = CurrencyUtils.formatCurrency(totalGopay)\n        valVoid = \"(\" + CurrencyUtils.formatCurrency(totalVoid) + \")\"\n        valTotalNonTunai =\n            CurrencyUtils.formatCurrency(totalNonTunai)\n        valRounding = CurrencyUtils.formatCurrency(totalRounding)\n        valSurcharge = CurrencyUtils.formatCurrency(totalSurcharge)\n        valTotal = CurrencyUtils.formatCurrency(total)\n\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += lblDebit\n        s += ReportHelper.generateTab(lblDebit, valDebit, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valDebit\n        s += BPMConstants.CHAR_ENTER\n        s += lblKredit\n        s += ReportHelper.generateTab(lblKredit, valKredit, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valKredit\n        s += BPMConstants.CHAR_ENTER\n        s += lblGopay\n        s += ReportHelper.generateTab(lblGopay, valGopay, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valGopay\n        s += BPMConstants.CHAR_ENTER\n        s += lblVoid\n        s += ReportHelper.generateTab(lblVoid, valVoid, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valVoid\n        s += BPMConstants.CHAR_ENTER\n        s += ReportHelper.generateSpace(lblKredit.length)\n        s += ReportHelper.generateLineCustom(\"-\", maxChar - lblKredit.length - 1)\n        s += lblTotalNonTunai\n        s += ReportHelper.generateTab(\n            lblTotalNonTunai,\n            valTotalNonTunai, BPMConstants.BPM_TAB_LARGE, maxChar\n        )\n        s += valTotalNonTunai\n        s += BPMConstants.CHAR_ENTER\n        s += lblRounding\n        s += ReportHelper.generateTab(\n            lblRounding,\n            valRounding,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valRounding\n        s += BPMConstants.CHAR_ENTER\n        s += lblSurcharge\n        s += ReportHelper.generateTab(\n            lblSurcharge,\n            valSurcharge, BPMConstants.BPM_TAB_LARGE, maxChar\n        )\n        s += valSurcharge\n        s += BPMConstants.CHAR_ENTER\n        s += ReportHelper.generateSpace(lblKredit.length)\n        s += ReportHelper.generateLineCustom(\"-\", maxChar - lblKredit.length - 1)\n        s += BPMConstants.CHAR_ENTER\n        s += lblTotal\n        s += ReportHelper.generateTab(lblTotal, valTotal, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valTotal\n        s += BPMConstants.CHAR_ENTER\n        s += BPMConstants.CHAR_ENTER\n        s += \"*Tidak termasuk surcharge\"\n        s += BPMConstants.CHAR_ENTER\n        return s\n    }\n\n    private suspend fun printRekapFaktur(title: String, posses: Posses, isCash: Boolean, isVoid: Boolean, maxChar: Int): String {\n        var s = \"\"\n        var saleList: List<Sale> = ArrayList<Sale>()\n        val termType = if (isCash) \"tunai\" else \"Debit Card\"\n        try {\n            saleList = saleRepository.getSaleByPosses(posses.possesId!!, isVoid, termType).first()\n        } catch (e: Exception) {\n            e.printStackTrace()\n        }\n        if (saleList.isNotEmpty()) {\n            s += ReportHelper.centerString(title, maxChar)\n            s += ReportHelper.generateLine(\"=\", maxChar)\n            var grandtotal = BigDecimal.ZERO\n            for (sale in saleList) {\n                val total: String = CurrencyUtils.formatCurrency(sale.total)\n                s += sale.trxNo\n                s += ReportHelper.generateTab(\n                    sale.trxNo,\n                    total,\n                    BPMConstants.BPM_TAB_LARGE,\n                    maxChar\n                )\n                s += total\n                s += BPMConstants.CHAR_ENTER\n                grandtotal = grandtotal.add(sale.total)\n            }\n            s += ReportHelper.generateLine(\"=\", maxChar)\n            val totalNota = saleList.size.toString() + \" Nota\"\n            val grand: String = CurrencyUtils.formatCurrency(grandtotal)\n            s += totalNota\n            s += ReportHelper.generateTab(totalNota, grand, BPMConstants.BPM_TAB_LARGE, maxChar)\n            s += grand\n            s += BPMConstants.CHAR_ENTER\n            s += BPMConstants.CHAR_ENTER\n        }\n        return s\n    }\n\n    private suspend fun printRekapClosingCashTotal(cashId: Long, maxChar: Int): String {\n        var s = \"\"\n        val cadjList= cadjRepository.getCashInOut(cashId).first()\n        val totExpIn = cadjList.filter { it.status == \"i\" }.sumOf { it.amount }\n        val totExpOut = cadjList.filter { it.status == \"o\" }.sumOf { it.amount }\n\n        val lblCashIn = \"Kas Masuk\"\n        val lblCashOut = \"Kas Keluar\"\n\n        val valCashIn: String = CurrencyUtils.formatCurrency(totExpIn)\n\n        val valCashOut: String = \"(\" + CurrencyUtils.formatCurrency(totExpOut)+ \")\"\n\n        s += lblCashIn\n        s += ReportHelper.generateTab(lblCashIn, valCashIn, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valCashIn\n        s += BPMConstants.CHAR_ENTER\n        s += lblCashOut\n        s += ReportHelper.generateTab(lblCashOut, valCashOut, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valCashOut\n        s += BPMConstants.CHAR_ENTER\n\n        return s\n    }\n\n    private suspend fun printRekapClosingTransaksiWithDiskon(possesID: Long, maxChar: Int): String {\n        var s = \"\"\n        val saleList = saleRepository.getSaleByPosses(possesID.toInt()).first()\n        val totPaid = saleList.filter { !it.isVoid }.sumOf { it.total }\n\n        var valItem: String\n        var valQty: String\n        var valPrice: String\n        var valTotal: String\n        var discount: String\n        var discountAmt: String\n        val valTotalTrx = CurrencyUtils.formatCurrency(totPaid)\n        var detailPlaceholder: String\n        val mSaledList = saledRepository.getSaledByPosses(possesID.toInt()).first()\n        val lblTotalTrx = \"Total Setoran \"\n\n\n        for (saleds in mSaledList) {\n            valItem = saleds.name\n            valQty = CurrencyUtils.formatCurrency(saleds.qty)\n            valPrice = CurrencyUtils.formatCurrency(saleds.listPrice)\n            valTotal = CurrencyUtils.formatCurrency(saleds.listPrice.multiply(saleds.qty))\n            detailPlaceholder = BPMConstants.CHAR_SPACE + valQty + \" x \" + valPrice\n            s += valItem + BPMConstants.CHAR_ENTER\n            s += detailPlaceholder\n            s += ReportHelper.generateTab(\n                detailPlaceholder,\n                valTotal,\n                BPMConstants.BPM_TAB_LARGE,\n                maxChar\n            )\n            s += valTotal\n            s += BPMConstants.CHAR_ENTER\n            val listsaledspersen = saledRepository.getRekapSaledDiskon(possesID.toInt(), saleds.itemId, saleds.listPrice).first()\n\n            if (listsaledspersen.isNotEmpty()) {\n                for (saledspersen in listsaledspersen) {\n                    discount = if (saledspersen.discExp.contains(\"%\"))\n                        \"Disc \" + saledspersen.discExp else \"Disc \" + CurrencyUtils.formatCurrency(saledspersen.disc)\n\n                    discountAmt = \"(\" + CurrencyUtils.formatCurrency(saledspersen.totalDiscAmt) + \")\"\n                    if (saledspersen.discAmt.compareTo(BigDecimal.ZERO) != 0) {\n                        s += discount\n                        s += ReportHelper.generateTab(\n                            discount,\n                            discountAmt,\n                            BPMConstants.BPM_TAB_LARGE,\n                            maxChar\n                        )\n                        s += discountAmt\n                        s += BPMConstants.CHAR_ENTER\n                    }\n                }\n            }\n        }\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += lblTotalTrx\n        s += ReportHelper.generateTab(lblTotalTrx, valTotalTrx, 1, maxChar)\n        s += valTotalTrx\n        s += BPMConstants.CHAR_ENTER\n        return s\n    }\n\n    private suspend fun printRekapClosingTransaksiWithDiskonChannel(possesID: Long, maxChar: Int): String {\n        var s = \"\"\n\n        var valItem: String\n        var valQty: String\n        var valPrice: String\n        var valTotal: String\n        var discount: String\n        var discountAmt: String\n        var valNamaMember : String\n        var lblTotalTrx: String\n        var valTotalTrx: String\n        val saleList = saleRepository.getSaleByPosses(possesID.toInt()).first()\n        var detailPlaceholder: String\n\n        for (sale in saleList) {\n            val mSaledList = saledRepository.getSaledByPossesChannel(possesID.toInt(), sale.channelId).first()\n            val totPaidChannel = saleList.filter { !it.isVoid && it.channelId == sale.channelId }.sumOf { it.total }\n            var namaChannel = \"(Tanpa Channel)\"\n            if (sale.channelId != 0) {\n                val channel = channelRepository.getChannelById(sale.channelId).first()\n                if (channel != null) {\n                    namaChannel = channel.name\n                }\n            }\n            valNamaMember = \"Channel : $namaChannel\"\n\n            lblTotalTrx = \"Total Setoran \"\n\n            valTotalTrx = CurrencyUtils.formatCurrency(totPaidChannel)\n\n            s += ReportHelper.generateLine(\"-\", maxChar)\n            s += valNamaMember + BPMConstants.CHAR_ENTER\n\n            for (saleds in mSaledList) {\n                valItem = saleds.name\n                valQty = CurrencyUtils.formatCurrency(saleds.qty)\n                valPrice = CurrencyUtils.formatCurrency(saleds.listPrice)\n                valTotal = CurrencyUtils.formatCurrency(saleds.subtotal)\n                detailPlaceholder = BPMConstants.CHAR_SPACE + valQty + \" x \" + valPrice\n                s += valItem + BPMConstants.CHAR_ENTER\n                s += detailPlaceholder\n                s += ReportHelper.generateTab(\n                    detailPlaceholder,\n                    valTotal,\n                    BPMConstants.BPM_TAB_LARGE,\n                    maxChar\n                )\n                s += valTotal\n                s += BPMConstants.CHAR_ENTER\n                val listsaledspersen = saledRepository.getRekapSaledDiskon(possesID.toInt(), saleds.itemId, sale.channelId).first()\n\n                if (listsaledspersen.isNotEmpty()) {\n                    for (saledspersen in listsaledspersen) {\n                        discount = if (saledspersen.discExp.contains(\"%\"))\n                            \"Disc \" + saledspersen.discExp else \"Disc \" + CurrencyUtils.formatCurrency(saledspersen.disc)\n                        discountAmt = \"(\" + CurrencyUtils.formatCurrency(saledspersen.totalDiscAmt) + \")\"\n\n                        if (saledspersen.discAmt.compareTo(BigDecimal.ZERO) != 0) {\n                            s += discount\n                            s += ReportHelper.generateTab(\n                                discount,\n                                discountAmt,\n                                BPMConstants.BPM_TAB_LARGE,\n                                maxChar\n                            )\n                            s += discountAmt\n                            s += BPMConstants.CHAR_ENTER\n                        }\n                    }\n                }\n            }\n            s += lblTotalTrx\n            s += ReportHelper.generateTab(lblTotalTrx, valTotalTrx, 1, maxChar)\n            s += valTotalTrx\n            s += BPMConstants.CHAR_ENTER\n        }\n        return s\n    }\n\n    private suspend fun printRekapClosingTransaksiCashInOut(possesID: Long, maxChar: Int): String {\n        var s = \"\"\n        var valItem: String\n        var valTotal: String\n        val listcadj = cadjRepository.getCashInOut(possesID).first()\n\n        for (cadjs in listcadj) {\n            valItem = cadjs.note\n            valTotal = CurrencyUtils.formatCurrency(cadjs.amount)\n            s += valItem\n            s += ReportHelper.generateTab(\n                valItem,\n                valTotal,\n                BPMConstants.BPM_TAB_LARGE,\n                maxChar\n            )\n            s += valTotal\n            s += BPMConstants.CHAR_ENTER\n        }\n        return s\n    }\n\n    private suspend fun printRekapClosingTransaksiChannel(possesID: Long, maxChar: Int): String {\n        var s = \"\"\n        val saleList = saleRepository.getSaleByPosses(possesID.toInt()).first()\n        var total: BigDecimal\n        var count: BigDecimal\n        var totalCount = BigDecimal.ZERO\n        var grandtotal = BigDecimal.ZERO\n        val channelList = channelRepository.getActiveChannelList().first()\n\n        for (channel in channelList) {\n            total = saleList.filter { it.channelId == channel.id }.sumOf { it.total }\n            count = saleList.filter { it.channelId == channel.id }.size.toBigDecimal()\n            grandtotal = grandtotal.add(total)\n            totalCount = totalCount.add(count)\n            s += printRekapPerChannelDetail(total, count, channel, maxChar)\n        }\n\n        // channel kosong\n        total = saleList.filter { it.channelId == 0 }.sumOf { it.total }\n        count = saleList.filter { it.channelId == 0 }.size.toBigDecimal()\n        grandtotal = grandtotal.add(total)\n        totalCount = totalCount.add(count)\n\n        s += printRekapPerChannelDetail(total, count, null, maxChar)\n\n        val totalNota = \"$totalCount Nota\"\n        val valGrandtotal: String =\n            CurrencyUtils.formatCurrency(grandtotal)\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += totalNota\n        s += ReportHelper.generateTab(\n            totalNota,\n            valGrandtotal,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += valGrandtotal\n        s += BPMConstants.CHAR_ENTER\n        return s\n    }\n\n    private fun printRekapPerChannelDetail(total: BigDecimal, count: BigDecimal, channel: Channel?, maxChar: Int): String {\n        var s = \"\"\n        val valItem =\n            if (channel != null) String.format(\n                \"%s (%s)\",\n                channel.name,\n                count.toString()\n            ) else \"(Tanpa Channel)\"\n        val valTotal = CurrencyUtils.formatCurrency(total)\n        s += valItem\n        s += ReportHelper.generateTab(valItem, valTotal, BPMConstants.BPM_TAB_LARGE, maxChar)\n        s += valTotal\n        s += BPMConstants.CHAR_ENTER\n        return s\n    }\n\n    private suspend fun printRekapClosingCustomer(possesID: Long, maxChar: Int): String {\n        var s = \"\"\n        val headerCust = \"Customer\"\n        val headerTotal = \"Total\"\n        val saleList = saleRepository.getSaleByPossesGroupByBp(possesID.toInt()).first()\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += headerCust\n        s += ReportHelper.generateTab(\n            headerCust,\n            headerTotal,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += headerTotal\n        s += BPMConstants.CHAR_ENTER\n        for (sale in saleList) {\n            val name = sale.bpName\n            s += name\n            s += ReportHelper.generateTab(\n                name,\n                CurrencyUtils.formatCurrency(sale.total),\n                BPMConstants.BPM_TAB_LARGE,\n                maxChar\n            )\n            s += CurrencyUtils.formatCurrency(sale.total)\n            s += BPMConstants.CHAR_ENTER\n        }\n        s += BPMConstants.CHAR_ENTER\n        return s\n    }\n\n    private suspend fun printRekapClosingTransaksiNonTunai(possesID: Long, maxChar: Int, rcvtype: String) : String {\n        val salecrcvsList = saleCrcvRepository.getSalecrcvByPosses(possesID.toInt(), rcvtype).first()\n        var s = \"\"\n        val headerTrackno = \"Trackno\"\n        val headerNominal = \"Nominal\"\n\n        s += ReportHelper.generateLine(\"-\", maxChar)\n        s += headerTrackno\n        s += ReportHelper.generateTab(\n            headerTrackno,\n            headerNominal,\n            BPMConstants.BPM_TAB_LARGE,\n            maxChar\n        )\n        s += headerNominal\n        s += BPMConstants.CHAR_ENTER\n        for (salecrcvs in salecrcvsList) {\n            s += if (salecrcvs.trackNo == null) salecrcvs.cardNo else salecrcvs.trackNo\n            s += ReportHelper.generateTab((if (salecrcvs.trackNo == null) salecrcvs.cardNo else salecrcvs.trackNo) ?: \"\",\n                CurrencyUtils.formatCurrency(BigDecimal(salecrcvs.rcvAmt)),\n                BPMConstants.BPM_TAB_LARGE,\n                maxChar\n            )\n            s += CurrencyUtils.formatCurrency(BigDecimal(salecrcvs.rcvAmt))\n            s += BPMConstants.CHAR_ENTER\n        }\n        return s\n    }\n\n    private fun printTotalQtyKitchen(saledList: List<Saled>): String {\n        var totalQty = BigDecimal.ZERO\n        for (saled in saledList) {\n            totalQty = saled.qty.add(totalQty)\n        }\n        val sb = StringBuilder()\n        sb.append(\"Total Qty : \")\n        sb.append(totalQty)\n        return sb.toString()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/domain/report/ReportGeneratorInvoice.kt b/app/src/main/java/com/bits/bee/bpmc/domain/report/ReportGeneratorInvoice.kt
--- a/app/src/main/java/com/bits/bee/bpmc/domain/report/ReportGeneratorInvoice.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/domain/report/ReportGeneratorInvoice.kt	(date 1670382146687)
@@ -1373,7 +1373,7 @@
         var valNamaMember : String
         var lblTotalTrx: String
         var valTotalTrx: String
-        val saleList = saleRepository.getSaleByPosses(possesID.toInt()).first()
+        val saleList = saleRepository.getSaleByPossesGroupChannel(possesID.toInt()).first()
         var detailPlaceholder: String
 
         for (sale in saleList) {
Index: app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.dialog.hapus_transaksi\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.core.widget.addTextChangedListener\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.DialogHapusTransaksiBinding\nimport com.bits.bee.bpmc.domain.model.Sale\nimport com.bits.bee.bpmc.presentation.base.BaseBottomSheetDialogFragment\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.collect\nimport kotlinx.coroutines.launch\n\n/**\n * Created by aldi on 03/11/22\n */\n@AndroidEntryPoint\nclass HapusTransaksiDialog(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> DialogHapusTransaksiBinding = DialogHapusTransaksiBinding::inflate\n) : BaseBottomSheetDialogFragment<DialogHapusTransaksiBinding>() {\n\n    private val viewModel : HapusTransaksiViewModel by viewModels()\n\n    override fun initComponents() {\n\n        binding.apply {\n            viewModel.loadData()\n            arguments?.let {\n                val sale = it.getParcelable<Sale>(\"sale\")\n                viewModel.state.sale = sale\n                tvKet.text = getString(R.string.apakah_anda_yakin_ingin_menghapus_transaksi_no_jl12345, sale?.trxNo ?: \"\")\n            }\n            findNavController().currentBackStackEntry?.savedStateHandle?.apply {\n                getLiveData<Boolean>(BPMConstants.ACS_DEL).observe(viewLifecycleOwner) {\n                    viewModel.state.isCanVoid = it\n                    viewModel.doVoid()\n                }\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            etAlasan.addTextChangedListener {\n                viewModel.state.alasan = etAlasan.text.toString().trim()\n            }\n            btnBatal.setOnClickListener {\n                dismiss()\n            }\n            btnHapus.setOnClickListener {\n                viewModel.onClickHapus()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.msg.collect {\n                showSnackbar(it)\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                viewModel.event.collect {\n                    when(it){\n                        HapusTransaksiViewModel.UIEvent.NavigateToHakAkses -> {\n                            val action = HapusTransaksiDialogDirections.actionHapusTransaksiDialogToHakAksesFragment2(BPMConstants.ACS_DEL)\n                            findNavController().navigate(action)\n                        }\n                        HapusTransaksiViewModel.UIEvent.SuccessVoid -> {\n                            showSnackbar(\"Transaksi berhasil di batalkan!\")\n                            findNavController().previousBackStackEntry?.savedStateHandle?.set(\"sale\", viewModel.state.sale!!)\n                            findNavController().popBackStack()\n//                            onFinish(viewModel.state.sale!!)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiDialog.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiDialog.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiDialog.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiDialog.kt	(date 1670402388541)
@@ -1,7 +1,9 @@
 package com.bits.bee.bpmc.presentation.dialog.hapus_transaksi
 
+import android.content.DialogInterface
 import android.view.LayoutInflater
 import android.view.ViewGroup
+import android.widget.Toast
 import androidx.core.widget.addTextChangedListener
 import androidx.fragment.app.viewModels
 import androidx.lifecycle.Lifecycle
@@ -14,8 +16,7 @@
 import com.bits.bee.bpmc.presentation.base.BaseBottomSheetDialogFragment
 import com.bits.bee.bpmc.utils.BPMConstants
 import dagger.hilt.android.AndroidEntryPoint
-import kotlinx.coroutines.delay
-import kotlinx.coroutines.flow.collect
+import kotlinx.coroutines.flow.collectLatest
 import kotlinx.coroutines.launch
 
 /**
@@ -29,7 +30,6 @@
     private val viewModel : HapusTransaksiViewModel by viewModels()
 
     override fun initComponents() {
-
         binding.apply {
             viewModel.loadData()
             arguments?.let {
@@ -62,8 +62,9 @@
 
     override fun subscribeObservers() {
         viewLifecycleOwner.lifecycleScope.launchWhenStarted {
-            viewModel.msg.collect {
-                showSnackbar(it)
+            viewModel.msg.collectLatest {
+                Toast.makeText(requireActivity(), it, Toast.LENGTH_SHORT).show()
+//                showSnackbar(it)
             }
         }
         viewLifecycleOwner.lifecycleScope.launch {
@@ -75,7 +76,7 @@
                             findNavController().navigate(action)
                         }
                         HapusTransaksiViewModel.UIEvent.SuccessVoid -> {
-                            showSnackbar("Transaksi berhasil di batalkan!")
+                            Toast.makeText(requireActivity(), "Transaksi berhasil di batalkan!", Toast.LENGTH_SHORT).show()
                             findNavController().previousBackStackEntry?.savedStateHandle?.set("sale", viewModel.state.sale!!)
                             findNavController().popBackStack()
 //                            onFinish(viewModel.state.sale!!)
@@ -86,5 +87,4 @@
         }
     }
 
-
 }
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.dialog.hapus_transaksi\n\nimport android.util.Log\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.helper.PrivilegeHelper\nimport com.bits.bee.bpmc.domain.usecase.pembayaran.RefundGopayUseCase\nimport com.bits.bee.bpmc.domain.usecase.transaksi_penjualan.VoidTransactionUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.Resource\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 03/11/22\n */\n@HiltViewModel\nclass HapusTransaksiViewModel @Inject constructor(\n    private val privilegeHelper: PrivilegeHelper,\n    private val voidTransactionUseCase: VoidTransactionUseCase,\n    private val refundGopayUseCase: RefundGopayUseCase\n) : BaseViewModel<HapusTransaksiState, HapusTransaksiViewModel.UIEvent>(){\n\n    init {\n        state = HapusTransaksiState()\n    }\n\n    fun loadData() = viewModelScope.launch {\n        state.isCanVoid = privilegeHelper.hasAccess(BPMConstants.BPM_PRIVILEGE_OBJ, BPMConstants.ACS_DEL)\n    }\n\n    fun onClickHapus() = viewModelScope.launch {\n        if(!state.isCanVoid){\n            eventChannel.send(UIEvent.NavigateToHakAkses)\n        } else {\n            doVoid()\n        }\n    }\n\n    fun doVoid() = viewModelScope.launch {\n        var isValid = true\n        if(state.alasan.isEmpty()){\n            isValid = false\n            sendMessage(\"Alasan hapus wajib diisi!\")\n        } else if(state.alasan.length < 5){\n            isValid = false\n            sendMessage(\"Alasan harus terdiri dari minimal 5 karakter!\")\n        }\n\n        if(isValid) {\n\n            state.sale?.let {\n                it.voidNote = state.alasan\n                if(it.termType == BPMConstants.BPM_DEFAULT_TYPE_CASH_GOPAY)\n                    doRefunGopay()\n                voidTransactionUseCase(it)\n                eventChannel.send(UIEvent.SuccessVoid)\n            }\n        }\n    }\n\n    suspend fun doRefunGopay(){\n        refundGopayUseCase(state.sale!!).collect {\n            when(it.status){\n                Resource.Status.LOADING -> {\n\n                }\n                Resource.Status.SUCCESS -> {\n                    it.data?.let {\n                        Log.i(\"Refund Gopay\", it.data.status_message)\n                    }\n                }\n                Resource.Status.ERROR -> {\n\n                }\n                Resource.Status.NOINTERNET -> TODO()\n            }\n        }\n    }\n\n    sealed class UIEvent {\n        object NavigateToHakAkses : UIEvent()\n        object SuccessVoid : UIEvent()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/hapus_transaksi/HapusTransaksiViewModel.kt	(date 1670396829128)
@@ -31,7 +31,7 @@
     }
 
     fun onClickHapus() = viewModelScope.launch {
-        if(!state.isCanVoid){
+        if(!state.isCanVoid) {
             eventChannel.send(UIEvent.NavigateToHakAkses)
         } else {
             doVoid()
Index: app/src/main/java/com/bits/bee/bpmc/presentation/dialog/CloudDapurDialogBuilder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.dialog\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport com.bits.bee.bpmc.databinding.DialogCloudDapurBinding\nimport com.bits.bee.bpmc.databinding.DialogRadioListBinding\nimport com.bits.bee.bpmc.presentation.base.BaseBottomSheetDialogFragment\n\nclass CloudDapurDialogBuilder(\n    val title: String,\n    val onSaveClick : (Any) -> Unit,\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> DialogCloudDapurBinding = DialogCloudDapurBinding::inflate\n) : BaseBottomSheetDialogFragment<DialogCloudDapurBinding>() {\n    override fun initComponents() {\n        binding.apply {\n            tvTitle.text = title\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            btnTutup.setOnClickListener {\n                dismiss()\n            }\n            imageView2.setOnClickListener {\n                dismiss()\n            }\n            btnTontonVideo.setOnClickListener {\n                //\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/CloudDapurDialogBuilder.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/CloudDapurDialogBuilder.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/CloudDapurDialogBuilder.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/dialog/CloudDapurDialogBuilder.kt	(date 1670384660522)
@@ -5,6 +5,7 @@
 import com.bits.bee.bpmc.databinding.DialogCloudDapurBinding
 import com.bits.bee.bpmc.databinding.DialogRadioListBinding
 import com.bits.bee.bpmc.presentation.base.BaseBottomSheetDialogFragment
+import com.bits.bee.bpmc.utils.extension.gone
 
 class CloudDapurDialogBuilder(
     val title: String,
@@ -14,6 +15,7 @@
     override fun initComponents() {
         binding.apply {
             tvTitle.text = title
+            btnTontonVideo.gone()
         }
     }
 
Index: app/src/main/res/navigation/main_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/main_graph\"\n    app:startDestination=\"@id/posFragment\">\n\n    <fragment\n        tools:layout=\"@layout/fragment_pos\"\n        android:id=\"@+id/posFragment\"\n        android:label=\"\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.pos.PosFragment\">\n        <action\n            android:id=\"@+id/action_posFragment_to_invoiceFragment\"\n            app:destination=\"@id/invoiceFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_memberFragment\"\n            app:destination=\"@id/memberFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_draftListDialog\"\n            app:destination=\"@id/draftListDialog\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_diskonNotaDialog\"\n            app:destination=\"@id/diskonNotaDialog\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_cariItemFragment\"\n            app:destination=\"@id/cariItemFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_cariItemFragment2\"\n            app:destination=\"@id/cariItemFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_editItemDialog2\"\n            app:destination=\"@id/editItemDialog\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_addOnFragment\"\n            app:destination=\"@id/addOnFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_promoFragment\"\n            app:destination=\"@id/promoFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_pembayaranFragment\"\n            app:destination=\"@id/pembayaranFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_klaimPromoFragment\"\n            app:destination=\"@id/klaimPromoFragment\" />\n        <action\n            android:id=\"@+id/action_posFragment_to_salesmanFragment\"\n            app:destination=\"@id/salesmanFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_member\"\n        android:id=\"@+id/memberFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.member.MemberFragment\"\n        android:label=\"@string/pilih_member\" >\n        <action\n            android:id=\"@+id/action_memberFragment_to_tambahMemberFragment\"\n            app:destination=\"@id/tambahMemberFragment\" />\n        <action\n            android:id=\"@+id/action_memberFragment_to_detailMemberDialog\"\n            app:destination=\"@id/detailMemberDialog\" />\n        <action\n            android:id=\"@+id/action_memberFragment_to_posFragment\"\n            app:destination=\"@id/posFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_tambah_member\"\n        android:id=\"@+id/tambahMemberFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.tambah_member.TambahMemberFragment\"\n        android:label=\"@string/tambah_member\" >\n        <argument\n            android:name=\"district\"\n            app:argType=\"string\" />\n        <action\n            android:id=\"@+id/action_tambahMemberFragment_to_taxInfoDialog\"\n            app:destination=\"@id/taxInfoDialog\" />\n        <action\n            android:id=\"@+id/action_tambahMemberFragment_to_cariKotaFragment\"\n            app:destination=\"@id/cariKotaFragment\" />\n        <action\n            android:id=\"@+id/action_tambahMemberFragment_to_memberFragment\"\n            app:destination=\"@id/memberFragment\" />\n    </fragment>\n    <dialog\n        tools:layout=\"@layout/dialog_tax_info\"\n        android:id=\"@+id/taxInfoDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.dialog.TaxInfoDialog\"\n        android:label=\"TaxInfoDialog\" />\n    <dialog\n        tools:layout=\"@layout/dialog_detail_member\"\n        android:id=\"@+id/detailMemberDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.dialog.detail_member.DetailMemberDialog\"\n        android:label=\"DetailMemberDialog\" >\n        <argument\n            android:name=\"member\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Bp\" />\n        <action\n            android:id=\"@+id/action_detailMemberDialog_to_taxInfoDialog\"\n            app:destination=\"@id/taxInfoDialog\" />\n    </dialog>\n    <fragment\n        tools:layout=\"@layout/fragment_invoice\"\n        android:id=\"@+id/invoiceFragment\"\n        android:label=\"@string/pesanan\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.invoice.InvoiceFragment\">\n        <action\n            android:id=\"@+id/action_invoiceFragment_to_pembayaranFragment\"\n            app:destination=\"@id/pembayaranFragment\" />\n        <action\n            android:id=\"@+id/action_invoiceFragment_to_draftListDialog\"\n            app:destination=\"@id/draftListDialog\" />\n        <action\n            android:id=\"@+id/action_invoiceFragment_to_diskonNotaDialog\"\n            app:destination=\"@id/diskonNotaDialog\" />\n        <action\n            android:id=\"@+id/action_invoiceFragment_to_editItemDialog\"\n            app:destination=\"@id/editItemDialog\" />\n        <action\n            android:id=\"@+id/action_invoiceFragment_to_klaimPromoFragment\"\n            app:destination=\"@id/klaimPromoFragment\" />\n        <action\n            android:id=\"@+id/action_invoiceFragment_to_salesmanFragment\"\n            app:destination=\"@id/salesmanFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_pembayaran\"\n        android:id=\"@+id/pembayaranFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pembayaran.PembayaranFragment\"\n        android:label=\"@string/pembayaran\" >\n        <action\n            android:id=\"@+id/action_pembayaranFragment_to_pembayaranNonTunaiFragment\"\n            app:destination=\"@id/pembayaranNonTunaiFragment\" />\n        <action\n            android:id=\"@+id/action_pembayaranFragment_to_transaksiBerhasilFragment\"\n            app:destination=\"@id/transaksiBerhasilFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_cari_kota\"\n        android:id=\"@+id/cariKotaFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.cari_kota.CariKotaFragment\"\n        android:label=\"CariKotaFragment\" >\n        <action\n            android:id=\"@+id/action_cariKotaFragment_to_cariKecamatanFragment\"\n            app:destination=\"@id/cariKecamatanFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_edit_item\"\n        android:id=\"@+id/editItemDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.edit_item.EditItemFragment\"\n        android:label=\"@string/detail_produk\" >\n        <argument\n            android:name=\"saled\"\n            app:nullable=\"true\"\n            android:defaultValue=\"@null\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Saled\" />\n        <argument\n            android:name=\"item\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Item\"\n            app:nullable=\"true\"\n            android:defaultValue=\"@null\" />\n        <argument\n            android:name=\"pid\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Stock\"\n            app:nullable=\"true\"\n            android:defaultValue=\"@null\" />\n        <action\n            android:id=\"@+id/action_editItemDialog_to_addOnFragment\"\n            app:destination=\"@id/addOnFragment\" />\n        <action\n            android:id=\"@+id/action_editItemDialog_to_hakAksesFragment\"\n            app:destination=\"@id/hakAksesFragment\" />\n\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_pembayaran_non_tunai\"\n        android:id=\"@+id/pembayaranNonTunaiFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pembayaran_non_tunai.PembayaranNonTunaiFragment\"\n        android:label=\"@string/non_tunai\" >\n        <action\n            android:id=\"@+id/action_pembayaranNonTunaiFragment_to_pembayaranGopayFragment\"\n            app:destination=\"@id/pembayaranGopayFragment\" />\n        <action\n            android:id=\"@+id/action_pembayaranNonTunaiFragment_to_pembayaranDebitKreditFragment\"\n            app:destination=\"@id/pembayaranDebitKreditFragment\" />\n        <action\n            android:id=\"@+id/action_pembayaranNonTunaiFragment_to_transaksiBerhasilFragment\"\n            app:destination=\"@id/transaksiBerhasilFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_pembayaran_gopay\"\n        android:id=\"@+id/pembayaranGopayFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pembayaran_gopay.PembayaranGopayFragment\"\n        android:label=\"PembayaranGopayFragment\" >\n        <action\n            android:id=\"@+id/action_pembayaranGopayFragment_to_transaksiBerhasilFragment\"\n            app:destination=\"@id/transaksiBerhasilFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_pembayaran_kartu\"\n        android:id=\"@+id/pembayaranDebitKreditFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pembayaran_kartu.PembayaranKartuFragment\"\n        android:label=\"PembayaranDebitKreditFragment\" >\n        <action\n            android:id=\"@+id/action_pembayaranDebitKreditFragment_to_transaksiBerhasilFragment\"\n            app:destination=\"@id/transaksiBerhasilFragment\" />\n        <argument\n            android:name=\"pmtd\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Pmtd\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_transaksi_berhasil\"\n        android:id=\"@+id/transaksiBerhasilFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.transaksi_berhasil.TransaksiBerhasilFragment\"\n         >\n        <action\n            app:destination=\"@+id/posFragment\"\n            app:popUpTo=\"@id/posFragment\"\n            app:popUpToInclusive=\"true\"\n            android:id=\"@+id/action_transaksiBerhasilFragment_to_posFragment\" />\n    </fragment>\n\n    <dialog\n        tools:layout=\"@layout/dialog_draft_list\"\n        android:id=\"@+id/draftListDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.dialog.draft_list.DraftListDialog\"\n        android:label=\"@string/draft_penjualan\" >\n        <action\n            android:id=\"@+id/action_draftListDialog_to_draftFragment\"\n            app:destination=\"@id/draftFragment\" />\n    </dialog>\n    <fragment\n        tools:layout=\"@layout/fragment_draft_list\"\n        android:id=\"@+id/draftFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.draft.DraftFragment\"\n        android:label=\"@string/draft_penjualan\" />\n    <dialog\n        tools:layout=\"@layout/dialog_diskon_nota\"\n        android:id=\"@+id/diskonNotaDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.diskon_nota.DiskonNotaDialog\"\n        android:label=\"DiskonNotaDialog\" >\n        <action\n            android:id=\"@+id/action_diskonNotaDialog_to_hakAksesFragment\"\n            app:destination=\"@id/hakAksesFragment\" />\n    </dialog>\n    <fragment\n        tools:layout=\"@layout/fragment_cari_kecamatan\"\n        android:id=\"@+id/cariKecamatanFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.cari_kecamatan.CariKecamatanFragment\"\n        android:label=\"CariKecamatanFragment\" >\n        <argument\n            android:name=\"regency\"\n            app:argType=\"string\" />\n        <action\n            android:id=\"@+id/action_cariKecamatanFragment_to_tambahMemberFragment\"\n            app:destination=\"@id/tambahMemberFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_cari_item\"\n        android:id=\"@+id/cariItemFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.cari_item.CariItemFragment\"\n        android:label=\"CariItemFragment\" >\n        <action\n            android:id=\"@+id/action_cariItemFragment_to_scannerFragment\"\n            app:destination=\"@id/scannerFragment\" />\n        <action\n            android:id=\"@+id/action_cariItemFragment_to_editItemDialog\"\n            app:destination=\"@id/editItemDialog\" />\n        <action\n            android:id=\"@+id/action_cariItemFragment_to_pilihPidFragment\"\n            app:destination=\"@id/pilihPidFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_scanner\"\n        android:id=\"@+id/scannerFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.scan.ScannerFragment\"\n        android:label=\"ScannerFragment\" />\n    <fragment\n        tools:layout=\"@layout/fragment_pid\"\n        android:id=\"@+id/pilihPidFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.pid.PilihPidFragment\"\n        android:label=\"@string/pilih_pid_produk\" >\n        <argument\n            android:name=\"item\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Item\" />\n        <action\n            android:id=\"@+id/action_pilihPidFragment_to_editItemDialog\"\n            app:destination=\"@id/editItemDialog\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/addOnFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.addon.AddOnFragment\"\n        android:label=\"AddOnFragment\" >\n        <argument\n            android:name=\"item\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Item\" />\n        <argument\n            android:name=\"bp\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Bp\" />\n        <argument\n            android:name=\"priceLvlId\"\n            app:argType=\"integer\"\n            android:defaultValue=\"1\" />\n        <argument\n            android:name=\"saled\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Saled\"\n            app:nullable=\"true\"\n            android:defaultValue=\"@null\" />\n\n    </fragment>\n    <fragment\n        android:id=\"@+id/positemFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.pos_item.PositemFragment\"\n        android:label=\"PositemFragment\" >\n        <action\n            android:id=\"@+id/action_positemFragment_to_addOnFragment\"\n            app:destination=\"@id/addOnFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/promoFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.promo.PromoFragment\"\n        android:label=\"Promo\" />\n    <fragment\n        android:id=\"@+id/klaimPromoFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.klaim_promo.KlaimPromoFragment\"\n        android:label=\"KlaimPromoFragment\"\n        tools:layout=\"@layout/fragment_klaim_promo\"/>\n    <fragment\n        android:id=\"@+id/salesmanFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.salesman.SalesmanFragment\"\n        android:label=\"Pilih Salesman\"\n        tools:layout=\"@layout/fragment_salesman\">\n        <action\n            android:id=\"@+id/action_salesmanFragment_to_detailSalesmanFragment\"\n            app:destination=\"@id/detailSalesmanFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/detailSalesmanFragment\"\n        tools:layout=\"@layout/fragment_detail_salesman\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.detail_salesman.DetailSalesmanFragment\"\n        android:label=\"Detail Salesman\" >\n        <argument\n            android:name=\"srep\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Srep\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/kasMasukFragment\"\n        tools:layout=\"@layout/fragment_kas_masuk\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.rekap_kas.KasMasukFragment\"\n        android:label=\"KasMasukFragment\" />\n    <fragment\n        android:id=\"@+id/kasKeluarFragment\"\n        tools:layout=\"@layout/fragment_kas_keluar\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.rekap_kas.KasKeluarFragment\"\n        android:label=\"KasKeluarFragment\" />\n    <dialog\n        android:id=\"@+id/hakAksesFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.hak_akses.HakAksesFragment\"\n        android:label=\"HakAksesFragment\" >\n        <argument\n            android:name=\"acsType\"\n            app:argType=\"string\" />\n    </dialog>\n\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/main_graph.xml b/app/src/main/res/navigation/main_graph.xml
--- a/app/src/main/res/navigation/main_graph.xml	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/res/navigation/main_graph.xml	(date 1670387068575)
@@ -209,6 +209,7 @@
     <fragment
         tools:layout="@layout/fragment_transaksi_berhasil"
         android:id="@+id/transaksiBerhasilFragment"
+        android:label=""
         android:name="com.bits.bee.bpmc.presentation.ui.pos.transaksi_berhasil.TransaksiBerhasilFragment"
          >
         <action
@@ -267,6 +268,9 @@
         <action
             android:id="@+id/action_cariItemFragment_to_pilihPidFragment"
             app:destination="@id/pilihPidFragment" />
+        <action
+            android:id="@+id/action_cariItemFragment_to_addOnFragment"
+            app:destination="@id/addOnFragment" />
     </fragment>
     <fragment
         tools:layout="@layout/fragment_scanner"
@@ -288,7 +292,7 @@
     <fragment
         android:id="@+id/addOnFragment"
         android:name="com.bits.bee.bpmc.presentation.ui.pos.addon.AddOnFragment"
-        android:label="AddOnFragment" >
+        android:label="" >
         <argument
             android:name="item"
             app:argType="com.bits.bee.bpmc.domain.model.Item" />
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/detail_transaksi_penjualan/DetailTransaksiPenjualanFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.detail_transaksi_penjualan\n\nimport android.view.*\nimport androidx.core.content.ContextCompat\nimport androidx.core.view.isVisible\nimport androidx.fragment.app.activityViewModels\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentDetailTransaksiPenjualanBinding\nimport com.bits.bee.bpmc.domain.model.Sale\nimport com.bits.bee.bpmc.domain.printer.helper.PrinterHelper\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.DialogBuilderHelper\nimport com.bits.bee.bpmc.presentation.ui.home.HomeViewModel\nimport com.bits.bee.bpmc.presentation.ui.pos.PosModeState\nimport com.bits.bee.bpmc.presentation.ui.pos.invoice_list.InvoiceAdapter\nimport com.bits.bee.bpmc.presentation.ui.transaksi_penjualan.TransaksiPenjualanFragmentDirections\nimport com.bits.bee.bpmc.presentation.ui.transaksi_penjualan.TransaksiPenjualanViewModel\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.CurrencyUtils\nimport com.bits.bee.bpmc.utils.Utils\nimport com.bits.bee.bpmc.utils.extension.gone\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\nimport java.math.BigDecimal\nimport java.text.SimpleDateFormat\nimport java.util.*\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 23/06/22.\n */\n@AndroidEntryPoint\nclass DetailTransaksiPenjualanFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentDetailTransaksiPenjualanBinding = FragmentDetailTransaksiPenjualanBinding::inflate\n) : BaseFragment<FragmentDetailTransaksiPenjualanBinding>() {\n\n    private val viewModel : DetailTransaksiPenjualanViewModel by viewModels()\n\n    private val parentViewModel : TransaksiPenjualanViewModel by viewModels({requireParentFragment()})\n\n    private val activityViewModel : HomeViewModel by activityViewModels()\n\n    private lateinit var detailAdapter : InvoiceAdapter\n\n    private val dateFormat = SimpleDateFormat(\"dd/MM/yyyy HH:mm\", Locale.getDefault())\n\n    @Inject\n    lateinit var printerHelper: PrinterHelper\n\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n        super.onCreateOptionsMenu(menu, inflater)\n        inflater.inflate(R.menu.menu_void, menu)\n    }\n\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when(item.itemId){\n            R.id.menu_void -> {\n                if(!viewModel.state.sale!!.isVoid) {\n                    viewModel.onClickVoid()\n                } else {\n                    val dialog = DialogBuilderHelper.showDialogInfo(requireActivity(), getString(R.string.informasi), \"Transaksi sudah dibatalkan!\", positiveListener = {it.dismiss()})\n                    dialog.show(parentFragmentManager, \"\")\n                }\n            }\n        }\n        return super.onOptionsItemSelected(item)\n    }\n\n    override fun initComponents() {\n        arguments?.let {\n            val sale = it.getParcelable<Sale>(\"sale\")\n            viewModel.updateState(\n                viewModel.state.copy(\n                    sale = sale\n                )\n            )\n            viewModel.getSaledList()\n        }\n        setHasOptionsMenu(true)\n        detailAdapter = InvoiceAdapter(\n            onItemClicK = {},\n            onDeleteClick = {},\n            isDelete = false,\n            modePos = activityViewModel.posModeState.value\n        )\n        binding.apply {\n            if(activityViewModel.posModeState.value is PosModeState.FnBState)\n                groupSalesman.gone()\n\n            rvList.apply {\n                adapter = detailAdapter\n                layoutManager = LinearLayoutManager(requireContext())\n            }\n\n            findNavController().currentBackStackEntry?.savedStateHandle?.getLiveData<Sale>(\"sale\")?.observe(viewLifecycleOwner) { sale ->\n                viewModel.updateState(\n                    viewModel.state.copy(sale = sale)\n                )\n                binding.apply {\n                    setToolbarTitle(sale.trxNo)\n                    tvTotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.total))\n                    tvKasir.text = sale.cashiername\n                    tvMember.text = sale.bpName\n                    tvPajak.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.taxAmt))\n                    tvDiskon.text =  getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.discAmt))\n                    tvPembulatan.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.rounding))\n                    tvSubtotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.subtotal))\n                    tvTanggal.text = dateFormat.format(sale.trxDate)\n                    tvJenisPembayaran.text = Utils.getTermType(requireActivity(), sale.termType)\n                    tvChannel.text = sale.channel\n                    tvSalesman.text = sale.salesman\n\n                    btnCetak.isEnabled = sale.isVoid\n                    if(sale.isVoid) {\n                        btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_disable)\n                    } else {\n                        btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_primary)\n                    }\n                    groupSurc.isVisible = sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI\n                    if (sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI) {\n                        var totalSurc: BigDecimal = BigDecimal.ZERO\n                        viewModel.state.saleCrcvList.forEach {\n                            totalSurc += BigDecimal(it.surcAmt)\n                        }\n                        tvSurcharge.text = getString(\n                            R.string.mata_uang_nominal,\n                            viewModel.state.crc?.symbol,\n                            CurrencyUtils.formatCurrency(totalSurc)\n                        )\n                    }\n                }\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            btnCetak.setOnClickListener {\n                viewModel.onClickPrint()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.viewStates().collect { state ->\n                    state?.let {\n                        it.sale?.let { sale ->\n                            binding.apply {\n                                setToolbarTitle(sale.trxNo)\n                                tvTotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.total))\n                                tvKasir.text = sale.cashiername\n                                tvMember.text = sale.bpName\n                                tvPajak.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.taxAmt))\n                                tvDiskon.text =  getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.discAmt))\n                                tvPembulatan.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.rounding))\n                                tvSubtotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.subtotal))\n                                tvTanggal.text = dateFormat.format(sale.trxDate)\n                                tvJenisPembayaran.text = Utils.getTermType(requireActivity(), sale.termType)\n                                tvChannel.text = sale.channel\n                                tvSalesman.text = sale.salesman\n\n                                btnCetak.isEnabled = !sale.isVoid\n                                llVoid.isVisible = sale.isVoid\n                                if(sale.isVoid) {\n                                    btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_disable)\n                                } else {\n                                    btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_primary)\n                                }\n                                groupSurc.isVisible = sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI\n                                if (sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI) {\n                                    var totalSurc: BigDecimal = BigDecimal.ZERO\n                                    state.saleCrcvList.forEach {\n                                        totalSurc += BigDecimal(it.surcAmt)\n                                    }\n                                    tvSurcharge.text = getString(\n                                        R.string.mata_uang_nominal,\n                                        viewModel.state.crc?.symbol,\n                                        CurrencyUtils.formatCurrency(totalSurc)\n                                    )\n                                }\n                            }\n                        }\n                        detailAdapter.submitList(it.saledList)\n                        if(it.saleAddOnDList.isNotEmpty())\n                            detailAdapter.submitSaleAddOnDList(it.saleAddOnDList)\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.event.collect{\n                when(it){\n                    DetailTransaksiPenjualanViewModel.UIEvent.SuccessVoid -> {\n                        viewModel.state.sale?.let {\n//                            parentViewModel.updateActiveSale(it.copy(isVoid = true))\n                        }\n                    }\n                    DetailTransaksiPenjualanViewModel.UIEvent.NavigateToHapusTransaksi -> {\n//                        val dialog = HapusTransaksiDialog(onFinish = {\n//                            viewModel.updateState(\n//                                viewModel.state.copy(sale = it)\n//                            )\n//                        })\n//                        dialog.show(parentFragmentManager, \"\")\n                        val action = if(BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_LANDSCAPE)\n                            TransaksiPenjualanFragmentDirections.actionTransaksiPenjualanFragmentToHapusTransaksiDialog(viewModel.state.sale!!)\n                        else DetailTransaksiPenjualanFragmentDirections.actionDetailTransaksiPenjualanFragmentToHapusTransaksiDialog(viewModel.state.sale!!)\n                        findNavController().navigate(action)\n                    }\n                    DetailTransaksiPenjualanViewModel.UIEvent.ReqPrint -> {\n                        printerHelper.printInvoiceDuplicate(requireActivity(), viewModel.state.sale!!)\n                    }\n                }\n            }\n        }\n        if (BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_LANDSCAPE) {\n            viewLifecycleOwner.lifecycleScope.launch {\n                viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                    parentViewModel.activeSale.collect { sale ->\n                        binding.group.isVisible = sale != null\n                        viewModel.updateState(\n                            viewModel.state.copy(sale = sale)\n                        )\n                        viewModel.getSaledList()\n                    }\n                }\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/detail_transaksi_penjualan/DetailTransaksiPenjualanFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/detail_transaksi_penjualan/DetailTransaksiPenjualanFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/detail_transaksi_penjualan/DetailTransaksiPenjualanFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/detail_transaksi_penjualan/DetailTransaksiPenjualanFragment.kt	(date 1670402364962)
@@ -27,6 +27,7 @@
 import com.bits.bee.bpmc.utils.Utils
 import com.bits.bee.bpmc.utils.extension.gone
 import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.flow.collectLatest
 import kotlinx.coroutines.launch
 import java.math.BigDecimal
 import java.text.SimpleDateFormat
@@ -56,7 +57,9 @@
 
     override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
         super.onCreateOptionsMenu(menu, inflater)
-        inflater.inflate(R.menu.menu_void, menu)
+        if(!viewModel.state.sale!!.isVoid) {
+            inflater.inflate(R.menu.menu_void, menu)
+        }
     }
 
     override fun onOptionsItemSelected(item: MenuItem): Boolean {
@@ -100,42 +103,43 @@
             }
 
             findNavController().currentBackStackEntry?.savedStateHandle?.getLiveData<Sale>("sale")?.observe(viewLifecycleOwner) { sale ->
-                viewModel.updateState(
-                    viewModel.state.copy(sale = sale)
-                )
-                binding.apply {
-                    setToolbarTitle(sale.trxNo)
-                    tvTotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.total))
-                    tvKasir.text = sale.cashiername
-                    tvMember.text = sale.bpName
-                    tvPajak.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.taxAmt))
-                    tvDiskon.text =  getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.discAmt))
-                    tvPembulatan.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.rounding))
-                    tvSubtotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.subtotal))
-                    tvTanggal.text = dateFormat.format(sale.trxDate)
-                    tvJenisPembayaran.text = Utils.getTermType(requireActivity(), sale.termType)
-                    tvChannel.text = sale.channel
-                    tvSalesman.text = sale.salesman
-
-                    btnCetak.isEnabled = sale.isVoid
-                    if(sale.isVoid) {
-                        btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_disable)
-                    } else {
-                        btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_primary)
-                    }
-                    groupSurc.isVisible = sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI
-                    if (sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI) {
-                        var totalSurc: BigDecimal = BigDecimal.ZERO
-                        viewModel.state.saleCrcvList.forEach {
-                            totalSurc += BigDecimal(it.surcAmt)
-                        }
-                        tvSurcharge.text = getString(
-                            R.string.mata_uang_nominal,
-                            viewModel.state.crc?.symbol,
-                            CurrencyUtils.formatCurrency(totalSurc)
-                        )
-                    }
-                }
+                findNavController().popBackStack()
+//                binding.apply {
+//                    setToolbarTitle(sale.trxNo)
+////                    tvTotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.total))
+////                    tvKasir.text = sale.cashiername
+////                    tvMember.text = sale.bpName
+////                    tvPajak.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.taxAmt))
+////                    tvDiskon.text =  getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.discAmt))
+////                    tvPembulatan.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.rounding))
+////                    tvSubtotal.text = getString(R.string.mata_uang_nominal, viewModel.state.crc?.symbol, CurrencyUtils.formatCurrency(sale.subtotal))
+////                    tvTanggal.text = dateFormat.format(sale.trxDate)
+////                    tvJenisPembayaran.text = Utils.getTermType(requireActivity(), sale.termType)
+////                    tvChannel.text = sale.channel
+////                    tvSalesman.text = sale.salesman
+////
+////                    btnCetak.isEnabled = sale.isVoid
+////                    if(sale.isVoid) {
+////                        btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_disable)
+////                    } else {
+////                        btnCetak.background = ContextCompat.getDrawable(requireActivity(), R.drawable.btn_rect_primary)
+////                    }
+////                    groupSurc.isVisible = sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI
+////                    if (sale.termType != BPMConstants.BPM_DEFAULT_TYPE_TUNAI) {
+////                        var totalSurc: BigDecimal = BigDecimal.ZERO
+////                        viewModel.state.saleCrcvList.forEach {
+////                            totalSurc += BigDecimal(it.surcAmt)
+////                        }
+////                        tvSurcharge.text = getString(
+////                            R.string.mata_uang_nominal,
+////                            viewModel.state.crc?.symbol,
+////                            CurrencyUtils.formatCurrency(totalSurc)
+////                        )
+////                    }
+//                }
+//                viewModel.updateState(
+//                    viewModel.state.copy(sale = sale)
+//                )
             }
         }
     }
@@ -151,7 +155,7 @@
     override fun subscribeObservers() {
         viewLifecycleOwner.lifecycleScope.launch {
             viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){
-                viewModel.viewStates().collect { state ->
+                viewModel.viewStates().collectLatest { state ->
                     state?.let {
                         it.sale?.let { sale ->
                             binding.apply {
@@ -213,7 +217,9 @@
 //                        dialog.show(parentFragmentManager, "")
                         val action = if(BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_LANDSCAPE)
                             TransaksiPenjualanFragmentDirections.actionTransaksiPenjualanFragmentToHapusTransaksiDialog(viewModel.state.sale!!)
-                        else DetailTransaksiPenjualanFragmentDirections.actionDetailTransaksiPenjualanFragmentToHapusTransaksiDialog(viewModel.state.sale!!)
+                        else
+                            DetailTransaksiPenjualanFragmentDirections.actionDetailTransaksiPenjualanFragmentToHapusTransaksiDialog(viewModel.state.sale!!)
+
                         findNavController().navigate(action)
                     }
                     DetailTransaksiPenjualanViewModel.UIEvent.ReqPrint -> {
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.setting_printer.add_printer\n\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.model.Printer\nimport com.bits.bee.bpmc.domain.model.PrinterKitchen\nimport com.bits.bee.bpmc.domain.usecase.printer.DeletePrinterUseCase\nimport com.bits.bee.bpmc.domain.usecase.printer.PrinterInteractor\nimport com.bits.bee.bpmc.domain.usecase.printer.SavePrinterUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.presentation.service.BluetoothConnectService\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass AddPrinterViewModel @Inject constructor(\n    private val printerInteractor: PrinterInteractor,\n    private val savePrinterUseCase: SavePrinterUseCase,\n    private val deletePrinterUseCase: DeletePrinterUseCase,\n    val bluetoothConnectService: BluetoothConnectService,\n): BaseViewModel<AddPrinterState, AddPrinterViewModel.UIEvent>() {\n\n    init {\n        state = AddPrinterState()\n    }\n\n    fun onClickDelete() = viewModelScope.launch {\n        state.mPrinter?.let {\n            deletePrinterUseCase(it)\n            eventChannel.send(UIEvent.NavigateBack)\n        }\n    }\n\n    fun onClickPrinterKasir(b : Boolean) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                mPrinter = state.mPrinter?.copy(isReceipt = b)\n            )\n        )\n    }\n\n    fun onClickPrinterSetoran(b : Boolean) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                mPrinter = state.mPrinter?.copy(isReport = b)\n            )\n        )\n    }\n\n    fun onClickPrinterKitchen(b : Boolean) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                mPrinter = state.mPrinter?.copy(isKitchen = b)\n            )\n        )\n        if(b)\n            onClickAddPrinterKitchen()\n        else\n            clearPrinterKitchen()\n    }\n\n    fun onClickTesPrint() = viewModelScope.launch {\n        eventChannel.send(UIEvent.RequestTesPrint)\n    }\n\n    fun onClickRadio(value : String) = viewModelScope.launch {\n        updateState(\n            state.copy(\n                mPrinter = state.mPrinter?.copy(size = value)\n            )\n        )\n    }\n\n    fun onClickAddPrinterKitchen() {\n        val printerKitchen = PrinterKitchen()\n        val printerKitchenList = mutableListOf<PrinterKitchen>()\n        printerKitchenList.addAll(state.printerKitchenList)\n        printerKitchenList.add(printerKitchen)\n        updateState(\n            state.copy(\n                printerKitchenList = printerKitchenList,\n                mPrinter = state.mPrinter?.copy(isKitchen = printerKitchenList.isNotEmpty())\n            )\n        )\n    }\n\n    fun onClickMinuPrintersKitchen() = viewModelScope.launch {\n        if(state.printerKitchenList.isNotEmpty()) {\n            val printerKitchenList = mutableListOf<PrinterKitchen>()\n            printerKitchenList.addAll(state.printerKitchenList)\n            printerKitchenList.removeAt(printerKitchenList.size - 1)\n            updateState(\n                state.copy(\n                    printerKitchenList = printerKitchenList,\n                    mPrinter = state.mPrinter?.copy(isKitchen = printerKitchenList.isNotEmpty())\n                )\n            )\n        }\n    }\n\n    fun onClickAddKitchen(printerKitchen : PrinterKitchen) = viewModelScope.launch {\n        val printerKitchenList = mutableListOf<PrinterKitchen>()\n        printerKitchenList.addAll(state.printerKitchenList)\n        printerKitchenList.first { it == printerKitchen  }.kitchenList = printerKitchen.kitchenList\n        updateState(\n            state.copy(\n                printerKitchenList = printerKitchenList\n            )\n        )\n    }\n\n    private fun clearPrinterKitchen() = viewModelScope.launch {\n        updateState(\n            state.copy(printerKitchenList = mutableListOf())\n        )\n    }\n\n    fun doSave() = viewModelScope.launch {\n        state.mPrinter?.let {\n            var isValid = true\n            if(state.printerKitchenList.isNotEmpty()) {\n                state.printerKitchenList.forEach {\n                    isValid = it.kitchenName.isNotEmpty() && it.kitchenList.isNotEmpty()\n                }\n                if(!isValid)\n                    sendMessage(\"Pastikan nama dapur dan kategori terisi semua!\")\n            }\n            if(isValid) {\n                savePrinterUseCase(it, state.printerKitchenList)\n                eventChannel.send(UIEvent.NavigateBack)\n            }\n        }\n    }\n\n    fun setPrinterKitchen(mPrinter: Printer?) = viewModelScope.launch {\n        printerInteractor.getPrinterFromPrinterKitchen(mPrinter!!.id!!).collect {\n            updateState(\n                state.copy(printerKitchenList = it)\n            )\n        }\n    }\n\n    fun onClickShowPrinter() = viewModelScope.launch{\n        eventChannel.send(UIEvent.RequestTipePrinter)\n    }\n\n    sealed class UIEvent{\n        object RequestTipePrinter : UIEvent()\n        object NavigateBack : UIEvent()\n        object RequestTesPrint : UIEvent()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/setting_printer/add_printer/AddPrinterViewModel.kt	(date 1670385467929)
@@ -8,6 +8,7 @@
 import com.bits.bee.bpmc.domain.usecase.printer.SavePrinterUseCase
 import com.bits.bee.bpmc.presentation.base.BaseViewModel
 import com.bits.bee.bpmc.presentation.service.BluetoothConnectService
+import com.bits.bee.bpmc.utils.BeePreferenceManager
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.launch
 import javax.inject.Inject
@@ -18,12 +19,15 @@
     private val savePrinterUseCase: SavePrinterUseCase,
     private val deletePrinterUseCase: DeletePrinterUseCase,
     val bluetoothConnectService: BluetoothConnectService,
+    private val beePreferenceManager: BeePreferenceManager
 ): BaseViewModel<AddPrinterState, AddPrinterViewModel.UIEvent>() {
 
     init {
         state = AddPrinterState()
     }
 
+    val modePreferences = beePreferenceManager.modePreferences
+
     fun onClickDelete() = viewModelScope.launch {
         state.mPrinter?.let {
             deletePrinterUseCase(it)
Index: app/src/main/java/com/bits/bee/bpmc/presentation/base/BaseFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.base\n\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.annotation.StringRes\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.viewbinding.ViewBinding\nimport com.bits.bee.bpmc.R\nimport com.google.android.material.snackbar.Snackbar\n\n/**\n * Created by aldi on 10/03/22.\n */\nabstract class BaseFragment<T : ViewBinding> : Fragment(), BaseInterface {\n\n    //View Binding\n    private var _binding : ViewBinding? = null\n    abstract val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> T\n\n    @Suppress(\"UNCHECKED_CAST\")\n    protected val binding: T\n        get() = _binding as T\n\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        _binding = bindingInflater.invoke(inflater, container, false)\n        return requireNotNull(_binding).root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        initComponents()\n        subscribeListeners()\n        subscribeObservers()\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        _binding = null\n    }\n\n    abstract override fun initComponents()\n\n    abstract override fun subscribeListeners()\n\n    abstract override fun subscribeObservers()\n\n    override fun showSnackbar(message: String) =\n        Snackbar.make(requireView(), message, Snackbar.LENGTH_SHORT).show()\n\n    override fun showSnackbarWithAction(\n        @StringRes message: Int,\n        @StringRes actionText: Int,\n        action: () -> Any\n    ) {\n        val snackBar = Snackbar.make(requireView(), message, Snackbar.LENGTH_INDEFINITE)\n        snackBar.setAction(actionText) { _ -> action.invoke() }\n        snackBar.setActionTextColor(ContextCompat.getColor(requireContext(), R.color.red))\n        snackBar.show()\n    }\n\n    override fun showToast(message: Int) =\n        Toast.makeText(requireContext(), message, Toast.LENGTH_SHORT).show()\n\n    fun setToolbarTitle(title : String){\n        (requireActivity() as AppCompatActivity).supportActionBar?.let{it.title = title}\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/base/BaseFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/base/BaseFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/base/BaseFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/base/BaseFragment.kt	(date 1670399700110)
@@ -73,6 +73,8 @@
         Toast.makeText(requireContext(), message, Toast.LENGTH_SHORT).show()
 
     fun setToolbarTitle(title : String){
-        (requireActivity() as AppCompatActivity).supportActionBar?.let{it.title = title}
+        (requireActivity() as AppCompatActivity).supportActionBar?.let{
+            it.title = title
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/analisis_sesi/AnalisaSesiFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.analisis_sesi\n\nimport android.graphics.Color\nimport android.graphics.DashPathEffect\nimport android.os.Bundle\nimport android.view.*\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentAnalisaSesiBinding\nimport com.bits.bee.bpmc.domain.model.Posses\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.CurrencyUtils\nimport com.bits.bee.bpmc.utils.DateFormatUtils\nimport com.github.mikephil.charting.components.XAxis\nimport com.github.mikephil.charting.data.Entry\nimport com.github.mikephil.charting.data.LineData\nimport com.github.mikephil.charting.data.LineDataSet\nimport com.github.mikephil.charting.formatter.IFillFormatter\nimport com.github.mikephil.charting.formatter.ValueFormatter\nimport com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider\nimport com.github.mikephil.charting.interfaces.datasets.ILineDataSet\nimport com.github.mikephil.charting.utils.Utils\nimport com.google.gson.Gson\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\nimport java.math.BigDecimal\nimport java.sql.Date\n\n/**\n * Created by aldi on 13/04/22.\n */\n@AndroidEntryPoint\nclass AnalisaSesiFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentAnalisaSesiBinding = FragmentAnalisaSesiBinding::inflate\n) : BaseFragment<FragmentAnalisaSesiBinding>() {\n\n    private val viewModel : AnalisaSesiViewModel by viewModels()\n    private var mPosses: Posses? = null\n    private var isRiwayat: Boolean = false\n    private var bigDecimalZero: BigDecimal = BigDecimal(\"0\")\n//    private lateinit var chart: LineChart\n\n    private lateinit var itemRankAdapter: ItemRankAdapter\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        viewModel.updateState(\n            viewModel.state.copy(\n                possesList = null\n            )\n        )\n        arguments?.let {\n            isRiwayat = it.getBoolean(\"isRiwayat\")\n            if (isRiwayat){\n                if (!it.getString(\"posses\").equals(\"null\") && it.getString(\"posses\")?.isNotEmpty() == true){\n                    mPosses = Gson().fromJson(it.getString(\"posses\"), Posses::class.java)\n                    viewModel.updateState(\n                        viewModel.state.copy(\n                            posses = mPosses\n                        )\n                    )\n                }\n            }\n        }\n    }\n\n    override fun initComponents() {\n        setHasOptionsMenu(true)\n        viewModel.checkPosses()\n        binding.apply {\n            itemRankAdapter = ItemRankAdapter()\n            rvRankItem.apply {\n                layoutManager = LinearLayoutManager(requireContext())\n                adapter = itemRankAdapter\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            btnBukaKasir.setOnClickListener {\n                viewModel.onClickBukaKasir()\n            }\n            btnLihatRiwayat.setOnClickListener {\n                viewModel.onClickMenu()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        loadViewChart()\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect { event ->\n                    when(event){\n                        AnalisaSesiViewModel.UIEvent.RequstDetailBukaKasir ->{\n                            val action = AnalisaSesiFragmentDirections.actionAnalasisiSesiFragmentToDetailBukaKasirFragment()\n                            findNavController().navigate(action)\n                        }\n                        AnalisaSesiViewModel.UIEvent.RequestRiwayatSesi ->{\n                            val action = AnalisaSesiFragmentDirections.actionAnalasisiSesiFragmentToRiwayatSesiFragment()\n                            findNavController().navigate(action)\n                        }\n                    }\n                }\n            }\n        }\n\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.viewStates().collect {\n                    it?.let {\n                        binding.apply {\n                            if (isRiwayat){\n                                lLAnalisaEmpty.visibility = View.GONE\n                                sVKasirAktif.visibility = View.VISIBLE\n                            }else{\n                                it.possesList?.let {\n                                    if (it.isNotEmpty()){\n                                        viewModel.getActivePosses()\n                                        lLAnalisaEmpty.visibility = View.GONE\n                                        sVKasirAktif.visibility = View.VISIBLE\n                                    }else{\n                                        lLAnalisaEmpty.visibility = View.VISIBLE\n                                        sVKasirAktif.visibility = View.GONE\n                                    }\n                                }\n                            }\n                            it.posses?.let { data->\n                                val startTime = Date(data.startTime.time)\n                                tvMulaiOperasional.text = DateFormatUtils.formatDateToString(\n                                    BPMConstants.DEFAULT_DATE_FORMAT, startTime)\n                                if (data.endTime != null){\n                                    val endTime = Date(data.endTime!!.time)\n                                    tvSelesaiOperasional.text = DateFormatUtils.formatDateToString(\n                                        BPMConstants.DEFAULT_DATE_FORMAT, endTime)\n                                }else{\n                                    tvSelesaiOperasional.text = \"\"\n                                }\n                                tvSesi.text = \"#${data.shift}\"\n                                tvModal.text = getString(R.string.mata_uang_nominal,\n                                    \"Rp\", CurrencyUtils.formatCurrency(data.startBal))\n                                tvTotalPendapatan.text = getString(R.string.mata_uang_nominal,\n                                    \"Rp\", CurrencyUtils.formatCurrency(data.total.add(data.startBal)))\n                                tvPemasukan.text = getString(R.string.mata_uang_nominal,\n                                    \"Rp\", CurrencyUtils.formatCurrency(data.totIn ?: bigDecimalZero))\n                                tvPengeluaran.text = getString(R.string.mata_uang_nominal,\n                                    \"Rp\", CurrencyUtils.formatCurrency(data.totOut ?: bigDecimalZero))\n                                viewModel.getValueDetail()\n                            }\n                            it.user?.let {\n                                tvUserKasir.text = it.name\n                            }\n                            it.saleList?.let {\n                                tvAvgOrder.text = getString(R.string.mata_uang_nominal,\n                                    \"Rp\", CurrencyUtils.formatCurrency(viewModel.totalAvg(it)))\n                                tvJmlOrder.text = it.size.toString()\n                                tvTotalQty.text = CurrencyUtils.formatCurrency(viewModel.totalQty(it))\n                            }\n                            it.bpDateList?.let {\n                                tvNewMember.text = it.size.toString()\n                            }\n                            it.notaSucces?.let {\n                                tvTransSukses.text = it.toString()\n                            }\n                            it.notaVoid?.let {\n                                tvTransVoid.text = it.toString()\n                            }\n                            it.totalTunai?.let {\n                                tvTotalTunai.text = getString(R.string.mata_uang_nominal, \"Rp\", CurrencyUtils.formatCurrency(it))\n                            }\n                            it.totalDebit?.let {\n                                tvTotalDebit.text = getString(R.string.mata_uang_nominal, \"Rp\", CurrencyUtils.formatCurrency(it))\n                            }\n                            it.totalKredit?.let {\n                                tvTotalKredit.text = getString(R.string.mata_uang_nominal, \"Rp\", CurrencyUtils.formatCurrency(it))\n                            }\n                            it.totalGopay?.let {\n                                tvTotalGopay.text = getString(R.string.mata_uang_nominal, \"Rp\", CurrencyUtils.formatCurrency(it ?: bigDecimalZero))\n                            }\n                            tvTotalNonTunai.text = getString(R.string.mata_uang_nominal, \"Rp\", CurrencyUtils.formatCurrency(viewModel.getTotalNonTunai()))\n                            it.rankItem?.let {\n//                                clEmptyRanking.visibility = View.GONE\n//                                clRanking.visibility = View.VISIBLE\n//                                itemRankAdapter.submitList(it)\n                                if (it.size > 0){\n                                    clEmptyRanking.visibility = View.GONE\n                                    clRanking.visibility = View.VISIBLE\n                                    itemRankAdapter.submitList(it)\n                                }else{\n                                    clEmptyRanking.visibility = View.VISIBLE\n                                    clRanking.visibility = View.GONE\n                                }\n                            }\n//                            it.reg?.let { datareg->\n//                                loadViewChart()\n//                            }\n//                            it.listEntry?.let {\n//                                setListEntry(it)\n//                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    fun loadViewChart(){\n        binding.apply {\n            chart1.setBackgroundColor(Color.WHITE)\n            chart1.description.isEnabled = false\n            chart1.setTouchEnabled(true)\n            chart1.setDrawGridBackground(false)\n            chart1.isDragEnabled = true\n            chart1.setScaleEnabled(true)\n            chart1.setPinchZoom(true)\n            chart1.legend.isEnabled = false\n            chart1.setNoDataText(\"Tidak ada data untuk sesi ini\")\n            chart1.setNoDataTextColor(resources.getColor(R.color.red))\n\n            // // X-Axis Style // //\n            // // X-Axis Style // //\n            val xAxis = chart1.xAxis\n\n            xAxis.position = XAxis.XAxisPosition.BOTTOM\n            xAxis.enableGridDashedLine(10f, 10f, 0f)\n            xAxis.granularity = 1f\n//            xAxis.valueFormatter = object : ValueFormatter() {\n//                override fun getFormattedValue(value: Float): String {\n//                    return if (!viewModel.state.reg!!.value.equals(\"1\")) String.format(\n//                        \"%02d\",\n//                        value.toInt()\n//                    ) else getString(R.string.star)\n//                }\n//            }\n\n            val yAxis = chart1.axisLeft\n            chart1.axisRight.isEnabled = false\n            yAxis.enableGridDashedLine(10f, 10f, 0f)\n            yAxis.axisMinimum = 0f\n            chart1.animateX(1500)\n        }\n\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n                viewModel.viewStates().collect {\n                    it?.let {\n                        it.listEntry?.let {\n                            setListEntry(it)\n                        }\n                    }\n                }\n            }\n        }\n\n//        val dataGr: MutableList<Entry> = mutableListOf()\n//        var set1: LineDataSet\n//\n//        dataGr.add(Entry(0f, 0f))\n//        dataGr.add(Entry(1f, 0f))\n//        dataGr.add(Entry(2f, 0f))\n//        dataGr.add(Entry(3f, 300f))\n//        dataGr.add(Entry(4f, 0f))\n//        dataGr.add(Entry(5f, 0f))\n//        dataGr.add(Entry(6f, 15500f))\n//        dataGr.add(Entry(7f, 0f))\n//        dataGr.add(Entry(8f, 0f))\n//        dataGr.add(Entry(9f, 12000f))\n//        dataGr.add(Entry(10f, 0f))\n//\n//\n//        val kasusLineDataSet = LineDataSet(dataGr, \"Produk\")\n//        kasusLineDataSet.mode = LineDataSet.Mode.CUBIC_BEZIER\n//        kasusLineDataSet.color = Color.BLUE\n//        kasusLineDataSet.circleRadius = 5f\n//        kasusLineDataSet.setCircleColor(Color.BLUE)\n//\n//        //Setup Legend\n//        binding.apply {\n//            val legend = chart1.legend\n//            legend.isEnabled = true\n//            legend.setVerticalAlignment(Legend.LegendVerticalAlignment.TOP)\n//            legend.setHorizontalAlignment(Legend.LegendHorizontalAlignment.CENTER)\n//            legend.setOrientation(Legend.LegendOrientation.HORIZONTAL)\n//            legend.setDrawInside(false)\n//\n//            chart1.description.isEnabled = false\n//            chart1.xAxis.position = XAxis.XAxisPosition.BOTTOM\n//            chart1.data = LineData(kasusLineDataSet)\n//            chart1.animateXY(100, 500)\n//        }\n    }\n\n    fun setListEntry(entries: List<Entry>) {\n        var set1: LineDataSet\n\n        binding.apply {\n            if (chart1.data != null && chart1.data.dataSetCount > 0){\n                set1 = chart1.data.getDataSetByIndex(0) as LineDataSet\n                set1.values = entries\n                set1.notifyDataSetChanged()\n                chart1.data.notifyDataChanged()\n                chart1.notifyDataSetChanged()\n            }else{\n                set1 = LineDataSet(entries, \"DataSet 1\")\n                set1.setDrawIcons(false)\n                set1.color = resources.getColor(R.color.red)\n                set1.setCircleColor(resources.getColor(R.color.red))\n                set1.lineWidth = 1f\n                set1.circleRadius = 3f\n                set1.setDrawCircleHole(true)\n                set1.formLineWidth = 1f\n                set1.formLineDashEffect = DashPathEffect(floatArrayOf(10f, 5f), 0f)\n                set1.formSize = 15f\n                set1.valueTextSize = 9f\n                set1.enableDashedHighlightLine(10f, 5f, 0f)\n                set1.setDrawFilled(true)\n                set1.setFillFormatter(object : IFillFormatter{\n                    override fun getFillLinePosition(\n                        dataSet: ILineDataSet?,\n                        dataProvider: LineDataProvider?\n                    ): Float {\n                        return chart1.axisLeft.axisMinimum\n                    }\n\n                })\n                if (Utils.getSDKInt() >= 18){\n                    val drawable = ContextCompat.getDrawable(requireContext(), R.color.gray_lite)\n                    set1.fillDrawable = drawable\n                }else{\n                    set1.fillColor = resources.getColor(R.color.gray_lite)\n                }\n\n                val dataSets = ArrayList<ILineDataSet>()\n                dataSets.add(set1)\n\n                val data = LineData(dataSets)\n                data.setValueFormatter(object : ValueFormatter() {\n                    override fun getFormattedValue(value: Float): String {\n                        return String.format(\"%d\", value.toInt())\n                    }\n                })\n                chart1.data = data\n            }\n        }\n    }\n\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n        super.onCreateOptionsMenu(menu, inflater)\n        inflater.inflate(R.menu.menu_analisa_sesi, menu)\n    }\n\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when(item.itemId){\n            R.id.menu_list -> viewModel.onClickMenu()\n        }\n        return super.onOptionsItemSelected(item)\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/analisis_sesi/AnalisaSesiFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/analisis_sesi/AnalisaSesiFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/analisis_sesi/AnalisaSesiFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/analisis_sesi/AnalisaSesiFragment.kt	(date 1670315294814)
@@ -18,6 +18,7 @@
 import com.bits.bee.bpmc.utils.BPMConstants
 import com.bits.bee.bpmc.utils.CurrencyUtils
 import com.bits.bee.bpmc.utils.DateFormatUtils
+import com.bits.bee.bpmc.utils.extension.replaceNumberWithStars
 import com.github.mikephil.charting.components.XAxis
 import com.github.mikephil.charting.data.Entry
 import com.github.mikephil.charting.data.LineData
@@ -144,61 +145,79 @@
                                 }else{
                                     tvSelesaiOperasional.text = ""
                                 }
+                                var modal = CurrencyUtils.formatCurrency(data.startBal)
+                                var totalPendapatan =  CurrencyUtils.formatCurrency(data.total.add(data.startBal))
+                                var pemasukan =  CurrencyUtils.formatCurrency(data.totIn ?: bigDecimalZero)
+                                var pengeluaran =  CurrencyUtils.formatCurrency(data.totOut ?: bigDecimalZero)
+                                var totalTunai =  CurrencyUtils.formatCurrency(it.totalTunai)
+                                var totalDebit =  CurrencyUtils.formatCurrency(it.totalDebit)
+                                var totalKredit =  CurrencyUtils.formatCurrency(it.totalKredit)
+                                var totalGopay =  CurrencyUtils.formatCurrency(it.totalGopay)
+                                var totalNonTunai =  CurrencyUtils.formatCurrency(viewModel.getTotalNonTunai())
+
+
+                                it.reg?.let {
+                                    if(it.value == "1"){
+                                        modal = modal.replaceNumberWithStars()
+                                        totalPendapatan = totalPendapatan.replaceNumberWithStars()
+                                        pemasukan = pemasukan.replaceNumberWithStars()
+                                        pengeluaran = pengeluaran.replaceNumberWithStars()
+                                        totalTunai = totalTunai.replaceNumberWithStars()
+                                        totalDebit = totalDebit.replaceNumberWithStars()
+                                        totalKredit = totalKredit.replaceNumberWithStars()
+                                        totalGopay = totalGopay.replaceNumberWithStars()
+                                        totalNonTunai = totalNonTunai.replaceNumberWithStars()
+                                    }
+                                }
                                 tvSesi.text = "#${data.shift}"
                                 tvModal.text = getString(R.string.mata_uang_nominal,
-                                    "Rp", CurrencyUtils.formatCurrency(data.startBal))
+                                    "Rp", modal)
                                 tvTotalPendapatan.text = getString(R.string.mata_uang_nominal,
-                                    "Rp", CurrencyUtils.formatCurrency(data.total.add(data.startBal)))
+                                    "Rp", totalPendapatan)
                                 tvPemasukan.text = getString(R.string.mata_uang_nominal,
-                                    "Rp", CurrencyUtils.formatCurrency(data.totIn ?: bigDecimalZero))
+                                    "Rp", pemasukan)
                                 tvPengeluaran.text = getString(R.string.mata_uang_nominal,
-                                    "Rp", CurrencyUtils.formatCurrency(data.totOut ?: bigDecimalZero))
+                                    "Rp", pengeluaran)
                                 viewModel.getValueDetail()
-                            }
-                            it.user?.let {
-                                tvUserKasir.text = it.name
-                            }
-                            it.saleList?.let {
-                                tvAvgOrder.text = getString(R.string.mata_uang_nominal,
-                                    "Rp", CurrencyUtils.formatCurrency(viewModel.totalAvg(it)))
-                                tvJmlOrder.text = it.size.toString()
-                                tvTotalQty.text = CurrencyUtils.formatCurrency(viewModel.totalQty(it))
-                            }
-                            it.bpDateList?.let {
-                                tvNewMember.text = it.size.toString()
-                            }
-                            it.notaSucces?.let {
-                                tvTransSukses.text = it.toString()
-                            }
-                            it.notaVoid?.let {
-                                tvTransVoid.text = it.toString()
-                            }
-                            it.totalTunai?.let {
-                                tvTotalTunai.text = getString(R.string.mata_uang_nominal, "Rp", CurrencyUtils.formatCurrency(it))
-                            }
-                            it.totalDebit?.let {
-                                tvTotalDebit.text = getString(R.string.mata_uang_nominal, "Rp", CurrencyUtils.formatCurrency(it))
-                            }
-                            it.totalKredit?.let {
-                                tvTotalKredit.text = getString(R.string.mata_uang_nominal, "Rp", CurrencyUtils.formatCurrency(it))
-                            }
-                            it.totalGopay?.let {
-                                tvTotalGopay.text = getString(R.string.mata_uang_nominal, "Rp", CurrencyUtils.formatCurrency(it ?: bigDecimalZero))
-                            }
-                            tvTotalNonTunai.text = getString(R.string.mata_uang_nominal, "Rp", CurrencyUtils.formatCurrency(viewModel.getTotalNonTunai()))
-                            it.rankItem?.let {
+                                it.saleList?.let {
+                                    tvAvgOrder.text = getString(R.string.mata_uang_nominal,
+                                        "Rp", CurrencyUtils.formatCurrency(viewModel.totalAvg(it)))
+                                    tvJmlOrder.text = it.size.toString()
+                                    tvTotalQty.text = CurrencyUtils.formatCurrency(viewModel.totalQty(it))
+                                }
+                                it.bpDateList?.let {
+                                    tvNewMember.text = it.size.toString()
+                                }
+                                it.notaSucces?.let {
+                                    tvTransSukses.text = it.toString()
+                                }
+                                it.notaVoid?.let {
+                                    tvTransVoid.text = it.toString()
+                                }
+                                tvTotalTunai.text = getString(R.string.mata_uang_nominal, "Rp", totalTunai)
+                                tvTotalDebit.text = getString(R.string.mata_uang_nominal, "Rp", totalDebit)
+                                tvTotalKredit.text = getString(R.string.mata_uang_nominal, "Rp", totalKredit)
+                                tvTotalGopay.text = getString(R.string.mata_uang_nominal, "Rp", totalGopay)
+                                tvTotalNonTunai.text = getString(R.string.mata_uang_nominal, "Rp", totalNonTunai)
+
+                                it.rankItem?.let {
 //                                clEmptyRanking.visibility = View.GONE
 //                                clRanking.visibility = View.VISIBLE
 //                                itemRankAdapter.submitList(it)
-                                if (it.size > 0){
-                                    clEmptyRanking.visibility = View.GONE
-                                    clRanking.visibility = View.VISIBLE
-                                    itemRankAdapter.submitList(it)
-                                }else{
-                                    clEmptyRanking.visibility = View.VISIBLE
-                                    clRanking.visibility = View.GONE
+                                    if (it.size > 0){
+                                        clEmptyRanking.visibility = View.GONE
+                                        clRanking.visibility = View.VISIBLE
+                                        itemRankAdapter.submitList(it)
+                                    }else{
+                                        clEmptyRanking.visibility = View.VISIBLE
+                                        clRanking.visibility = View.GONE
+                                    }
                                 }
                             }
+                            it.user?.let {
+                                tvUserKasir.text = it.name
+                            }
+
 //                            it.reg?.let { datareg->
 //                                loadViewChart()
 //                            }
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/transaksi_penjualan/TransaksiPenjualanFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.transaksi_penjualan\n\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.ViewGroup\nimport androidx.appcompat.widget.SearchView\nimport androidx.core.view.isVisible\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport androidx.paging.LoadState\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentTransaksiPenjualanBinding\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.channel_filter.ChannelFilterListDialog\nimport com.bits.bee.bpmc.presentation.dialog.radio_list.filter.RadioListFilterDialog\nimport com.bits.bee.bpmc.presentation.ui.home.HomeActivity\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.FilterUtils\nimport com.bits.bee.bpmc.utils.extension.gone\nimport com.bits.bee.bpmc.utils.extension.visible\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\n/**\n * Created by aldi on 13/04/22.\n */\n@AndroidEntryPoint\nclass TransaksiPenjualanFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentTransaksiPenjualanBinding = FragmentTransaksiPenjualanBinding::inflate\n) : BaseFragment<FragmentTransaksiPenjualanBinding>() {\n\n    private val viewModel : TransaksiPenjualanViewModel by viewModels()\n\n    private lateinit var transAdapter : TransaksiPenjualanAdapter\n\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n        menu.clear()\n        inflater.inflate(R.menu.menu_search, menu)\n        val searchItem = menu.findItem(R.id.menu_search)\n        val searchView = searchItem.actionView as SearchView\n        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener{\n            override fun onQueryTextSubmit(query: String?): Boolean {\n                return true\n            }\n\n            override fun onQueryTextChange(newText: String?): Boolean {\n                if (newText != null && newText.length >= 3) {\n                    viewModel.onSearch(newText)\n                } else {\n                    viewModel.onSearch(\"\")\n                }\n                return true\n            }\n        })\n        super.onCreateOptionsMenu(menu, inflater)\n    }\n\n    override fun initComponents() {\n        setHasOptionsMenu(true)\n//        val slidingPaneLayout = binding.slidingPaneLayout\n//        slidingPaneLayout.lockMode = SlidingPaneLayout.LOCK_MODE_LOCKED\n\n//        requireActivity().onBackPressedDispatcher.addCallback(\n//            viewLifecycleOwner,\n//            TransaksiPenjualanOnBackPressedCallback(slidingPaneLayout)\n//        )\n        binding.apply {\n            transAdapter = TransaksiPenjualanAdapter(\n                onItemClick = {\n                    viewModel.updateActiveSale(it)\n                    if(BeePreferenceManager.ORIENTATION == BPMConstants.SCREEN_POTRAIT) {\n                        val action =\n                            TransaksiPenjualanFragmentDirections.actionTransaksiPenjualanFragmentToDetailTransaksiPenjualanFragment(\n                                it\n                            )\n                        findNavController().navigate(action)\n                    }\n//                    binding.slidingPaneLayout.openPane()\n                }\n            )\n            rvList.apply {\n                adapter = transAdapter\n                layoutManager = LinearLayoutManager(requireContext())\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n//            slidingPaneLayout.addPanelSlideListener(object : SlidingPaneLayout.PanelSlideListener{\n//                override fun onPanelSlide(panel: View, slideOffset: Float) {\n//\n//                }\n//\n//                override fun onPanelOpened(panel: View) {\n//                    (requireActivity() as HomeActivity).setVisibilityBottom(false)\n//                }\n//\n//                override fun onPanelClosed(panel: View) {\n//                    (requireActivity() as HomeActivity).setVisibilityBottom(true)\n//                }\n//            })\n            tilChannel.root.setOnClickListener {\n                val dialog = ChannelFilterListDialog(\n                    selectedChannelList = viewModel.channelList.value,\n                    onFinish = {\n                        viewModel.onFilterChannel(it)\n                    })\n                dialog.show(parentFragmentManager, \"\")\n            }\n            tilPeriode.root.setOnClickListener {\n                val dialog = RadioListFilterDialog(\n                    requireActivity(),\n                    \"Pilih Periode\",\n                    requireActivity().resources.getStringArray(R.array.list_pilih_tgl).toList(),\n                    viewModel.filterDate.value,\n                    onSaveClick = {\n                        viewModel.onFilterPeriode(it)\n                    }\n                )\n                dialog.show(parentFragmentManager, \"\")\n            }\n            tvReset.setOnClickListener {\n                viewModel.onResetFilter()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.currentQuery.collectLatest {\n                (requireActivity() as HomeActivity).setVisibilityBottom(it.isEmpty())\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.viewStates().collect {\n                    it?.let {\n\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            transAdapter.loadStateFlow.collectLatest {\n                if (it.append is LoadState.NotLoading && it.append.endOfPaginationReached) {\n                    setVisibilityList(transAdapter.itemCount != 0)\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.saleList.collectLatest {\n                transAdapter.submitData(it)\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.channelList.collectLatest {\n                val channel = if(it.isNotEmpty()) if(it.size > 1) it[0].name+\", +${it.size -1 }\" else it[0].name else getString(R.string.pilih_channel)\n                binding.tilChannel.tvTitle.text = channel\n                setVisibilityReset()\n            }\n        }\n\n        viewLifecycleOwner.lifecycleScope.launchWhenStarted {\n            viewModel.filterDate.collectLatest {\n                val channel = FilterUtils.getFilterDateLabel(it.selectedPos)\n                binding.tilPeriode.tvTitle.text = channel\n                setVisibilityReset()\n            }\n        }\n    }\n\n    fun setVisibilityReset() {\n        binding.tvReset.isVisible = viewModel.filterDate.value.selectedPos != 0 || viewModel.channelList.value.isNotEmpty()\n    }\n\n    private fun setVisibilityList(isVisible : Boolean) {\n        binding.apply {\n            if(isVisible){\n                rvList.visible()\n                groupEmpty.gone()\n            } else {\n                rvList.gone()\n                groupEmpty.visible()\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/transaksi_penjualan/TransaksiPenjualanFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/transaksi_penjualan/TransaksiPenjualanFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/transaksi_penjualan/TransaksiPenjualanFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/transaksi_penjualan/TransaksiPenjualanFragment.kt	(date 1670396667344)
@@ -1,9 +1,6 @@
 package com.bits.bee.bpmc.presentation.ui.transaksi_penjualan
 
-import android.view.LayoutInflater
-import android.view.Menu
-import android.view.MenuInflater
-import android.view.ViewGroup
+import android.view.*
 import androidx.appcompat.widget.SearchView
 import androidx.core.view.isVisible
 import androidx.fragment.app.viewModels
@@ -23,6 +20,7 @@
 import com.bits.bee.bpmc.utils.BeePreferenceManager
 import com.bits.bee.bpmc.utils.FilterUtils
 import com.bits.bee.bpmc.utils.extension.gone
+import com.bits.bee.bpmc.utils.extension.setSearchViewStyle
 import com.bits.bee.bpmc.utils.extension.visible
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.flow.collectLatest
@@ -45,6 +43,14 @@
         inflater.inflate(R.menu.menu_search, menu)
         val searchItem = menu.findItem(R.id.menu_search)
         val searchView = searchItem.actionView as SearchView
+
+        searchView.queryHint = getString(R.string.cari_transaksi_min_3_karakter)
+
+        searchView.setSearchViewStyle(requireActivity(), R.color.black)
+        searchView.setOnQueryTextFocusChangeListener { _, b ->
+            (requireActivity() as HomeActivity).setVisibilityBottom(!b)
+        }
+
         searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener{
             override fun onQueryTextSubmit(query: String?): Boolean {
                 return true
@@ -136,7 +142,7 @@
     override fun subscribeObservers() {
         viewLifecycleOwner.lifecycleScope.launchWhenStarted {
             viewModel.currentQuery.collectLatest {
-                (requireActivity() as HomeActivity).setVisibilityBottom(it.isEmpty())
+
             }
         }
         viewLifecycleOwner.lifecycleScope.launch {
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.pos\n\nimport android.content.res.ColorStateList\nimport android.graphics.Color\nimport android.graphics.drawable.ColorDrawable\nimport android.view.LayoutInflater\nimport androidx.activity.viewModels\nimport androidx.appcompat.widget.Toolbar\nimport androidx.core.content.ContextCompat\nimport androidx.core.view.isVisible\nimport androidx.core.widget.ImageViewCompat\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.NavController\nimport androidx.navigation.findNavController\nimport androidx.navigation.fragment.NavHostFragment\nimport androidx.navigation.fragment.findNavController\nimport androidx.navigation.ui.AppBarConfiguration\nimport androidx.navigation.ui.NavigationUI\nimport androidx.navigation.ui.setupWithNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.ActivityMainBinding\nimport com.bits.bee.bpmc.presentation.base.BaseActivity\nimport com.bits.bee.bpmc.presentation.service.BluetoothConnectService\nimport com.bits.bee.bpmc.presentation.ui.pos.channel.ChannelListDialogBuilder\nimport com.bits.bee.bpmc.presentation.ui.pos.pos.TAG\nimport com.bits.bee.bpmc.utils.extension.getColorFromAttr\nimport com.facebook.stetho.Stetho\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 07/04/22.\n */\n\n@AndroidEntryPoint\nclass MainActivity(\n    override val bindingInflater: (LayoutInflater) -> ActivityMainBinding = ActivityMainBinding::inflate\n) : BaseActivity<ActivityMainBinding>() {\n\n    private val viewModel : MainViewModel by viewModels()\n\n    private lateinit var navHostFragment: NavHostFragment\n    private lateinit var navController: NavController\n\n    @Inject\n    lateinit var bluetoothConnectService: BluetoothConnectService\n\n    override fun onResume() {\n        super.onResume()\n        lifecycleScope.launchWhenStarted {\n            bluetoothConnectService.onEventConnectAllPrinter(0)\n        }\n    }\n\n    override fun initComponents() {\n        viewModel.saleTrans.newTrans()\n        viewModel.loadData()\n        viewModel.initPromo()\n\n        navHostFragment = supportFragmentManager.findFragmentById(R.id.mainHostFragment) as NavHostFragment\n        initStetho()\n\n        navController = navHostFragment.findNavController()\n\n        val appBarConfiguration = AppBarConfiguration(navController.graph)\n\n        binding.apply {\n            setSupportActionBar(toolbar)\n\n            NavigationUI.setupActionBarWithNavController(this@MainActivity, navController, appBarConfiguration)\n            findViewById<Toolbar>(R.id.toolbar).setupWithNavController(navController, appBarConfiguration)\n\n            navController.addOnDestinationChangedListener { _, _, _ ->\n                toolbar.setNavigationIcon(R.drawable.ic_back_white)\n                if (navController.currentDestination?.id == R.id.posFragment || navController.currentDestination?.id == R.id.transaksiBerhasilFragment) {\n                    toolbar.setNavigationOnClickListener {\n                        if (navController.currentDestination?.id == R.id.posFragment)\n                            finish()\n                        if (navController.currentDestination?.id == R.id.transaksiBerhasilFragment) {\n\n                        }\n                    }\n                } else {\n                    toolbar.setNavigationOnClickListener {\n                        onBackPressed()\n                    }\n                }\n            }\n        }\n    }\n\n\n    override fun subscribeListeners() {\n        binding.apply {\n            clChannel.setOnClickListener {\n                viewModel.onClickChannel()\n            }\n            clMember.setOnClickListener {\n                viewModel.onClickMember()\n            }\n            clSalesman.setOnClickListener {\n                viewModel.onClickSalesman()\n            }\n            navController.addOnDestinationChangedListener { _, destination, _ ->\n                setVisibilityToolbar(destination.id)\n                setBackgroundToolbar(destination.id)\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        lifecycleScope.launchWhenStarted {\n            viewModel.msg.collect {\n                showSnackbar(it)\n            }\n        }\n        lifecycleScope.launch {\n            repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.activeSrep.collect {\n                    binding.apply {\n                        it?.let {\n                            tvSalesman.text = it.name\n                        }\n                    }\n                }\n            }\n        }\n        lifecycleScope.launch {\n            repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.activeBp.collect {\n                    binding.apply {\n                        it?.let {\n                            viewModel.state.sale.bpId = it.id!!\n                            viewModel.state.sale.bpName = it.name\n                            tvMember.text = it.name\n                        }\n                    }\n                }\n            }\n        }\n        lifecycleScope.launch {\n            repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.activeChannel.collect {\n                    binding.apply {\n                        it?.let { channel ->\n                            viewModel.state.sale.channelId = channel.id\n                            tvChannel.text = channel.name\n                            channel.color?.let { color ->\n                                if(color.isNotEmpty())\n                                    ImageViewCompat.setImageTintList(imageChannel, ColorStateList.valueOf(\n                                        Color.parseColor(color)))\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        lifecycleScope.launchWhenStarted {\n            viewModel.event.collectLatest {\n                when(it){\n                    MainViewModel.UIEvent.RequestMember -> {\n                        navController.navigateUp()\n                        navController.navigate(R.id.memberFragment)\n                    }\n                    MainViewModel.UIEvent.RequestChannel -> {\n                        val dialog = ChannelListDialogBuilder(\n                            viewModel.state.channelList,\n                            onChannelClick = { channel ->\n                                viewModel.updateActiveChannel(channel)\n                            }\n                        )\n                        dialog.show(supportFragmentManager, TAG)\n                    }\n                    MainViewModel.UIEvent.NavigateToDiskonNota -> {\n                        navController.navigateUp()\n                        navController.navigate(R.id.diskonNotaDialog)\n                    }\n                    MainViewModel.UIEvent.NavigateToDraft -> {\n                        navController.navigateUp()\n                        navController.navigate(R.id.draftListDialog)\n                    }\n                    MainViewModel.UIEvent.NavigateToSearch -> {\n                        navController.navigateUp()\n                        navController.navigate(R.id.cariItemFragment)\n                    }\n                    MainViewModel.UIEvent.NavigateToPromo -> {\n                        navController.navigateUp()\n                        navController.navigate(R.id.promoFragment)\n                    }\n                    MainViewModel.UIEvent.RequestSalesman -> {\n                        navController.navigateUp()\n                        navController.navigate(R.id.salesmanFragment)\n                    }\n                }\n            }\n\n        }\n        lifecycleScope.launch {\n            lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.posModeState.collect {\n                    when(it){\n                        PosModeState.FnBState -> {\n                            showSalesman(false)\n                        }\n                        PosModeState.RetailState -> {\n                            showSalesman(true)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onSupportNavigateUp(): Boolean {\n        val navController = findNavController(R.id.initialHostFragment)\n        return navController.navigateUp() || super.onSupportNavigateUp()\n    }\n\n    private fun initStetho(){\n        Stetho.initialize(\n            Stetho.newInitializerBuilder(this)\n                .enableDumpapp(Stetho.defaultDumperPluginsProvider(this))\n                .enableWebKitInspector(Stetho.defaultInspectorModulesProvider(this))\n                .build()\n        )\n    }\n\n    private fun setVisibilityToolbar(destinationId: Int){\n        binding.apply {\n            val isVisible = destinationId == R.id.diskonNotaDialog || destinationId == R.id.invoiceFragment\n                    || destinationId == R.id.posFragment || destinationId == R.id.draftListDialog\n            linearLayout10.isVisible = isVisible\n        }\n    }\n\n    private fun setBackgroundToolbar(destinationId : Int){\n        val dest = listOf(\n            R.id.draftFragment,\n            R.id.transaksiBerhasilFragment,\n            R.id.memberFragment,\n            R.id.klaimPromoFragment,\n            R.id.tambahMemberFragment,\n            R.id.salesmanFragment,\n            R.id.detailSalesmanFragment,\n            R.id.hakAksesFragment\n        )\n\n        if(dest.contains(destinationId)) {\n            supportActionBar?.setBackgroundDrawable(\n                ColorDrawable(\n                    ContextCompat.getColor(\n                        this@MainActivity,\n                        R.color.white\n                    )\n                )\n            )\n            binding.toolbar.setTitleTextColor(ContextCompat.getColor(this, R.color.black))\n            binding.toolbar.navigationIcon?.setTint(ContextCompat.getColor(this, R.color.black))\n            binding.toolbar.context.setTheme(R.style.MySearchViewStyleBlack)\n        } else {\n            supportActionBar?.setBackgroundDrawable(\n                ColorDrawable(\n                    getColorFromAttr(R.attr.colorPrimary)\n                )\n            )\n            binding.toolbar.setTitleTextColor(ContextCompat.getColor(this, R.color.white))\n            binding.toolbar.navigationIcon?.setTint(ContextCompat.getColor(this, R.color.white))\n            binding.toolbar.context.setTheme(R.style.MySearchViewStyleWhite)\n        }\n    }\n\n    private fun showSalesman(isVisible : Boolean) {\n        binding.apply {\n            viewSalesman.isVisible = isVisible\n            clSalesman.isVisible = isVisible\n        }\n    }\n\n    override fun onBackPressed() {\n        super.onBackPressed()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainActivity.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainActivity.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainActivity.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/pos/MainActivity.kt	(date 1670316527709)
@@ -75,7 +75,11 @@
             findViewById<Toolbar>(R.id.toolbar).setupWithNavController(navController, appBarConfiguration)
 
             navController.addOnDestinationChangedListener { _, _, _ ->
-                toolbar.setNavigationIcon(R.drawable.ic_back_white)
+                if(navController.currentDestination?.id != R.id.transaksiBerhasilFragment) {
+                    toolbar.setNavigationIcon(R.drawable.ic_back_white)
+                }else {
+                    toolbar.navigationIcon = null
+                }
                 if (navController.currentDestination?.id == R.id.posFragment || navController.currentDestination?.id == R.id.transaksiBerhasilFragment) {
                     toolbar.setNavigationOnClickListener {
                         if (navController.currentDestination?.id == R.id.posFragment)
@@ -177,7 +181,6 @@
                         dialog.show(supportFragmentManager, TAG)
                     }
                     MainViewModel.UIEvent.NavigateToDiskonNota -> {
-                        navController.navigateUp()
                         navController.navigate(R.id.diskonNotaDialog)
                     }
                     MainViewModel.UIEvent.NavigateToDraft -> {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DesignSurface\">\n    <option name=\"filePathToZoomLevelMap\">\n      <map>\n        <entry key=\"app/src/main/res/drawable/ic_baseline_check.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_checked_red.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_close.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_close_red.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_delete_gray.xml\" value=\"0.2435\" />\n        <entry key=\"app/src/main/res/drawable/ic_eye.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_eye_background.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_eye_slash.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_info.xml\" value=\"0.2845\" />\n        <entry key=\"app/src/main/res/drawable/ic_printer.xml\" value=\"0.2435\" />\n        <entry key=\"app/src/main/res/drawable/ic_printer_gray.xml\" value=\"0.2435\" />\n        <entry key=\"app/src/main/res/layout-land/fragment_login_pin.xml\" value=\"0.2713541666666667\" />\n        <entry key=\"app/src/main/res/layout/dialog_detail_member.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/layout/dialog_hapus_transaksi.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_info_akun.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_info_builder.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_loading_helper.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_no_intenet_builder.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_pilih_kategori_merek.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_radio_list.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_radio_list_filter.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_radio_list_tambah.xml\" value=\"0.23596014492753623\" />\n        <entry key=\"app/src/main/res/layout/dialog_tambah_kas.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/dialog_tambah_kas_keluar.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_analisa_sesi.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/layout/fragment_atur_pin.xml\" value=\"0.33\" />\n        <entry key=\"app/src/main/res/layout/fragment_atur_produk.xml\" value=\"0.23596014492753623\" />\n        <entry key=\"app/src/main/res/layout/fragment_detail_transaksi_penjualan.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_draft_list.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/layout/fragment_hak_akses.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/layout/fragment_info_bisnis.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_info_kontak.xml\" value=\"0.4392156862745098\" />\n        <entry key=\"app/src/main/res/layout/fragment_insight_kelola_produk.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_insight_preset_kasir.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_login.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_login_pin.xml\" value=\"0.23596014492753623\" />\n        <entry key=\"app/src/main/res/layout/fragment_nama_device.xml\" value=\"0.67\" />\n        <entry key=\"app/src/main/res/layout/fragment_otp.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/fragment_scanner.xml\" value=\"0.23596014492753623\" />\n        <entry key=\"app/src/main/res/layout/fragment_tambah_member.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/layout/fragment_tambah_prd.xml\" value=\"0.34972677595628415\" />\n        <entry key=\"app/src/main/res/layout/fragment_ulangi_pin.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"app/src/main/res/layout/item_produk_dummy.xml\" value=\"0.23596014492753623\" />\n        <entry key=\"app/src/main/res/layout/item_rb_pilih_kategori.xml\" value=\"0.2859375\" />\n        <entry key=\"app/src/main/res/layout/item_rb_pilih_merk.xml\" value=\"0.2859375\" />\n        <entry key=\"app/src/main/res/menu/menu_delete.xml\" value=\"0.2375\" />\n        <entry key=\"app/src/main/res/menu/menu_hak_akses.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/menu/menu_pos.xml\" value=\"0.23072916666666668\" />\n        <entry key=\"app/src/main/res/menu/menu_print.xml\" value=\"0.2375\" />\n        <entry key=\"app/src/main/res/menu/menu_rekap_produk.xml\" value=\"0.20364583333333333\" />\n        <entry key=\"app/src/main/res/menu/menu_void.xml\" value=\"0.2375\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" default=\"true\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/.idea/misc.xml	(date 1670405408729)
@@ -6,6 +6,8 @@
         <entry key="app/src/main/res/drawable/ic_baseline_check.xml" value="0.2845" />
         <entry key="app/src/main/res/drawable/ic_checked_red.xml" value="0.2845" />
         <entry key="app/src/main/res/drawable/ic_close.xml" value="0.2845" />
+        <entry key="app/src/main/res/drawable/ic_close_black.xml" value="0.194" />
+        <entry key="app/src/main/res/drawable/ic_close_gray.xml" value="0.194" />
         <entry key="app/src/main/res/drawable/ic_close_red.xml" value="0.2845" />
         <entry key="app/src/main/res/drawable/ic_delete_gray.xml" value="0.2435" />
         <entry key="app/src/main/res/drawable/ic_eye.xml" value="0.2845" />
@@ -42,6 +44,7 @@
         <entry key="app/src/main/res/layout/fragment_nama_device.xml" value="0.67" />
         <entry key="app/src/main/res/layout/fragment_otp.xml" value="0.3333333333333333" />
         <entry key="app/src/main/res/layout/fragment_scanner.xml" value="0.23596014492753623" />
+        <entry key="app/src/main/res/layout/fragment_setting_add_printer.xml" value="0.23596014492753623" />
         <entry key="app/src/main/res/layout/fragment_tambah_member.xml" value="0.23072916666666668" />
         <entry key="app/src/main/res/layout/fragment_tambah_prd.xml" value="0.34972677595628415" />
         <entry key="app/src/main/res/layout/fragment_ulangi_pin.xml" value="0.3333333333333333" />
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/atur_produk/AturProdukFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.sign_up.atur_produk\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.core.view.isVisible\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport androidx.preference.PreferenceManager\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentAturProdukBinding\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.LoadingDialogHelper\nimport com.bits.bee.bpmc.presentation.dialog.download.DownloadDialogBuilder\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.Resource\nimport com.bits.bee.bpmc.utils.extension.gone\nimport com.bits.bee.bpmc.utils.extension.visible\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\n\n/**\n * Created by aldi on 07/06/22.\n */\n@AndroidEntryPoint\nclass AturProdukFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentAturProdukBinding = FragmentAturProdukBinding::inflate\n) : BaseFragment<FragmentAturProdukBinding>() {\n\n    private val viewModel : AturProdukViewModel by viewModels()\n\n    private lateinit var itemDummyAdapter: ItemDummyAdapter\n\n    private lateinit var dialog : LoadingDialogHelper\n\n    override fun initComponents() {\n        dialog = LoadingDialogHelper(requireActivity())\n        viewModel.loadData(requireActivity())\n        BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_last_page), getString(\n            R.string.page_atur_produk))\n        binding.apply {\n            itemDummyAdapter = ItemDummyAdapter(onItemClick = { item ->\n                val action = AturProdukFragmentDirections.actionAturProdukFragmentToTambahProdukFragment(if(item.id != null) item else null)\n                findNavController().navigate(action)\n            })\n            rvList.apply {\n                adapter = itemDummyAdapter\n                layoutManager = LinearLayoutManager(requireActivity())\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            btntambahPrd.setOnClickListener {\n                clearPref()\n                viewModel.onClickTambah()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.itemDummyList.collect {\n                    when(it.status){\n                        Resource.Status.LOADING -> {\n                            binding.progressBar.visible()\n                            binding.constraintLayout9.gone()\n                        }\n                        Resource.Status.SUCCESS -> {\n                            binding.progressBar.gone()\n                            binding.constraintLayout9.visible()\n                            it.data?.let {\n                                binding.apply {\n                                    rvList.isVisible = it.isNotEmpty()\n                                    constraintLayout9.isVisible = it.isEmpty()\n                                    if(it.isNotEmpty()){\n                                        btntambahPrd.text = \"Mulai Jualan\"\n                                    }\n                                }\n                                if(it.isNotEmpty()) {\n                                    clearPref()\n                                    viewModel.state.itemList = it\n                                    itemDummyAdapter.submitList(it.toMutableList())\n                                }\n                            }\n                        }\n                        Resource.Status.ERROR -> {\n                            binding.progressBar.gone()\n                        }\n                        Resource.Status.NOINTERNET -> {\n\n                        }\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect {\n                    when(it){\n                        AturProdukViewModel.UIEvent.FinishTambahProduk -> {\n                            BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_is_sign_up), false)\n                            val action = AturProdukFragmentDirections.actionAturProdukFragmentToHomeActivity()\n                            findNavController().navigate(action)\n                        }\n                        AturProdukViewModel.UIEvent.NavigateToTambahProduk -> {\n                            val action = AturProdukFragmentDirections.actionAturProdukFragmentToTambahProdukFragment()\n                            findNavController().navigate(action)\n                        }\n                        AturProdukViewModel.UIEvent.HideLoading -> {\n                            dialog.hide()\n                        }\n                        is AturProdukViewModel.UIEvent.ShowLoading -> {\n                            if(it.msg.isNotEmpty())\n                                dialog.show(message = it.msg)\n                            else\n                                dialog.show()\n                        }\n                        AturProdukViewModel.UIEvent.NavigateToDownload -> {\n                            val dialog = DownloadDialogBuilder(false, {\n                                it.dismiss()\n                                viewModel.onFinsihDownload()\n                            })\n                            dialog.show(parentFragmentManager, \"\")\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private fun clearPref(){\n        val sharedPreferences = PreferenceManager.getDefaultSharedPreferences(requireContext()).edit()\n        sharedPreferences.remove(getString(R.string.pref_add_nama_prd))\n        sharedPreferences.remove(getString(R.string.pref_add_harga_prd))\n        sharedPreferences.remove(getString(R.string.pref_add_tipe_prd))\n        sharedPreferences.remove(getString(R.string.pref_add_list_unit))\n        sharedPreferences.remove(getString(R.string.pref_add_pid))\n        sharedPreferences.commit()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/atur_produk/AturProdukFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/atur_produk/AturProdukFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/atur_produk/AturProdukFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/atur_produk/AturProdukFragment.kt	(date 1670315580144)
@@ -15,6 +15,7 @@
 import com.bits.bee.bpmc.presentation.base.BaseFragment
 import com.bits.bee.bpmc.presentation.dialog.LoadingDialogHelper
 import com.bits.bee.bpmc.presentation.dialog.download.DownloadDialogBuilder
+import com.bits.bee.bpmc.presentation.ui.initial.InitialActivity
 import com.bits.bee.bpmc.utils.BeePreferenceManager
 import com.bits.bee.bpmc.utils.Resource
 import com.bits.bee.bpmc.utils.extension.gone
@@ -107,6 +108,7 @@
                             BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_is_sign_up), false)
                             val action = AturProdukFragmentDirections.actionAturProdukFragmentToHomeActivity()
                             findNavController().navigate(action)
+                            (activity as InitialActivity).finish()
                         }
                         AturProdukViewModel.UIEvent.NavigateToTambahProduk -> {
                             val action = AturProdukFragmentDirections.actionAturProdukFragmentToTambahProdukFragment()
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/buka_kasir/BukaTutupKasirSharedViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.buka_kasir\n\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.usecase.buka_kasir.BukaKasirUseCase\nimport com.bits.bee.bpmc.domain.usecase.buka_kasir.GetCounterShiftUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetActiveBranchUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetActiveCashierUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetActivePossesUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetDefaultCrcUseCase\nimport com.bits.bee.bpmc.domain.usecase.rekap_sesi.GetUserByIdUseCase\nimport com.bits.bee.bpmc.domain.usecase.tutup_kasir.TutupKasirUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.launch\nimport java.math.BigDecimal\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 20/06/22.\n */\n@HiltViewModel\nclass BukaTutupKasirSharedViewModel @Inject constructor(\n    private val getActivePossesUseCase: GetActivePossesUseCase,\n    private val getActiveCashierUseCase: GetActiveCashierUseCase,\n    private val getActiveBranchUseCase: GetActiveBranchUseCase,\n    private val getDefaultCrcUseCase: GetDefaultCrcUseCase,\n    private val bukaKasirUseCase: BukaKasirUseCase,\n    private val tutupKasirUseCase: TutupKasirUseCase,\n    private val getCounterShiftUseCase: GetCounterShiftUseCase,\n    private val getUserByIdUseCase: GetUserByIdUseCase,\n    private val beePreferenceManager: BeePreferenceManager\n) : BaseViewModel<BukaTutupKasirState, BukaTutupKasirSharedViewModel.UIEvent>() {\n\n    val posPreferences = beePreferenceManager.posPreferences\n\n    init {\n        state = BukaTutupKasirState()\n        getActivePosses()\n        getActiveBranch()\n        getActiveCashier()\n        getDefaultCrc()\n        setShift()\n    }\n\n    fun getActivePosses() = viewModelScope.launch {\n        getActivePossesUseCase().collect {\n            updateState(\n                state.copy(\n                    activePosses = it\n                )\n            )\n        }\n    }\n\n    fun getDefaultCrc() = viewModelScope.launch {\n        getDefaultCrcUseCase().collect {\n            updateState(\n                state.copy(\n                    crc = it\n                )\n            )\n        }\n    }\n\n    fun getUser() = viewModelScope.launch {\n        getUserByIdUseCase.invoke(state.activePosses!!.userId).collect {\n            updateState(\n                state.copy(\n                    user = it\n                )\n            )\n        }\n    }\n\n    fun getActiveBranch() = viewModelScope.launch {\n        getActiveBranchUseCase().collect {\n            updateState(\n                state.copy(\n                    activeBranch = it\n                )\n            )\n        }\n    }\n\n    fun getActiveCashier() = viewModelScope.launch {\n        getActiveCashierUseCase().collect {\n            updateState(\n                state.copy(\n                    activeCashier = it\n                )\n            )\n        }\n    }\n\n    fun setShift() = viewModelScope.launch {\n        getCounterShiftUseCase.invoke().collect {\n\n            updateState(\n                state.copy(\n                    listCasha = it\n                )\n            )\n\n        }\n\n//        if (state.listCasha!!.size > 0){\n//            val trxDate = DateFormatUtils.formatStringToDate(BPMConstants.DEFAULT_DATE_FORMAT, state.listCasha!!.get(0).trxDate)\n//            if (SimpleDateFormat(\"MMdd\").format(Date())compareTo(SimpleDateFormat(\"MMdd\").format(trxDate)) > 0){\n//                updateState(\n//                    state.copy(\n//                        shift = 1\n//                    )\n//                )\n//            }else{\n//\n//            }\n//        }else{\n//            updateState(\n//                state.copy(\n//                    shift = 1\n//                )\n//            )\n//        }\n    }\n\n    suspend fun doBukaKasir(modal : String, sesi: Int) = viewModelScope.launch {\n        if (modal.isEmpty() || modal.contains(Regex(\"[A-Za-z]\")))\n            msgChannel.send(\"Modal yang anda masukkan salah!\")\n        else {\n            val modalC = BigDecimal(modal)\n            bukaKasirUseCase(modalC, sesi, state.activeBranch!!, state.activeCashier!!)\n            getActivePosses()\n            eventChannel.send(UIEvent.NavigateToPos)\n        }\n    }\n\n    suspend fun doTutupKasir() {\n        state.activePosses?.let {\n            tutupKasirUseCase(\n                posses = it\n            )\n        }\n    }\n\n    fun resetActivePosses() = viewModelScope.launch {\n        updateState(\n            state.copy(\n                activePosses = null\n            )\n        )\n    }\n\n    sealed class UIEvent {\n        object NavigateToPos : UIEvent()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/buka_kasir/BukaTutupKasirSharedViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/buka_kasir/BukaTutupKasirSharedViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/buka_kasir/BukaTutupKasirSharedViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/buka_kasir/BukaTutupKasirSharedViewModel.kt	(date 1670312456211)
@@ -3,13 +3,11 @@
 import androidx.lifecycle.viewModelScope
 import com.bits.bee.bpmc.domain.usecase.buka_kasir.BukaKasirUseCase
 import com.bits.bee.bpmc.domain.usecase.buka_kasir.GetCounterShiftUseCase
-import com.bits.bee.bpmc.domain.usecase.common.GetActiveBranchUseCase
-import com.bits.bee.bpmc.domain.usecase.common.GetActiveCashierUseCase
-import com.bits.bee.bpmc.domain.usecase.common.GetActivePossesUseCase
-import com.bits.bee.bpmc.domain.usecase.common.GetDefaultCrcUseCase
+import com.bits.bee.bpmc.domain.usecase.common.*
 import com.bits.bee.bpmc.domain.usecase.rekap_sesi.GetUserByIdUseCase
 import com.bits.bee.bpmc.domain.usecase.tutup_kasir.TutupKasirUseCase
 import com.bits.bee.bpmc.presentation.base.BaseViewModel
+import com.bits.bee.bpmc.utils.BPMConstants
 import com.bits.bee.bpmc.utils.BeePreferenceManager
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.launch
@@ -29,11 +27,14 @@
     private val tutupKasirUseCase: TutupKasirUseCase,
     private val getCounterShiftUseCase: GetCounterShiftUseCase,
     private val getUserByIdUseCase: GetUserByIdUseCase,
-    private val beePreferenceManager: BeePreferenceManager
+    private val beePreferenceManager: BeePreferenceManager,
+    private val getRegUseCase: GetRegUseCase
 ) : BaseViewModel<BukaTutupKasirState, BukaTutupKasirSharedViewModel.UIEvent>() {
 
     val posPreferences = beePreferenceManager.posPreferences
 
+    val possesActualCashReg = getRegUseCase(BPMConstants.REG_POSSES_ACTUAL_ENDCASH)
+
     init {
         state = BukaTutupKasirState()
         getActivePosses()
Index: app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaleDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.data.data_source.local.dao\n\nimport androidx.paging.PagingSource\nimport androidx.room.Dao\nimport androidx.room.Query\nimport com.bits.bee.bpmc.data.data_source.local.base.BaseDao\nimport com.bits.bee.bpmc.data.data_source.local.model.SaleEntity\nimport com.bits.bee.bpmc.data.data_source.remote.model.LineChartData\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport java.math.BigDecimal\n\n/**\n * Created by aldi on 20/05/22.\n */\n@Dao\ninterface SaleDao : BaseDao<SaleEntity> {\n\n    @Query(\"SELECT * FROM sale WHERE draft = :isDraft AND (trx_no LIKE '%' || :query || '%' OR bp_name LIKE '%' || :query || '%')\" +\n            \" AND channel_id IN (:channelList) AND trx_date BETWEEN :startDate AND :endDate ORDER BY id DESC\")\n    fun getLatestSaleList(query : String, isDraft : Boolean, channelList : List<Int>, startDate : Long, endDate : Long) : PagingSource<Int, SaleEntity>\n\n    @Query(\"SELECT * FROM sale WHERE draft = :isDraft AND (trx_no LIKE '%' || :query || '%' OR bp_name LIKE '%' || :query || '%')\" +\n            \" AND trx_date BETWEEN :startDate AND :endDate ORDER BY id DESC\")\n    fun getLatestSaleList(query : String, isDraft : Boolean,  startDate : Long, endDate : Long) : PagingSource<Int, SaleEntity>\n\n    @Query(\"SELECT * FROM sale WHERE draft = 1 ORDER BY id DESC LIMIT 5\")\n    fun getLatestDraftList() : List<SaleEntity>\n\n    @Query(\"SELECT * FROM sale WHERE posses_id = :id AND draft = 0 AND isvoid = 0\")\n    fun getSaleByPosses(id: Int): List<SaleEntity>\n\n    @Query(\"SELECT * FROM sale WHERE posses_id = :id AND draft = 0 AND isvoid = :isVoid AND termtype = :termType\")\n    fun getSaleByPosses(id: Int, isVoid: Boolean, termType : String): List<SaleEntity>\n\n    @Query(\"SELECT COUNT(*) FROM sale WHERE posses_id = :id and isvoid = 0 and draft = 0\")\n    fun getTotalNota(id: Int): BigDecimal\n\n    @Query(\"SELECT COUNT(*) FROM sale WHERE posses_id = :id and isvoid = 1\")\n    fun getTotalNotaVoid(id: Int): BigDecimal\n\n    @Query(\"SELECT SUM(total) FROM sale WHERE posses_id = :id and termtype = '${BPMConstants.BPM_DEFAULT_TYPE_TUNAI}' and isvoid = 0\")\n    fun getTotalPaidTunai(id: Int): BigDecimal?\n\n    @Query(\"SELECT SUM(total) FROM sale WHERE posses_id = :id and termtype = '${BPMConstants.BPM_DEFAULT_TYPE_DEBIT}' and isvoid = 0\")\n    fun getTotalPaidDebit(id: Int): BigDecimal?\n\n    @Query(\"SELECT SUM(total) FROM sale WHERE posses_id = :id and termtype = '${BPMConstants.BPM_DEFAULT_TYPE_KREDIT}' and isvoid = 0\")\n    fun getTotalPaidKredit(id: Int): BigDecimal?\n\n    @Query(\"SELECT SUM(total) FROM sale WHERE posses_id = :id and termtype = '${BPMConstants.BPM_DEFAULT_TYPE_CASH_GOPAY}' and isvoid = 0\")\n    fun getTotalPaidGopay(id: Int): BigDecimal?\n\n    @Query(\"SELECT * FROM sale where isuploaded = 0 and draft = 0 and id not in (:saledlist) limit :limit_trx\")\n    fun getSaleHaventUploaded(limit_trx: Long, saledlist: String): List<SaleEntity>\n\n    @Query(\"UPDATE sale SET bp_id = :idCust WHERE bp_id = :oldIdCust\")\n    fun updateNewIdCust(oldIdCust: Int, idCust: Int)\n\n    @Query(\"SELECT * FROM sale where id = :id\")\n    fun getSaleById(id: Int): SaleEntity\n\n    @Query(\"SELECT * FROM sale where isuploaded = 0 and draft = 0\")\n    fun getSaleNotUploaded(): List<SaleEntity>\n\n    @Query(\"select strftime('%H', datetime(trx_date/1000, 'unixepoch', 'localtime')) as date, sum(a.total) as qty from sale a \" +\n            \"WHERE date = :hour AND a.isvoid = '0' AND a.posses_id = :id group by strftime('%H', datetime(trx_date/1000, 'unixepoch', 'localtime'))\")\n    fun sumQtyByHour(id: Int, hour: String): LineChartData\n\n    @Query(\"SELECT sale.*, SUM(total) as 'total' FROM sale WHERE (posses_id = :id AND draft = 0 AND isvoid = 0) GROUP BY bp_id\")\n    fun getSaleByPossesGroupByBp(id: Int): List<SaleEntity>\n\n    @Query(\"SELECT SUM(total) FROM sale WHERE posses_id = :id AND isvoid = 0 AND channel_id = :channelId\")\n    fun sumTotalChannel(id: Int, channelId : Int): BigDecimal\n\n    @Query(\"SELECT COUNT(total) FROM sale WHERE posses_id = :id AND isvoid = 0\")\n    fun sumTotalPaidAll(id: Int): BigDecimal\n\n//    @Query(\"SELECT SUM(total) FROM sale WHERE posses_id = :id AND isvoid = 0\")\n//    fun sumTotalChannel(id: Int, channelId : Int): BigDecimal\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaleDao.kt b/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaleDao.kt
--- a/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaleDao.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/data/data_source/local/dao/SaleDao.kt	(date 1670383430961)
@@ -29,6 +29,9 @@
     @Query("SELECT * FROM sale WHERE posses_id = :id AND draft = 0 AND isvoid = 0")
     fun getSaleByPosses(id: Int): List<SaleEntity>
 
+    @Query("SELECT *, SUM(total) as total FROM sale WHERE posses_id = :id AND draft = 0 AND isvoid = 0 GROUP BY channel_id")
+    fun getSaleByPossesGroupChannel(id: Int): List<SaleEntity>
+
     @Query("SELECT * FROM sale WHERE posses_id = :id AND draft = 0 AND isvoid = :isVoid AND termtype = :termType")
     fun getSaleByPosses(id: Int, isVoid: Boolean, termType : String): List<SaleEntity>
 
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.beranda\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.fragment.app.activityViewModels\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentBerandaBinding\nimport com.bits.bee.bpmc.domain.printer.helper.PrinterHelper\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.DialogBuilderHelper\nimport com.bits.bee.bpmc.presentation.ui.buka_kasir.BukaTutupKasirSharedViewModel\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.CurrencyUtils\nimport com.bits.bee.bpmc.utils.extension.gone\nimport com.bits.bee.bpmc.utils.extension.visible\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\nimport java.math.BigDecimal\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 13/04/22.\n */\nconst val TAG = \"BerandaFragment\"\n@AndroidEntryPoint\nclass BerandaFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentBerandaBinding = FragmentBerandaBinding::inflate\n) : BaseFragment<FragmentBerandaBinding>() {\n\n    private val viewModel : BerandaViewModel by viewModels()\n    private val sharedViewModel : BukaTutupKasirSharedViewModel by activityViewModels()\n    private var mCounter: Int = 0\n\n    @Inject\n    lateinit var printerHelper : PrinterHelper\n\n    override fun onResume() {\n        super.onResume()\n        sharedViewModel.getActivePosses()\n    }\n\n    override fun initComponents() {\n        val isFirstRun = BeePreferenceManager.getDataFromPreferences(requireActivity(), getString(R.string.is_first_run), true) as Boolean\n\n        if(isFirstRun){\n//            val action = BerandaFragmentDirections.actionBerandaFragmentToDownloadDialogBuilder()\n//            findNavController().navigate(action)\n            BeePreferenceManager.saveToPreferences(requireContext(), getString(R.string.is_first_run), false)\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            tvDetail.setOnClickListener {\n                if(sharedViewModel.state.activePosses == null) {\n                    viewModel.onDetailBukaKasirClick()\n                } else {\n                    viewModel.onDetailTutupKasirClick()\n                }\n            }\n            btnBukaKasir.setOnClickListener {\n                if(sharedViewModel.state.activePosses == null) {\n                    viewModel.onBukaKasirClick()\n                } else {\n                    val dialog = DialogBuilderHelper.showDialogYesNo(requireContext(),\n                        getString(R.string.tutup_kasir), getString(R.string.msg_validasi_tutup_kasir), {\n                            it.dismiss()\n                            viewModel.onTutupKasirClick()\n                        })\n                    dialog.show(parentFragmentManager, \"DetailTutupKasirFragment\")\n                }\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                sharedViewModel.viewStates().collect {\n                    it?.let {\n                        it.activeCashier?.let {\n                            binding.tvGreeting.text = getString(R.string.halo_kasir_2, it.cashierName)\n                        }\n                        it.activeBranch?.let {\n                            binding.tvKota.text = getString(R.string.di_surabaya, it.name)\n                        }\n\n                        viewModel.state.isBukaKasir = it.activePosses != null\n                        if(it.activePosses != null){\n                            binding.apply {\n                                groupPendapatan.visible()\n                                tvInfoKasir.text = getString(R.string.klik_tutup_kasir_untuk_mengakhiri_shift_3_ya, it.activePosses!!.shift)\n                                btnBukaKasir.text = getString(R.string.tutup_kasir)\n                                tvTotalPendapatan.text = CurrencyUtils.formatCurrency(it.activePosses!!.totIn ?: BigDecimal.ZERO)\n                            }\n                        } else {\n                            binding.apply {\n                                val shift = BeePreferenceManager.getDataFromPreferences(requireContext(), getString(R.string.pref_counter_sesi), 1) as Int\n                                groupPendapatan.gone()\n                                tvInfoKasir.text = getString(R.string.klik_buka_kasir_untuk_memulai_shift_3_ya, shift)\n                                btnBukaKasir.text = getString(R.string.buka_kasir)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect {\n                    when(it){\n                        BerandaViewModel.UIEvent.NavigateToBukaKasir -> {\n                            val action = BerandaFragmentDirections.actionBerandaFragmentToDetailBukaKasirFragment()\n                            findNavController().navigate(action)\n                        }\n                        BerandaViewModel.UIEvent.NavigateToTutupKasir -> {\n                            val action = BerandaFragmentDirections.actionBerandaFragmentToDetailTutupKasirFragment()\n                            findNavController().navigate(action)\n                        }\n                        BerandaViewModel.UIEvent.NavigateToDialogBukaKasir -> {\n                            val state = sharedViewModel.state\n\n                            val shift = BeePreferenceManager.getDataFromPreferences(requireContext(), getString(R.string.pref_counter_sesi), 1) as Int\n                            val dialog = BerandaFragmentDirections.actionBerandaFragmentToAturModalDialogBuilder(state.activeCashier!!, state.activeBranch!!, shift )\n                            findNavController().navigate(dialog)\n//                            dialog.show(parentFragmentManager, TAG)\n                        }\n                        BerandaViewModel.UIEvent.ReqTutupKasir -> {\n                            mCounter = BeePreferenceManager.getDataFromPreferences(requireContext(), getString(R.string.pref_counter_sesi), 1) as Int\n                            mCounter++\n                            BeePreferenceManager.saveToPreferences(requireContext(), getString(R.string.pref_counter_sesi), mCounter)\n                            sharedViewModel.doTutupKasir()\n                            printerHelper.printClosingCashier(sharedViewModel.state.activePosses!!, BPMConstants.BPM_FONT_REGULAR, BPMConstants.BPM_ALIGN_LEFT)\n                            sharedViewModel.resetActivePosses()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaFragment.kt	(date 1670315294686)
@@ -18,8 +18,10 @@
 import com.bits.bee.bpmc.utils.BeePreferenceManager
 import com.bits.bee.bpmc.utils.CurrencyUtils
 import com.bits.bee.bpmc.utils.extension.gone
+import com.bits.bee.bpmc.utils.extension.replaceNumberWithStars
 import com.bits.bee.bpmc.utils.extension.visible
 import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.flow.first
 import kotlinx.coroutines.launch
 import java.math.BigDecimal
 import javax.inject.Inject
@@ -97,7 +99,11 @@
                                 groupPendapatan.visible()
                                 tvInfoKasir.text = getString(R.string.klik_tutup_kasir_untuk_mengakhiri_shift_3_ya, it.activePosses!!.shift)
                                 btnBukaKasir.text = getString(R.string.tutup_kasir)
-                                tvTotalPendapatan.text = CurrencyUtils.formatCurrency(it.activePosses!!.totIn ?: BigDecimal.ZERO)
+                                var total =  CurrencyUtils.formatCurrency(it.activePosses!!.totIn ?: BigDecimal.ZERO)
+                                sharedViewModel.possesActualCashReg.first()?.let {
+                                    total = if(it.value == "1") total.replaceNumberWithStars() else total
+                                }
+                                tvTotalPendapatan.text = total
                             }
                         } else {
                             binding.apply {
Index: app/src/main/java/com/bits/bee/bpmc/data/repository/SaleRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.data.repository\n\nimport androidx.paging.Pager\nimport androidx.paging.PagingConfig\nimport androidx.paging.PagingData\nimport androidx.paging.map\nimport com.bits.bee.bpmc.data.data_source.local.dao.SaleDao\nimport com.bits.bee.bpmc.data.data_source.remote.model.LineChartData\nimport com.bits.bee.bpmc.domain.mapper.SaleDataMapper\nimport com.bits.bee.bpmc.domain.model.Channel\nimport com.bits.bee.bpmc.domain.model.Sale\nimport com.bits.bee.bpmc.domain.repository.SaleRepository\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport kotlinx.coroutines.CoroutineDispatcher\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.flow\nimport kotlinx.coroutines.flow.flowOn\nimport kotlinx.coroutines.flow.mapLatest\nimport kotlinx.coroutines.withContext\nimport java.math.BigDecimal\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 20/05/22.\n */\nclass SaleRepositoryImpl @Inject constructor(\n    private val defaultDispatcher: CoroutineDispatcher,\n    private val saleDao: SaleDao\n) : SaleRepository {\n\n    override suspend fun addSale(sale: Sale) : Long{\n        var id: Long\n        withContext(defaultDispatcher){\n            val saleNew = SaleDataMapper.fromDomainToDb(sale)\n            id = saleDao.insertSingle(saleNew)\n        }\n        return id\n    }\n\n    override suspend fun deleteSale(sale: Sale) {\n        withContext(defaultDispatcher){\n            saleDao.delete(SaleDataMapper.fromDomainToDb(sale))\n        }\n    }\n\n    override suspend fun updateSale(sale: Sale) {\n        withContext(defaultDispatcher) {\n            saleDao.update(SaleDataMapper.fromDomainToDb(sale))\n        }\n    }\n\n    override fun getLatestSaleList(query : String, isDraft: Boolean, channelList : List<Int>, startDate : Long, endDate : Long): Flow<PagingData<Sale>> =  Pager(\n        config = PagingConfig(\n            pageSize = BPMConstants.BPM_LIMIT_PAGINATION,\n            maxSize = BPMConstants.BPM_MAX_PAGINATION,\n            enablePlaceholders = true,\n            initialLoadSize = BPMConstants.BPM_MAX_PAGINATION\n        ),\n        pagingSourceFactory = {\n            if(channelList.isNotEmpty())\n                saleDao.getLatestSaleList(query, isDraft, channelList, startDate, endDate)\n            else\n                saleDao.getLatestSaleList(query, isDraft, startDate, endDate)\n        }\n    ).flow.mapLatest {\n        it.map { SaleDataMapper.fromDbToDomain(it) }\n    }.flowOn(defaultDispatcher)\n\n    override fun getLatestDraftList(): Flow<List<Sale>> = flow {\n        val saleList = saleDao.getLatestDraftList()\n        emit(saleList.map { SaleDataMapper.fromDbToDomain(it) } )\n    }.flowOn(defaultDispatcher)\n\n    override fun getSaleByPosses(id: Int): Flow<List<Sale>> {\n        return flow {\n            val data = saleDao.getSaleByPosses(id).map { SaleDataMapper.fromDbToDomain(it) }\n            emit(data)\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getSaleByPosses(id: Int, isVoid: Boolean, termType: String): Flow<List<Sale>> {\n        return flow {\n            val data = saleDao.getSaleByPosses(id, isVoid, termType).map { SaleDataMapper.fromDbToDomain(it) }\n            emit(data)\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getTotalNota(id: Int): Flow<BigDecimal> {\n        return flow {\n            val data = saleDao.getTotalNota(id)\n            emit(data)\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getTotalNotaVoid(id: Int): Flow<BigDecimal> {\n        return flow {\n            val data = saleDao.getTotalNotaVoid(id)\n            emit(data)\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getTotalPaidTunai(id: Int): Flow<BigDecimal> {\n        return flow {\n            val data = saleDao.getTotalPaidTunai(id)\n            if (data != null)\n                emit(data)\n            else\n                emit(BigDecimal.ZERO)\n\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getTotalPaidDebit(id: Int): Flow<BigDecimal> {\n        return flow {\n            val data = saleDao.getTotalPaidDebit(id)\n            if (data != null)\n                emit(data)\n            else\n                emit(BigDecimal(\"0\"))\n\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getTotalPaidKredit(id: Int): Flow<BigDecimal> {\n        return flow {\n            val data = saleDao.getTotalPaidKredit(id)\n            if (data != null)\n                emit(data)\n            else\n                emit(BigDecimal.ZERO)\n\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getTotalPaidGopay(id: Int): Flow<BigDecimal> {\n        return flow {\n            val data = saleDao.getTotalPaidGopay(id)\n            if (data != null)\n                emit(data)\n            else\n                emit(BigDecimal.ZERO)\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getSaleHaventUploaded(\n        limit_trx: Long,\n        saledlist: List<Int>\n    ): Flow<List<Sale>> {\n        return flow {\n            val delimiter = \",\"\n            val result = saledlist.joinToString(delimiter)\n            val data = saleDao.getSaleHaventUploaded(limit_trx, result).map { SaleDataMapper.fromDbToDomain(it) }\n            emit((data))\n        }.flowOn(defaultDispatcher)\n    }\n\n    override suspend fun updateNewIdCust(oldIdCust: Int, idCust: Int) {\n        withContext(defaultDispatcher){\n            saleDao.updateNewIdCust(oldIdCust, idCust)\n        }\n    }\n\n    override fun getSaleById(id: Int): Flow<Sale> {\n        return flow<Sale> {\n            val data = saleDao.getSaleById(id)\n            emit(SaleDataMapper.fromDbToDomain(data))\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getSaleNotUploaded(): Flow<List<Sale>> {\n        return flow {\n            val data = saleDao.getSaleNotUploaded().map { SaleDataMapper.fromDbToDomain(it) }\n            emit((data))\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun sumQtyByHour(id: Int, hour: String): Flow<LineChartData> {\n        return flow {\n            val data = saleDao.sumQtyByHour(id, hour)\n            emit(data)\n        }.flowOn(defaultDispatcher)\n    }\n\n    override fun getSaleByPossesGroupByBp(id: Int): Flow<List<Sale>> {\n        return flow {\n            val data = saleDao.getSaleByPossesGroupByBp(id).map { SaleDataMapper.fromDbToDomain(it) }\n            emit((data))\n        }.flowOn(defaultDispatcher)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/data/repository/SaleRepositoryImpl.kt b/app/src/main/java/com/bits/bee/bpmc/data/repository/SaleRepositoryImpl.kt
--- a/app/src/main/java/com/bits/bee/bpmc/data/repository/SaleRepositoryImpl.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/data/repository/SaleRepositoryImpl.kt	(date 1670382146591)
@@ -85,6 +85,13 @@
         }.flowOn(defaultDispatcher)
     }
 
+    override fun getSaleByPossesGroupChannel(id: Int): Flow<List<Sale>> {
+        return flow {
+            val data = saleDao.getSaleByPossesGroupChannel(id).map { SaleDataMapper.fromDbToDomain(it) }
+            emit(data)
+        }.flowOn(defaultDispatcher)
+    }
+
     override fun getTotalNota(id: Int): Flow<BigDecimal> {
         return flow {
             val data = saleDao.getTotalNota(id)
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/tutup_kasir/DetailTutupKasirFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.tutup_kasir\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.fragment.app.activityViewModels\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.FragmentDetailTutupKasirBinding\nimport com.bits.bee.bpmc.domain.printer.helper.PrinterHelper\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.DialogBuilderHelper\nimport com.bits.bee.bpmc.presentation.ui.buka_kasir.BukaTutupKasirSharedViewModel\nimport com.bits.bee.bpmc.utils.BPMConstants\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.CurrencyUtils\nimport com.bits.bee.bpmc.utils.DateFormatUtils\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\nimport java.math.BigDecimal\nimport java.sql.Date\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 13/04/22.\n */\n@AndroidEntryPoint\nclass DetailTutupKasirFragment(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentDetailTutupKasirBinding = FragmentDetailTutupKasirBinding::inflate\n) : BaseFragment<FragmentDetailTutupKasirBinding>() {\n\n    private val viewModel : DetailTutupKasirViewModel by viewModels()\n    private val sharedViewModel : BukaTutupKasirSharedViewModel by activityViewModels()\n    private var mCounter: Int = 0\n\n    @Inject\n    lateinit var printerHelper: PrinterHelper\n\n    override fun initComponents() {\n//        setHasOptionsMenu(true)\n        binding.apply {\n\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            btnTutupKasir.setOnClickListener {\n                val dialog = DialogBuilderHelper.showDialogYesNo(requireContext(),\n                    getString(R.string.tutup_kasir), getString(R.string.msg_validasi_tutup_kasir), {\n                        it.dismiss()\n                        viewModel.onTutupKasir()\n                    })\n                dialog.show(parentFragmentManager, \"DetailTutupKasirFragment\")\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect { event  ->\n                    when(event){\n                        DetailTutupKasirViewModel.UIEvent.RequestSave -> {\n                            mCounter = BeePreferenceManager.getDataFromPreferences(requireContext(), getString(R.string.pref_counter_sesi), 1) as Int\n                            mCounter++\n                            BeePreferenceManager.saveToPreferences(requireContext(), getString(R.string.pref_counter_sesi), mCounter)\n                            sharedViewModel.doTutupKasir()\n                            printerHelper.printClosingCashier(sharedViewModel.state.activePosses!!)\n                            sharedViewModel.resetActivePosses()\n                            findNavController().popBackStack()\n                        }\n                        DetailTutupKasirViewModel.UIEvent.RequestRekapSesi ->{\n                            val action = DetailTutupKasirFragmentDirections.actionDetailTutupKasirFragmentToRekapSesiFragment()\n                            findNavController().navigate(action)\n                        }\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                sharedViewModel.viewStates().collect {\n                    binding.apply {\n                        it?.let {\n                            it.activeBranch?.let { branch ->\n                                tvCabang.text = branch.name\n                            }\n                            it.activeCashier?.let { cashier ->\n                                tvKasir.text = cashier.cashierName\n                            }\n                            it.activePosses?.let {\n                                tvModal.text = CurrencyUtils.formatCurrency(it.startBal)\n                                tvPemasukan.text = CurrencyUtils.formatCurrency(it.totIn)\n                                tvPengeluaran.text = CurrencyUtils.formatCurrency(it.totOut)\n                                tvSaldoAkhir.text = CurrencyUtils.formatCurrency(it.startBal + (it.totIn ?: BigDecimal.ZERO) - (it.totOut ?: BigDecimal.ZERO))\n                                tvShift.text = it.shift.toString()\n\n                                val startTime = Date(it.startTime.time)\n                                tvMulaiOperasional.text = DateFormatUtils.formatDateToString(\n                                    BPMConstants.DEFAULT_DATE_FORMAT, startTime)\n                                sharedViewModel.getUser()\n                            }\n                            it.user?.let {\n                                tvUserKasir.text = it.name\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n//    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\n//        super.onCreateOptionsMenu(menu, inflater)\n//        inflater.inflate(R.menu.menu_analisa_sesi, menu)\n//    }\n//\n//    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n//        when(item.itemId){\n//            R.id.menu_list -> viewModel.onCLickMenu()\n//        }\n//        return super.onOptionsItemSelected(item)\n//    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/tutup_kasir/DetailTutupKasirFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/tutup_kasir/DetailTutupKasirFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/tutup_kasir/DetailTutupKasirFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/tutup_kasir/DetailTutupKasirFragment.kt	(date 1670315295006)
@@ -18,7 +18,9 @@
 import com.bits.bee.bpmc.utils.BeePreferenceManager
 import com.bits.bee.bpmc.utils.CurrencyUtils
 import com.bits.bee.bpmc.utils.DateFormatUtils
+import com.bits.bee.bpmc.utils.extension.replaceNumberWithStars
 import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.flow.first
 import kotlinx.coroutines.launch
 import java.math.BigDecimal
 import java.sql.Date
@@ -93,10 +95,22 @@
                                 tvKasir.text = cashier.cashierName
                             }
                             it.activePosses?.let {
-                                tvModal.text = CurrencyUtils.formatCurrency(it.startBal)
-                                tvPemasukan.text = CurrencyUtils.formatCurrency(it.totIn)
-                                tvPengeluaran.text = CurrencyUtils.formatCurrency(it.totOut)
-                                tvSaldoAkhir.text = CurrencyUtils.formatCurrency(it.startBal + (it.totIn ?: BigDecimal.ZERO) - (it.totOut ?: BigDecimal.ZERO))
+                                var modal = CurrencyUtils.formatCurrency(it.startBal)
+                                var pemasukan = CurrencyUtils.formatCurrency(it.totIn)
+                                var pengeluaran = CurrencyUtils.formatCurrency(it.totOut)
+                                var saldoAkhir = CurrencyUtils.formatCurrency(it.startBal + (it.totIn ?: BigDecimal.ZERO) - (it.totOut ?: BigDecimal.ZERO))
+                                sharedViewModel.possesActualCashReg.first()?.let {
+                                    if(it.value == "1") {
+                                        modal = modal.replaceNumberWithStars()
+                                        pemasukan = pemasukan.replaceNumberWithStars()
+                                        pengeluaran = pengeluaran.replaceNumberWithStars()
+                                        saldoAkhir = saldoAkhir.replaceNumberWithStars()
+                                    }
+                                }
+                                tvModal.text = modal
+                                tvPemasukan.text = pemasukan
+                                tvPengeluaran.text = pengeluaran
+                                tvSaldoAkhir.text = saldoAkhir
                                 tvShift.text = it.shift.toString()
 
                                 val startTime = Date(it.startTime.time)
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/ulangi_pin/UlangiPinFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.sign_up.ulangi_pin\n\nimport android.text.InputType\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport android.view.inputmethod.EditorInfo\nimport androidx.core.content.ContextCompat\nimport androidx.core.widget.addTextChangedListener\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.fragment.findNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.data.data_source.remote.RetrofitClient\nimport com.bits.bee.bpmc.databinding.FragmentUlangiPinBinding\nimport com.bits.bee.bpmc.presentation.base.BaseFragment\nimport com.bits.bee.bpmc.presentation.dialog.LoadingDialogHelper\nimport com.bits.bee.bpmc.presentation.dialog.NoInternetDialogBuilder\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.Resource\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\n\n@AndroidEntryPoint\nclass UlangiPinFragment constructor(\n    override val bindingInflater: (LayoutInflater, ViewGroup?, Boolean) -> FragmentUlangiPinBinding = FragmentUlangiPinBinding::inflate\n): BaseFragment<FragmentUlangiPinBinding>() {\n\n    private val viewModel : UlangiPinViewModel by viewModels()\n\n    private lateinit var dialog: LoadingDialogHelper\n\n    override fun initComponents() {\n        dialog = LoadingDialogHelper(requireActivity())\n        val email = BeePreferenceManager.getDataFromPreferences(requireActivity(), getString(R.string.pref_email), \"\") as String\n        val pass = BeePreferenceManager.getDataFromPreferences(requireActivity(), getString(R.string.pref_password), \"\") as String\n        val auth = BeePreferenceManager.getDataFromPreferences(requireActivity(), getString(R.string.pref_auth_key), \"\") as String\n        viewModel.updateState(\n            viewModel.state.copy(\n                email = email,\n                password = pass,\n                authKey = auth\n            )\n        )\n        binding.apply {\n            numpad.setInputConnection(pinView.onCreateInputConnection(EditorInfo())!!)\n            arguments?.let {\n                val pin = it.getString(\"pin\")\n                viewModel.state.pinBefore = pin ?: \"\"\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            pinView.addTextChangedListener {\n                viewModel.onPinInput(pinView.text.toString().trim())\n            }\n            btnSimpanPin.setOnClickListener {\n\n            }\n            linearLayout17.setOnClickListener {\n                viewModel.onClickPin()\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        viewModel.observeSetupPasswordResponse().removeObservers(viewLifecycleOwner)\n        viewModel.observeSetupPasswordResponse().observe(viewLifecycleOwner){\n            when(it.status){\n                Resource.Status.LOADING -> {\n                    dialog.show()\n                }\n                Resource.Status.SUCCESS -> {\n                    dialog.hide()\n                    it.data?.let {\n                        if(it.status) {\n                            val apiKey = it.responses\n                            BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.api_key), apiKey)\n                            RetrofitClient.API_KEY = apiKey\n                            viewModel.login()\n                        }else\n                            showSnackbar(it.responses)\n                    }\n\n                }\n                Resource.Status.ERROR -> {\n                    dialog.hide()\n                }\n                Resource.Status.NOINTERNET -> {\n                    dialog.hide()\n                    val dialog = NoInternetDialogBuilder({\n                        viewModel.onPinFilled()\n                    })\n                    dialog.show(parentFragmentManager, \"\")\n                }\n            }\n        }\n\n        viewModel.observeLoginResponse().observe(viewLifecycleOwner){\n            when(it.status){\n                Resource.Status.LOADING -> {\n                    dialog.show(message = \"Validasi data login..\")\n                }\n                Resource.Status.SUCCESS -> {\n                    dialog.hide()\n                    it.data?.let { data ->\n                        if(data.status == \"ok\"){\n                            if(data.db != null && data.db!!.isNotEmpty()) {\n                                viewModel.postDb(data.db!!.first().dbName)\n                            }\n                        }\n                    }\n                }\n                Resource.Status.ERROR -> {\n                    dialog.hide()\n                }\n                Resource.Status.NOINTERNET -> {\n                    dialog.hide()\n                    val dialog = NoInternetDialogBuilder({\n                        viewModel.onPinFilled()\n                    })\n                    dialog.show(parentFragmentManager, \"\")\n                }\n            }\n        }\n\n        viewModel.observeDbResponse().observe(viewLifecycleOwner){\n            when(it.status){\n                Resource.Status.LOADING -> {\n                    dialog.show(\"Validasi database yang sudah dibuat..\")\n                }\n                Resource.Status.SUCCESS -> {\n                    dialog.hide()\n                    it.data?.let { data ->\n                        if(data.status == \"success\"){\n                            if(data.dataDb.isNotEmpty()) {\n                                val apiKey = data.dataDb.firstOrNull()?.auth_key ?: \"\"\n                                BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.api_key), apiKey)\n                                RetrofitClient.API_KEY = apiKey\n                                viewModel.onSuccess()\n                            }\n                        }\n                    }\n                }\n                Resource.Status.ERROR -> {\n                    dialog.hide()\n                }\n                Resource.Status.NOINTERNET -> {\n                    dialog.hide()\n                    val dialog = NoInternetDialogBuilder({\n                        viewModel.onPinFilled()\n                    })\n                    dialog.show(parentFragmentManager, \"\")\n                }\n            }\n        }\n\n\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.viewStates().collect {\n                    it?.let {\n                        binding.apply {\n                            pinView.inputType = if(it.isPassVisible) InputType.TYPE_CLASS_NUMBER else InputType.TYPE_CLASS_NUMBER or InputType.TYPE_NUMBER_VARIATION_PASSWORD\n                            ivEye.setImageDrawable(ContextCompat.getDrawable(requireActivity(), if(it.isPassVisible) R.drawable.ic_eye else R.drawable.ic_eye_slash))\n                        }\n                    }\n                }\n            }\n        }\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewLifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect {\n                    when(it){\n                        UlangiPinViewModel.UIEvent.NavigateToAturProduk -> {\n                            BeePreferenceManager.saveToPreferences(requireActivity(), getString(R.string.pref_pin), viewModel.state.pin)\n                            val action = UlangiPinFragmentDirections.actionUlangiPinFragmentToModeTampilanFragment(type = \"signup\")\n                            findNavController().navigate(action)\n                        }\n                        UlangiPinViewModel.UIEvent.PinNotSame -> {\n                            binding.pinView.text!!.clear()\n                            showSnackbar(\"PIN tidak sesuai, coba lagi\")\n                        }\n                    }\n                }\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/ulangi_pin/UlangiPinFragment.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/ulangi_pin/UlangiPinFragment.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/ulangi_pin/UlangiPinFragment.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/ulangi_pin/UlangiPinFragment.kt	(date 1670312045997)
@@ -56,9 +56,6 @@
         binding.apply {
             pinView.addTextChangedListener {
                 viewModel.onPinInput(pinView.text.toString().trim())
-            }
-            btnSimpanPin.setOnClickListener {
-
             }
             linearLayout17.setOnClickListener {
                 viewModel.onClickPin()
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">Beepos Mobile</string>\n    <string name=\"version\">version</string>\n\n    <string name=\"api_key\">api_key</string>\n    <string name=\"trx_ordernum\">trx_ordernum</string>\n    <string name=\"is_first_run\">is_first_run</string>\n\n    <!--    Peferances-->\n    <string name=\"pref_screen_orientation\" translatable=\"false\">Screen Orientation</string>\n    <string name=\"pref_is_change_screen_orientation\" translatable=\"false\">Is Change Orientation</string>\n    <string name=\"pref_nama_device\">pref_nama_device</string>\n    <string name=\"pref_mode_tampilan\">pref_mode_tampilan</string>\n    <string name=\"pref_last_page\">pref_last_page</string>\n    <string name=\"pref_tes_String\">pref_tes</string>\n    <string name=\"pref_info_kontak_lanjut\">pref_lanjut</string>\n    <string name=\"pref_regid\">str_regid</string>\n    <string name=\"pref_serial_number\">serial_number</string>\n    <string name=\"pref_auth_key\">auth_key</string>\n    <string name=\"pref_wa\">str_wa</string>\n    <string name=\"pref_value_selected\">pref_value_selected</string>\n    <string name=\"pref_switch_dapur\">pref_switch_dapur</string>\n    <string name=\"pref_ukuran_font\">pref_ukuran_font</string>\n    <string name=\"pref_multi_line\">pref_multi_line</string>\n    <string name=\"pref_konfirmasi_customer\">pref_konfirmasi_customer</string>\n    <string name=\"pref_customer\">pref_customer</string>\n    <string name=\"pref_jumlah_meja\">pref_jumlah_meja</string>\n    <string name=\"pref_preset_buka_kasir\">pref_preset_buka_kasir</string>\n    <string name=\"pref_gambar_produk\">pref_gambar_produk</string>\n    <string name=\"pref_is_sign_up\">pref_is_sign_up</string>\n    <string name=\"pref_email\">pref_email</string>\n    <string name=\"pref_password\">pref_password</string>\n    <string name=\"pref_rekap_per_channel\">pref_rekap_per_channel</string>\n    <string name=\"pref_rekap_per_produk_perchannel\">pref_rekap_per_produk_perchannel</string>\n    <string name=\"pref_rekap_per_faktur\">pref_rekap_per_faktur</string>\n    <string name=\"pref_rekap_per_customer\">pref_rekap_per_customer</string>\n    <string name=\"pref_sistem_penyimpanan\">pref_sistem_penyimpanan</string>\n    <string name=\"pref_batch_upload\">pref_batch_upload</string>\n    <string name=\"pref_periode_upload_otomatis\">pref_periode_upload_otomatis</string>\n    <string name=\"pref_cloud_data_dapur\">pref_cloud_data_dapur</string>\n    <string name=\"pref_logo\">pref_logo</string>\n    <string name=\"pref_logo_galeri\">pref_logo_galeri</string>\n    <string name=\"pref_header\">pref_header</string>\n    <string name=\"pref_footer\">pref_footer</string>\n    <string name=\"pref_isi_header\">pref_isi_header</string>\n    <string name=\"pref_isi_footer\">pref_isi_footer</string>\n    <string name=\"pref_tipe_printer\">pref_tipe_printer</string>\n    <string name=\"pref_name_printer\">pref_name_printer</string>\n    <string name=\"pref_address_printer\">pref_address_printer</string>\n    <string name=\"pref_sistem_datakitchen\">pref_sistem_datakitchen</string>\n    <string name=\"pref_is_scan\">pref_is_scan</string>\n    <string name=\"pref_rkp_customer\">pref_rkp_customer</string>\n    <string name=\"pref_rkp_produk_channel\">pref_rkp_produk_channel</string>\n    <string name=\"pref_rkp_faktur\">pref_rkp_faktur</string>\n    <string name=\"pref_rkp_channel\">pref_rkp_channel</string>\n    <string name=\"pref_city\">pref_city</string>\n    <string name=\"pref_is_city\">pref_is_city</string>\n    <string name=\"pref_add_member_name\">pref_add_member_name</string>\n    <string name=\"pref_add_member_notelp\">pref_add_member_notelp</string>\n    <string name=\"pref_add_member_email\">pref_add_member_email</string>\n    <string name=\"pref_add_member_alamat\">pref_add_member_alamat</string>\n    <string name=\"pref_counter_sesi\">pref_counter_sesi</string>\n    <string name=\"pref_pilih_tgl\">pref_pilih_tgl</string>\n    <string name=\"pref_login_user\">login_user</string>\n    <string name=\"pref_tablayout\">pref_tablayout</string>\n    <string name=\"pref_user_kasir\">pref_user_kasir</string>\n    <string name=\"pref_add_nama_prd\">pref_add_nama_prd</string>\n    <string name=\"pref_add_harga_prd\">pref_add_harga_prd</string>\n    <string name=\"pref_add_tipe_prd\">pref_add_tipe_prd</string>\n    <string name=\"pref_add_list_unit\">pref_add_list_unit</string>\n    <string name=\"pref_add_pid\">pref_add_pid</string>\n\n    <!--    Pages    -->\n    <string name=\"page_pilih_cabang\">page_pilih_cabang</string>\n    <string name=\"page_pilih_kasir\">page_pilih_kasir</string>\n    <string name=\"page_atur_pin\">page_atur_pin</string>\n    <string name=\"page_otp\">page_otp</string>\n    <string name=\"page_atur_produk\">page_atur_produk</string>\n    <string name=\"page_cek_db\">page_cek_db</string>\n    <string name=\"page_pilih_operator\">page_login_operator</string>\n    <string name=\"page_home\">page_home</string>\n    <string name=\"page_login\">page_login</string>\n    <string name=\"page_kas_masuk\">page_kas_masuk</string>\n    <string name=\"page_kas_keluar\">page_kas_keluar</string>\n\n    <!-- Array Setting -->\n    <string-array name=\"list_ukuran_font\">\n        <item>Small</item>\n        <item>Medium</item>\n        <item>Large</item>\n    </string-array>\n\n    <string-array name=\"list_customer\">\n        <item>@string/nama</item>\n        <item>@string/no_meja</item>\n    </string-array>\n\n    <string-array name=\"list_orientation\">\n        <item>Portrait</item>\n        <item>Landscape</item>\n    </string-array>\n\n    <string-array name=\"list_preset_buka_kasir\">\n        <item>0</item>\n        <item>100000</item>\n        <item>200000</item>\n        <item>250000</item>\n        <item>500000</item>\n        <item>1000000</item>\n    </string-array>\n\n    <string-array name=\"list_jumlah_meja\">\n        <item>10</item>\n        <item>20</item>\n        <item>30</item>\n        <item>40</item>\n        <item>Lainnya</item>\n    </string-array>\n\n    <string-array name=\"list_sistem_penyimpanan\">\n        <item>7 Hari</item>\n        <item>15 Hari</item>\n        <item>30 Hari</item>\n    </string-array>\n\n    <string-array name=\"list_sistem_batch_upload\">\n        <item>AUTO</item>\n        <item>5 (Paling Ringan)</item>\n        <item>10</item>\n        <item>25</item>\n        <item>50 (Paling Berat)</item>\n    </string-array>\n\n    <string-array name=\"list_periode_upload_otomatis\">\n        <item>15 Menit</item>\n        <item>30 Menit</item>\n        <item>60 Menit</item>\n    </string-array>\n\n    <string-array name=\"list_ukuran_kertas\">\n        <item>58 mm</item>\n        <item>60 mm</item>\n    </string-array>\n\n    <string-array name=\"list_pilih_tgl\">\n        <item>1 Minggu Terakhir</item>\n        <item>1 Bulan Terakhir</item>\n        <item>90 Hari Terakhir</item>\n        <item>Custom</item>\n    </string-array>\n\n    <string-array name=\"list_itgrp\">\n        <item>Makanan</item>\n        <item>Minuman</item>\n        <item>Snack</item>\n        <item>Dessert</item>\n        <item>Lainnya</item>\n    </string-array>\n\n    <string-array name=\"list_tipe_produk\">\n        <item>-</item>\n        <item>GOOD</item>\n        <item>SERV</item>\n    </string-array>\n\n    <string-array name=\"list_satuan\">\n        <item>PCS</item>\n        <item>PORSI</item>\n        <item>DOS</item>\n        <item>BUAH</item>\n    </string-array>\n\n    <string name=\"desc_cloud_data_dapur\">Fitur ini digunakan untuk memilih sumber data dapur.Aktifkan fitur ini jika anda ingin mengambil data dapur dari Beecloud. Jika tidak aktif, sistem akan mengambil data dari lokal</string>\n    <string name=\"untuk_penjelasan\">Untuk penjelasan lebih, cek video kami, ya~</string>\n    \n\n    <string name=\"mohon_tunggu_sebentar\">Mohon Tunggu Sebentar..</string>\n    <string name=\"email\">Email</string>\n    <string name=\"password\">Password</string>\n    <string name=\"lupa_kata_sandi\">Lupa Password?</string>\n    <string name=\"login\">Login</string>\n    <string name=\"daftar\">DAFTAR</string>\n    <string name=\"atau\">Atau</string>\n    <string name=\"database\">Database</string>\n    <string name=\"mohon_tunggu\">Mohon Tunggu</string>\n    <string name=\"masukkan_email_password_masuk\">Masukkan email &amp; password masuk</string>\n    <string name=\"cth_budi_email_com\">Cth. budi@email.com</string>\n    <string name=\"masuk\">Masuk</string>\n    <string name=\"tentukan_nama_device\">Tentukan Nama Device</string>\n    <string name=\"sebagai_identitas_device_yang_digunakan\">Sebagai identitas device yang digunakan</string>\n    <string name=\"nama_device\">Nama Device</string>\n    <string name=\"cth_smartphone_1\">Cth. Smartphone 1</string>\n    <string name=\"lanjutkan\">Lanjutkan</string>\n    <string name=\"lorem_ipsum\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus eu felis nec orci tincidunt lobortis ut non mi. Suspendisse dolor orci, viverra a odio sed, mollis finibus dolor. Nunc in augue fringilla, consectetur dolor a, feugiat arcu. Sed vel leo sem. In et imperdiet quam, ut mollis libero. Etiam faucibus felis urna, ut porta purus auctor ac.</string>\n    <string name=\"informasi\">Informasi</string>\n    <string name=\"konfirmasi_keluar\">Anda belum menyelesaikan proses login dan perubahan belum disimpan</string>\n    <string name=\"yakin_akan_keluar\">Yakin ingin keluar?</string>\n    <string name=\"pilih_database\">Pilih Database</string>\n    <string name=\"pilih_database_untuk_melakukan_transaksi\">Pilih database untuk melakukan transaksi</string>\n    <string name=\"pilih_cabang\">Pilih Cabang</string>\n    <string name=\"pilih_cabang_untuk_melakukan_transaksi\">Pilih cabang untuk melakukan transaksi</string>\n    <string name=\"kasir_yang_tersedia\">Kasir yang tersedia</string>\n    <string name=\"tersedia\">Tersedia</string>\n    <string name=\"login_operator\">Login Operator</string>\n    <string name=\"masukkan_pin_untuk_melanjutkan\">Masukkan PIN untuk melanjutkan</string>\n    <string name=\"_1\">1</string>\n    <string name=\"_2\">2</string>\n    <string name=\"_3\">3</string>\n    <string name=\"_4\">4</string>\n    <string name=\"_7\">7</string>\n    <string name=\"_8\">8</string>\n    <string name=\"_9\">9</string>\n    <string name=\"_0\">0</string>\n    <string name=\"tentang_pajak\">Tentang Pajak</string>\n    <string name=\"info_pajak\">Harga produk yang tercantum belum termasuk pajak. Contoh: Jika harga / Dpp produk 100,000 + pajak 10,000, maka total harga menjadi 110,000</string>\n    <string name=\"harga_termasuk_pajak\">Harga Termasuk Pajak</string>\n    <string name=\"info_harga_termasuk_pajak\">Harga produk yang tercantum sudah termasuk pajak. Contoh: Jika harga produk sebesar 100,000, maka Dpp 90,000 + pajak 10,000</string>\n    <string name=\"tutup\">Tutup</string>\n    <string name=\"download_text\">Download text</string>\n    <string name=\"mode_tampilan\">Mode Tampilan</string>\n    <string name=\"pilih_tipe_bisinis\">Pilih tipe bisnis anda agar kami bisa menyesuaikan tampilan mana yang cocok untuk anda</string>\n    <string name=\"food_amp_beverages_fnb\"><![CDATA[Food & Beverages (FnB)]]></string>\n    <string name=\"desc_food_and_beverages\">Cocok untuk anda yang memiliki jumlah produk kurang dari 1.000. Mode ini dapat diakses secara portrait atau landscape</string>\n    <string name=\"lihat_contoh_tampilan\">Lihat contoh tampilan</string>\n    <string name=\"retail_atau_distributor\">Retail atau Distributor</string>\n    <string name=\"desc_retail_distributor\">Cocok untuk anda yang memiliki jumlah produk lebih dari 1.000. Mode ini hanya dapat diakses secara portrait</string>\n    <string name=\"page_mode_tampilan\">page_mode_tampilan</string>\n    <string name=\"informasi_kontak\">Informasi Kontak</string>\n    <string name=\"input_data_diri\">Masukkan data diri anda untuk memulai</string>\n    <string name=\"nama_org\">Nama</string>\n    <string name=\"no_wa\">No Whatsapp</string>\n    <string name=\"conf_pass\">Konfirmasi Password</string>\n    <string name=\"min_8_char_pass\">Minimal 8 Karakter</string>\n    <string name=\"ulangi_pass\">Ulangi Password</string>\n    <string name=\"btn_lanjut\">Lanjut</string>\n    <string name=\"cek_wa_ya\">Cek WhatsApp, ya!</string>\n    <string name=\"kami_telah_mengirimkan\">Kami telah mengirimkan 4 digit kode OTP ke nomor %1$s melalui WhatsApp</string>\n    <string name=\"kirim_kode\">Kirim ulang kode</string>\n    <string name=\"info_perusahaan\">Info Perusahaan</string>\n    <string name=\"masukan_info\">Masukkan informasi seputar bisnis anda</string>\n    <string name=\"perusahaan\">Nama Perusahaan</string>\n    <string name=\"bidang\">Bidang Usaha</string>\n    <string name=\"kota\">Kota</string>\n    <string name=\"alamat\">Alamat</string>\n    <string name=\"cth_beestore\">Cth. Bee Store</string>\n    <string name=\"cth_sepaturunning\">Cth. Sepatu Running</string>\n    <string name=\"pilih_kota\">Pilih Kota</string>\n    <string name=\"atur_pin\">Atur PIN Masuk</string>\n    <string name=\"pin_digunakan\">PIN digunakan setiap akan masuk ke kasir</string>\n    <string name=\"tampil_pin\">Tampilkan PIN</string>\n    <string name=\"ulangi_pin\">Ulangi PIN Masuk</string>\n    <string name=\"pin_konfirmasi\">Masukkan sekali lagi PIN untuk konfirmasi</string>\n    <string name=\"tambah_produk_baru\">Tambah Produk Baru</string>\n    <string name=\"yuk_siapkan_produk\">Yuk siapkan produk yang akan dijual</string>\n    <string name=\"empat_langkah\">Ada 4 langkah mudah membuat produk:</string>\n    <string name=\"tentukan_nama_harga\">Tentukan nama dan harga produk</string>\n    <string name=\"pilih_satuan\">Pilih satuan, tipe, dan grup produk</string>\n    <string name=\"upload_foto\">Upload foto produk terbaikmu</string>\n    <string name=\"mulai_pengalaman\">Simpan dan mulai pengalaman baru bersama Beepos</string>\n    <string name=\"btn_simpan_pin\">Simpan PIN</string>\n    <string name=\"mulai_tambah_prd\">Mulai Tambah Produk</string>\n    <string name=\"nama_prd\">Nama Produk</string>\n    <string name=\"harga\">Harga</string>\n    <string name=\"satuan_prd\">Satuan Produk</string>\n    <string name=\"satuan1\">Satuan %1$d</string>\n    <string name=\"tipe_prd\">Tipe Produk</string>\n    <string name=\"grup_prd\">Grup Produk</string>\n    <string name=\"foto_prd\">Foto Produk</string>\n    <string name=\"mulai_jualan\">Mulai Jualan</string>\n    <string name=\"tambah_produk\">Tambah Produk</string>\n    <string name=\"btn_simpan\">Simpan</string>\n    <string name=\"pid\">PID</string>\n    <string name=\"pid_avail\">PID Produk kini sudah tersedia</string>\n    <string name=\"gunakan_pid\">Gunakan PID untuk varian, ukuran, dll</string>\n    <string name=\"apasih_pid\">Apa sih PID itu? dan gunanya untuk apa?</string>\n    <string name=\"definisi\">Definisi</string>\n    <string name=\"fungsi\">Fungsi</string>\n    <string name=\"cocok_untuk\">Cocok untuk siapa aja?</string>\n    <string name=\"apakah_anda\">Apakah anda tertarik</string>\n    <string name=\"saya_tertarik_pid\">Saya tertarik &amp; telah paham apa itu PID</string>\n    <string name=\"nanti_saja\">Nanti Saja</string>\n    <string name=\"aktif_pid\">Aktifkan PID</string>\n    <string name=\"gofood\">GoFood</string>\n    <string name=\"pilih_channel\">Pilih Channel</string>\n    <string name=\"anda_belum_punya_member\">Anda belum punya member</string>\n    <string name=\"anda_belum_punya_salesman\">Anda belum punya salesman</string>\n    <string name=\"budiman\">Budiman</string>\n    <string name=\"nama_member\">Nama Member</string>\n    <string name=\"no_telepon\">No. Telepon</string>\n    <string name=\"informasi_lainnya\">Informasi Lainnya</string>\n    <string name=\"opsional\">(Opsional)</string>\n    <string name=\"level_harga\">Level Harga</string>\n    <string name=\"detail_member\">Detail Member</string>\n    <string name=\"data_dapur_diperbarui\">Data Dapur Berhasil Diperbarui</string>\n    <string name=\"apakah_anda_ingin_memberbarui_printer\">Apakah anda ingin mengatur printer lagi\nuntuk memperbarui data dapur?</string>\n    <string name=\"atur_printer\">Atur Printer</string>\n    <string name=\"masukan_email_melanjutkan\">Masukkan email untuk melanjutkan</string>\n    <string name=\"yakin_ganti_kasir\">Yakin ingin ganti Kasir ?</string>\n    <string name=\"login_pin\">Login Pin</string>\n    <string name=\"login_email\">Login Email</string>\n    <string name=\"informasi_akun\">Informasi Akun</string>\n    <string name=\"gagal_login\">Gagal Login</string>\n    <string name=\"silahkan_login_email_sinkron\">Silahkan login menggunakan Email atau Sinkron data ulang!</string>\n    <string name=\"kategori_blm_ada\">Kategori belum ada, klik untuk tambahkan</string>\n    <string name=\"merek_blm_ada\">Merek belum ada, klik untuk tambahkan</string>\n    <string name=\"nama_kategori\">Nama Kategori</string>\n    <string name=\"pilih_kategori\">Pilih Kategori</string>\n    <string name=\"gunakan_sub_kategori\">Gunakan Sub-Kategori Produk</string>\n    <string name=\"pilih_kategori_prd\">Pilih kategori produk</string>\n    <string name=\"merk_produk\">Merek Produk</string>\n    <string name=\"pilih_merk_prd\">Pilih merek produk</string>\n    <string name=\"pilih_merk\">Pilih Merk</string>\n    <string name=\"nama_merk\">Nama Merek</string>\n    <string name=\"hapus_merk\">Hapus Merek</string>\n    <string name=\"confirm_hapus_merk\">Apakah anda yakin ingin menghapus merek? Merek yang dihapus tidak dapat dikembalikan lagi</string>\n    <string name=\"hapus_kategori\">Hapus Kategori</string>\n    <string name=\"confirm_hapus_kategori\">Apakah anda yakin ingin menghapus kategori? Kategori yang dihapus tidak dapat dikembalikan lagi</string>\n    <string name=\"flash_on\">Flash On</string>\n    <string name=\"flash_off\">Flash Off</string>\n\n    <!--    Setting   -->\n    <string name=\"pos\">POS</string>\n    <string name=\"favorit\">Favorit</string>\n    <string name=\"nota\">Nota</string>\n    <string name=\"print\">Print</string>\n    <string name=\"sistem\">Sistem</string>\n    <string name=\"lisensi\">Lisensi</string>\n    <string name=\"ukuran_font\">Ukuran Font</string>\n    <string name=\"medium\">Medium</string>\n    <string name=\"multi_line\">Multi Line</string>\n    <string name=\"tampilkan_nama_item_menjadi_beberapa_baris\">Tampilkan nama item menjadi beberapa baris</string>\n    <string name=\"konfirmasi_customer\">Konfirmasi Customer</string>\n    <string name=\"preset_buka_kasir\">Preset Buka Kasir</string>\n    <string name=\"_100_000\">100.000</string>\n    <string name=\"muat_gambar_produk\">Muat Gambar Produk</string>\n    <string name=\"rekap_per_customer\">Rekap Per Customer</string>\n    <string name=\"rekap_per_produk_per_channel\">Rekap per Produk per Channel</string>\n    <string name=\"rekap_per_faktur\">Rekap per Faktur</string>\n    <string name=\"rekap_per_channel\">Rekap per Channel</string>\n    <string name=\"posisi_orientasi\">Posisi Orientasi</string>\n    <string name=\"potrait\">Portrait</string>\n    <string name=\"customer\">Customer</string>\n    <string name=\"no_meja\">No. Meja</string>\n    <string name=\"nama\">Nama</string>\n    <string name=\"jumlah_meja\">Jumlah Meja</string>\n    <string name=\"_60\">60</string>\n    <string name=\"title\">Lorem Ipsum Dolor</string>\n    <string name=\"simpan\">Simpan</string>\n    <string name=\"email_tidak_boleh_kosong\">Email tidak boleh kosong</string>\n    <string name=\"password_tidak_boleh_kosong\">Password tidak boleh kosong</string>\n    <string name=\"mata_uang_nominal\">%1$s %2$s</string>\n    <string name=\"jus_mangga\">Jus Mangga</string>\n    <string name=\"strip\">-</string>\n    <string name=\"channel\">Channel :</string>\n    <string name=\"channel_\">Channel</string>\n    <string name=\"member\">Member :</string>\n    <string name=\"member_\">Member</string>\n    <string name=\"search\">Search</string>\n    <string name=\"_1_produk\">%1$s Produk</string>\n    <string name=\"_1_PCS\">%1$s %2$s</string>\n    <string name=\"anda_mendapatkan_promo\">Anda mendapatkan %1$d promo</string>\n    <string name=\"total\">Total</string>\n    <string name=\"subtotal\">Subtotal</string>\n    <string name=\"batal\">Batal</string>\n    <string name=\"bayar\">Bayar</string>\n    <string name=\"diskon\">Diskon</string>\n    <string name=\"diskon_nominal\">Diskon %1$s</string>\n    <string name=\"pajak\">Pajak</string>\n    <string name=\"pembulatan\">Pembulatan</string>\n    <string name=\"_minus_0\">(0)</string>\n    <string name=\"lihat_promo\">Lihat Promo</string>\n    <string name=\"dine_in\">DINE IN</string>\n    <string name=\"ayam_bakar\">Ayam Bakar</string>\n    <string name=\"gratis\">Gratis</string>\n    <string name=\"es_banyak_gula_sedikit_2_bubble\">Es Banyak, Gula sedikit, 2 Bubble</string>\n    <string name=\"uang\">Uang</string>\n    <string name=\"non_tunai\">Non Tunai</string>\n    <string name=\"tunai\">Tunai</string>\n    <string name=\"_double0\">00</string>\n    <string name=\"addon\">Addon</string>\n    <string name=\"ubah\">Ubah</string>\n    <string name=\"rp\">Rp.</string>\n    <string name=\"harga_produk\">Harga Produk</string>\n    <string name=\"catatan\">Catatan</string>\n    <string name=\"jumlah\">Jumlah</string>\n    <string name=\"sistem_penyimpanan\">Sistem Penyimpanan</string>\n    <string name=\"jml_hari_setting\">30 hari</string>\n    <string name=\"sistem_batch\">Sistem Batch Upload</string>\n    <string name=\"auto\">AUTO Tampilkan nama item menjadi beberapa baris Tampilkan nama item menjadi beberapa baris Tampilkan nama item menjadi beberapa baris</string>\n    <string name=\"periode_upload\">Periode Upload Auto</string>\n    <string name=\"jml_menit\">15 menit</string>\n    <string name=\"cloud_dapur\">Cloud Data Dapur</string>\n    <string name=\"tentang_cloud\">Tentang Cloud Data Dapur</string>\n    <string name=\"tonton_video\">Tonton Video</string>\n    <string name=\"logo\">Logo</string>\n    <string name=\"logo_galeri\">Gunakan Logo Dari Galeri</string>\n    <string name=\"header\">Header</string>\n    <string name=\"footer\">Footer</string>\n    <string name=\"atur_heder\">Atur Header</string>\n    <string name=\"atur_footer\">Atur Footer</string>\n    <string name=\"isi_header\">Isi Header</string>\n    <string name=\"isi_footer\">Isi Footer</string>\n    <string name=\"pilih_logo\">Pilih Logo></string>\n    <string name=\"logo_path\">logo.png</string>\n    <string name=\"id_member\">000111</string>\n    <string name=\"produk_fav\">Produk</string>\n    <string name=\"member_fav\">Member</string>\n    <string name=\"no_fav_produk\">Belum ada produk favorit</string>\n    <string name=\"no_fav_member\">Belum ada member favorit</string>\n    <string name=\"tambah_baru\">Tambah Baru</string>\n    <string name=\"memuat\">Memuat Item...</string>\n    <string name=\"nama_db\">Database 2</string>\n    <string name=\"versi_bpm\">Beepos Mobile versi 1.4.4.30</string>\n    <string name=\"jenis_lisnesi\">Beepos Mobile 12 Bulan Extra Lisensi</string>\n    <string name=\"berakhir_pada\">Akan berakhir pada</string>\n    <string name=\"tgl_berakhir\">22 Agustus 2022</string>\n    <string name=\"nomor_lisensi\">Nomor Lisensi</string>\n    <string name=\"lihat_lainnya\">Lihat Lainnya</string>\n    <string name=\"infor_lainnya\">Informasi Lainnya</string>\n    <string name=\"serial_lisensi\">Nomor Serial Lisensi</string>\n    <string name=\"nama_perangkat\">Nama Perangkat</string>\n    <string name=\"lepas_lisensi\">Lepas Lisensi</string>\n    <string name=\"perpanjang_lisensi\">Perpanjang Lisensi</string>\n    <string name=\"berhasil_membuat_member\">Berhasil membuat member :)</string>\n    <string name=\"belum_ada_printer\">Belum ada printer yang terhubung</string>\n    <string name=\"info_printer\">Informasi Printer</string>\n    <string name=\"nama_printer\">Nama Printer</string>\n    <string name=\"mac_address\">MAC Address</string>\n    <string name=\"tipe\">Tipe</string>\n    <string name=\"ukuran_kertas\">Ukuran Kertas</string>\n    <string name=\"pengaturan_printer\">Pengaturan Printer</string>\n    <string name=\"printer_kasir\">Printer Kasir</string>\n    <string name=\"printer_setoran\">Printer Setoran</string>\n    <string name=\"printer_kitchen\">Printer Kitchen</string>\n    <string name=\"jumlah_dapur\">Jumlah Dapur</string>\n    <string name=\"tipe_bluetooth\">Tipe Bluetooth</string>\n    <string name=\"bluetooth\">NP12434BT</string>\n    <string name=\"id_mac_address\">72:3C:61:1E:27:14</string>\n    <string name=\"terhubung\">Terhubung</string>\n    <string name=\"tdk_terhubung\">Tidak Terhubung</string>\n    <string name=\"pilih_tipe_printer\">Pilih Tipe Printer</string>\n    <string name=\"bluetooth_printer\">Bluetooth Printer</string>\n    <string name=\"network_printer\">Network Printer</string>\n    <string name=\"none_printer\">Tidak ada printer tersedia</string>\n    <string name=\"nama_dapur\">Nama dapur</string>\n    <string name=\"kategori\">Kategori</string>\n    <string name=\"data_item_kosong\">Data Item Kosong</string>\n    <string name=\"cari_kota_kecamatan\">Cari kota / kecamatan</string>\n    <string name=\"min_3_huruf\">Min 3 huruf</string>\n    <string name=\"kota_populer\">Kota Populer</string>\n    <string name=\"surabaya\">Surabaya</string>\n    <string name=\"ovaltine_swiss\">Ovaltine Swiss</string>\n    <string name=\"kartu_kredit\">Kartu Kredit</string>\n    <string name=\"kartu_debit\">Kartu Debit</string>\n    <string name=\"gopay\">GOPAY</string>\n    <string name=\"edc\">EDC</string>\n    <string name=\"tipe_edc\">Tipe EDC</string>\n    <string name=\"track_no\">Track No</string>\n    <string name=\"nomor_kartu\">Nomor Kartu</string>\n    <string name=\"keterangan\">Keterangan</string>\n    <string name=\"bayar_sekarang\">Bayar Sekarang</string>\n    <string name=\"surcharge\">Surcharge</string>\n    <string name=\"nominal_surcharge\">Nominal Surcharge</string>\n    <string name=\"scan_kode_qr\">Scan Kode QR</string>\n    <string name=\"untuk_menerima_pembayaran_minta_pelanggan_untuk_scan_kode_qr_dibawah_ini_ya\">Untuk menerima pembayaran, minta pelanggan untuk scan kode QR dibawah ini ya!</string>\n    <string name=\"print_qr_code\">Print QR Code</string>\n    <string name=\"transaksi_berhasil\">Transaksi Berhasil!</string>\n    <string name=\"kembali_4_500_dibayar_tunai\">Kembali %1$s dibayar %2$s</string>\n    <string name=\"print_nota\">Print Nota</string>\n    <string name=\"beranda\">Beranda</string>\n    <string name=\"analisa\">Analisa</string>\n    <string name=\"transaksi\">Transaksi</string>\n    <string name=\"setting\">Setting</string>\n    <string name=\"halo_kasir_2\">Halo, %1$s</string>\n    <string name=\"di_surabaya\">Di %1$s</string>\n    <string name=\"detail\">Detail</string>\n    <string name=\"buka_kasir\">Buka Kasir</string>\n    <string name=\"klik_buka_kasir_untuk_memulai_shift_3_ya\">Klik buka kasir untuk memulai shift %1$d, ya~</string>\n    <string name=\"klik_tutup_kasir_untuk_mengakhiri_shift_3_ya\">Klik tutup kasir untuk mengakhiri shift %1$d, ya~</string>\n    <string name=\"lihat_analisa_sebelumnya\">Lihat Analisa Sebelumnya</string>\n    <string name=\"kasir_belum_aktif_belum_ada_data_yg_ditampilkan\">Kasir belum aktif, belum ada data yg ditampilkan</string>\n    <string name=\"belum_ada_penjualan_yang_dicatat_buat_transaksi_baru_di_menu_pos_dulu_ya\">Belum ada penjualan yang dicatat. Buat transaksi baru di menu POS dulu, ya!</string>\n    <string name=\"informasi_kasir\">Informasi Kasir</string>\n    <string name=\"cabang\">Cabang</string>\n    <string name=\"kasir\">Kasir</string>\n    <string name=\"user_kasir\">User Kasir</string>\n    <string name=\"shift\">Shift</string>\n    <string name=\"mulai_operasional\">Mulai Operasional</string>\n    <string name=\"modal\">Modal</string>\n    <string name=\"modal_kasir\">Modal Kasir</string>\n    <string name=\"atur_modal_kasir\">Atur Modal Kasir</string>\n    <string name=\"sebelum_buka_kasir_atur_modal_dulu_ya\">Sebelum buka kasir, atur modal dulu ya!</string>\n    <string name=\"detail_transaksi\">Detail Transaksi</string>\n    <string name=\"_08_03_2022_12_12\">08/03/2022 12:12</string>\n    <string name=\"jenis_pembayaran\">Jenis Pembayaran</string>\n    <string name=\"item_pesanan\">Item Pesanan</string>\n    <string name=\"rincian_harga\">Rincian Harga</string>\n    <string name=\"cetak_nota\">Cetak Nota</string>\n    <string name=\"hapus_transaksi\">Hapus Transaksi</string>\n    <string name=\"apakah_anda_yakin_ingin_menghapus_transaksi_no_jl12345\">Apakah anda yakin ingin menghapus transaksi no %1$s?</string>\n    <string name=\"alasan_void\">Alasan Hapus</string>\n    <string name=\"hapus\">Hapus</string>\n    <string name=\"pendapatan_sesi_1\">Pendapatan Sesi</string>\n    <string name=\"detail_pendapatan\">Detail Pendapatan</string>\n    <string name=\"debit\">Debit</string>\n    <string name=\"kredit\">Kredit</string>\n    <string name=\"rata_rata_order\">Rata - rata order</string>\n    <string name=\"member_baru\">Member Baru</string>\n    <string name=\"total_qty\">Total Qty</string>\n    <string name=\"transaksi_dihapus\">Transaksi Dihapus</string>\n    <string name=\"rata_rata_penjualan\">Rata - Rata Penjualan</string>\n    <string name=\"grafik_penjualan_per_jam\">Grafik Penjualan per Jam</string>\n    <string name=\"grafik_belum_tersedia\">Grafik belum tersedia</string>\n    <string name=\"rangking_produk\">Rangking Produk</string>\n    <string name=\"perbarui_data\">Perbarui Data</string>\n    <string name=\"upload_manual\">Upload Manual</string>\n    <string name=\"cek_stok\">Cek Stok</string>\n    <string name=\"rekap_kas\">Rekap Kas</string>\n    <string name=\"rekap_produk\">Rekap Produk</string>\n    <string name=\"kelola_produk\">Kelola Produk</string>\n    <string name=\"pengaturan\">Pengaturan</string>\n    <string name=\"lainnya\">Lainnya</string>\n    <string name=\"seluruh_data_transaksi_sudah_tersinkron\">Seluruh data transaksi sudah tersinkron</string>\n    <string name=\"msg_default_modal_kasir\">Apakah anda yakin ingin menggunakan default nilai modal kasir (%1$s) ?</string>\n    <string name=\"ya\">Ya</string>\n    <string name=\"belum_buka_kasir\">Belum Buka Kasir</string>\n    <string name=\"msg_info_belum_buka_kasir_pos\">Untuk memulai jualan, jangan lupa buka kasir dulu, ya~</string>\n    <string name=\"pendapatan\">Pendapatan</string>\n    <string name=\"tutup_kasir\">Tutup Kasir</string>\n    <string name=\"pemasukan\">Pemasukan</string>\n    <string name=\"pengeluaran\">Pengeluaran</string>\n    <string name=\"saldo_akhir\">Saldo Akhir</string>\n    <string name=\"msg_validasi_tutup_kasir\">Apakah anda yakin ingin melakukan tutup kasir ?</string>\n    <string name=\"_2_transaksi\">2 Transaksi</string>\n    <string name=\"tes_print\">Tes Print</string>\n    <string name=\"kertas58\">58 mm</string>\n    <string name=\"kertas80\">80 mm</string>\n    <string name=\"rkp_customer\">Rekap per Customer</string>\n    <string name=\"rkp_produk_channel\">Rekap per Produk per Channel</string>\n    <string name=\"rkp_faktur\">Rekap per Faktur</string>\n    <string name=\"rkp_channel\">Rekap per Channel</string>\n    <string name=\"diskon_nota\">Diskon Nota</string>\n    <string name=\"daftar_promo\">Daftar Promo</string>\n    <string name=\"selengkapnya\">Selengkapnya</string>\n    <string name=\"tidak_ada_data_draft_saat_ini\">Tidak ada data draft saat ini!</string>\n    <string name=\"tidak_ada_draft_yang_disimpan\">Tidak ada draft yang disimpan</string>\n    <string name=\"transaksi_draft\">Transaksi Draft</string>\n    <string name=\"tambah\">Tambah</string>\n    <string name=\"hint_diskon_nota\">Cth. 10% atau 10000 atau 10% + 10000</string>\n    <string name=\"untuk_diskon_kombinasi_gunakan_tanda_diantara_diskon_1_dan_diskon_2\">Untuk diskon kombinasi, gunakan tanda + diantara diskon 1 dan diskon 2</string>\n    <string name=\"bantuan\">Bantuan</string>\n    <string name=\"fitur_beepos\">Fitur Beepos Mobile</string>\n    <string name=\"kontak_bee\">Kontak Bee</string>\n    <string name=\"privacy_keamanan\">Privasi dan Keamanan</string>\n    <string name=\"perhatian\">Perhatian</string>\n    <string name=\"anda_tidak_dapat_detach_belum_sync\">Anda tidak dapat melakukan proses detach, pastikan seluruh data transkasi telah ter-sync, Upload data sekarang?</string>\n    <string name=\"proses_detach_akan_menghapus_seluruh_data\">Proses Detach Lisensi Akan Menghapus KESELURUHAN Data Pada Device Ini Pastikan Seluruh Transaksi Telah Ter-Sinkronisasi, Apakah Anda Yakin Akan Melakukan Ini ??</string>\n    <string name=\"anda_tidak_dapat_detach_belum_tutup_kasir\">Anda tidak dapat melakukan proses detach, pastikan tutup kasir terlebih dahulu !</string>\n    <string name=\"cari_produknya_dulu\">Cari produknya dulu ya, nanti datanya akan muncul disini</string>\n    <string name=\"belum_diatur\">Belum Diatur</string>\n\n<!--    Member-->\n    <string name=\"kecamatan_opsional\">Kecamatan bersifat opsional (tidak wajib dipilih)</string>\n    <string name=\"city_kosong\">Tidak boleh kosong</string>\n    <string name=\"citylist_empty\">Kota yang anda cari tidak ada, coba cek ejaan atau cari dengan kata kunci lain ya</string>\n    <string name=\"pilih_edc\">Pilih EDC</string>\n    <string name=\"pilih_tipe_edc\">Pilih Tipe EDC</string>\n\n\n    <!--Anlisa sesi-->\n    <string name=\"jam_rekap\">12:12 WIB</string>\n    <string name=\"total_rekap\">Rp 12.000</string>\n    <string name=\"cash\">CASH</string>\n    <string name=\"hari_ini\">Hari ini</string>\n    <string name=\"info_kasir\">Informasi Kasir</string>\n    <string name=\"selesai_operasional\">Selesai Operasional</string>\n    <string name=\"sesi\">Sesi</string>\n    <string name=\"analisa_sesi\">Analisa Sesi</string>\n    <string name=\"lihat_grafik\">Lihat grafik, rata-rata penjualan,   dll</string>\n    <string name=\"pendapatan_sesi\">Pendapatan Sesi</string>\n    <string name=\"rekap_sesi_empty\">Belum ada rekap sesi yang dicatat. Rekap sesi akan otomatis tersedia kasir aktif</string>\n    <string name=\"note_retail\">Keranjangmu masih kosong. Tambah produk dulu ya untuk memulai transaksi</string>\n    <string name=\"salesman\">Salesman :</string>\n    <string name=\"salesman_\">Salesman</string>\n    <string name=\"scan_barcode\">Scan Barcode</string>\n    <string name=\"total_pendapatan\">Total Pendapatan</string>\n    <string name=\"lihat_riwayat_sebelumnya\">Lihat Riwayat Sebelumnya</string>\n    <string name=\"no_sesi\">No Sesi</string>\n    <string name=\"reset\">Reset</string>\n    <string name=\"filter\">Filter</string>\n    <string name=\"pilih_tanggal\">Pilih Tanggal</string>\n    <string name=\"pembayaran\">Pembayaran</string>\n    <string name=\"pilih_member\">Pilih Member</string>\n    <string name=\"tambah_member\">Tambah Member</string>\n    <string name=\"draft_penjualan\">Draft Penjualan</string>\n    <string name=\"analisis_sesi\">Analisis Sesi</string>\n    <string name=\"riwayat_sesi\">Riwayat Sesi</string>\n    <string name=\"detail_riwayat_sesi\">Detail Riwayat Sesi</string>\n    <string name=\"satuan\">Satuan</string>\n    <string name=\"detail_produk\">Detail Produk</string>\n    <string name=\"pilih_pid_produk\">Pilih Pid Produk</string>\n    <string name=\"void_penjualan\">Void</string>\n    <string name=\"last_1_week\">1 Minggu Terakhir</string>\n    <string name=\"last_1_month\">1 Bulan Terakhir</string>\n    <string name=\"last_90_days\">90 Hari Terakhir</string>\n    <string name=\"custom\">Custom</string>\n    <string name=\"selection_name\">Selection Name</string>\n    <string name=\"optional\">Optional</string>\n    <string name=\"masukkan_satuan_produk\">Masukkan satuan</string>\n    <string name=\"kategori_produk\">Kategori Produk</string>\n    <string name=\"buat_akun\">Buat Akun</string>\n    <string name=\"star\">*******</string>\n\n    <!--Manual Upload-->\n    <string name=\"konfirmasi\">Konfirmasi</string>\n    <string name=\"yakin_sync_manual\">Apakah anda yakin untuk melakukan sync manual ?</string>\n    <string name=\"no_trans_havent_upload\">Tidak Ditemukan Data Transaksi.\\nAtau\\nSemua Transaksi Telah Berhasil Tersinkronisasi.</string>\n    <string name=\"cek_koneksi_internet\">Untuk Dapat Melanjutkan, Pastikan Koneksi Internet Pada Smartphone Anda Hidup dan Terkoneksi Dengan Baik</string>\n    <string name=\"coba_lagi\">Coba Lagi</string>\n    <string name=\"cek_koneksi_wifi\">Cek koneksi Wi-Fi atau paket data lalu silakan coba lagi, ya!</string>\n    <string name=\"cek_koneksi_internet_title\">Tidak ada koneksi internet</string>\n    <string name=\"sedang_memperbarui_data\">Sedang memperbarui data...</string>\n    <string name=\"downloading_data_produk\">Downloading data produk</string>\n    <string name=\"bagaimana_caranya_agar_saya_bisa_mengubah_modal_kasir_pelajari_selengkapnya_disini\">Bagaimana caranya agar saya bisa mengubah modal kasir? Pelajari selengkapnya disini</string>\n    <string name=\"msg_batalkan_transaksi\">Apakah anda yakin ingin membatalkan transaksi? Seluruh produk yang telah dipilih tidak akan diproses </string>\n    <string name=\"batalkan_transaksi\">Batalkan Transaksi</string>\n    <string name=\"batalkan\">Batalkan</string>\n    <string name=\"lanjut_bayar\">Lanjut Bayar</string>\n    <string name=\"simpan_sebagai_draft\">Simpan Sebagai Draft</string>\n    <string name=\"msg_draft\">Apakah anda yakin ingin menyimpan transaksi sebagai draft? Transaksi masih bisa dibuka dan diedit lagi</string>\n    <string name=\"hapus_produk\">Hapus Produk</string>\n    <string name=\"msg_hapus_produk\">Apakah anda yakin ingin menghapus produk ini?</string>\n    <string name=\"terapkan\">Terapkan</string>\n    <string name=\"produk_dipilih\">Produk Dipilih</string>\n    <string name=\"kamu_mendapatkan_item_gratis\">Kamu Mendapatkan %1$s Item Gratis</string>\n    <string name=\"tebus_murah_item\">Tebus Murah %1$s Item %2$s</string>\n    <string name=\"ambil_promo\">Ambil Promo</string>\n    <string name=\"next\">Next</string>\n    <string name=\"abaikan\">Abaikan</string>\n    <string name=\"transaksi_penjualan\">Transaksi Penjualan</string>\n    <string name=\"gimana_caranya\">Gimana Caranya?</string>\n    <string name=\"agar_bisa_mengubah_nilai_kasir_anda_bisa_mengikuti_langkah_dibawah_ini\">Agar bisa mengubah nilai kasir, anda bisa mengikuti langkah dibawah ini:</string>\n    <string name=\"login_ke_app_beecloud_id\">Login ke app.beecloud.id</string>\n    <string name=\"buka_menu_sistem_pilih_submenu_pegaturan_sistem\">Buka menu Sistem, pilih submenu Pegaturan Sistem</string>\n    <string name=\"cari_keyword_pos_automodal_di_kolom_cari_cepat_lalu_aktifkan\">Cari keyword POS_AUTOMODAL di kolom cari cepat, lalu aktifkan</string>\n    <string name=\"perbarui_data_beepos_mobile\">Perbarui data Beepos Mobile</string>\n    <string name=\"cara_mudah_dan_cepat_isi_sendiri_nilai_buka_kasir\">Cara mudah dan cepat isi sendiri nilai buka kasir</string>\n    <string name=\"atur_sekarang\">Atur Sekarang</string>\n    <string name=\"apa_sih_pid_itu_dan_gunanya_untuk_apa\">Apa sih PID itu? dan gunanya untuk apa?</string>\n    <string name=\"product_id_atau_pid_adalah_fitur\">Product ID atau PID adalah fitur yang bisa anda manfaatkan untuk kebutuhan khusus seperti varian, ukuran, bahkan warna produk</string>\n    <string name=\"pid_dapat_memangkas_jumlah_stock\">PID dapat memangkas jumlah Stock Keeping Unit (SKU) yang ada, namun tetap dapat memanfaatkan kebutuhan khusus sebagai bagian dari perhitungan jumlah stok</string>\n    <string name=\"pid_cocok_digunakan\">PID cocok digunakan untuk bisnis toko sepatu, toko pakaian, dll. Khusus untuk bisnis jual HP, dan toko elektronik kami menyediakan PID Unik yang dapat digunakan untuk SN / IMEI</string>\n    <string name=\"baca_artikel_pid_selengkapnya_disini\">Baca artikel PID selengkapnya disini</string>\n    <string name=\"produk_yang_anda_cari_tidak_ada_coba_cek_ejaan_atau_cari_dengan_kata_kunci_lain_ya\">Produk yang anda cari tidak ada  Coba cek ejaan atau cari dengan kata kunci lain, ya</string>\n    <string name=\"cari_produk_min_3_karakter\">Cari produk, min 3 karakter</string>\n    <string name=\"draft_tidak_ditemukan\">Draft yang anda cari tidak ada!</string>\n    <string name=\"member_tidak_ditemukan\">Member yang anda cari tidak ada!</string>\n    <string name=\"salesman_tidak_ditemukan\">Salesman yang anda cari tidak ada!</string>\n    <string name=\"cth_budi\">Cth. Budi</string>\n    <string name=\"cth_081234567890\">Cth. 081234567890</string>\n    <string name=\"jl_dharmawangsa_no_1\">Jl. Dharmawangsa No. 1</string>\n    <string name=\"nama_salesman\">Nama Salesman</string>\n\n    <!-- Lainnya -->\n    <string name=\"data_kas_masuk\">Data kas masuk belum tersedia</string>\n    <string name=\"data_kas_keluar\">Data kas keluar belum tersedia</string>\n    <string name=\"kas_masuk\">Kas Masuk</string>\n    <string name=\"kas_kelaur\">Kas Keluar</string>\n    <string name=\"tambah_kas_masuk\">Tambah Kas Masuk</string>\n    <string name=\"tambah_kas_keluar\">Tambah Kas Keluar</string>\n    <string name=\"pastikan_data_kas_benar\">Pastikan data yang dimasukkan sudah benar, ya! Karena kas masuk hanya bisa diubah, tidak bisa dihapus.</string>\n    <string name=\"tanggal\">Tanggal</string>\n    <string name=\"nominal_uang_masuk\">Nominal Uang Masuk</string>\n    <string name=\"nominal_uang_keluar\">Nominal Uang Keluar</string>\n    <string name=\"deskripsi\">Deskripsi</string>\n    <string name=\"rupanya_anda_belum_memiliki_produk_favorit_natur_sekarang_yuk\">Rupanya anda belum memiliki produk favorit.\\nAtur sekarang, yuk!</string>\n    <string name=\"rupanya_anda_belum_memiliki_member_favorit_natur_sekarang_yuk\">Rupanya anda belum memiliki member favorit.\\nAtur sekarang, yuk!</string>\n    <string name=\"atur_produk\">Atur Produk</string>\n    <string name=\"atur_member\">Atur Member</string>\n    <string name=\"mencari_printer\">Mencari Printer...</string>\n    <string name=\"_000\">000</string>\n    <string name=\"buka_menu_master_pilih_submenu_item\">Buka menu Master, pilih submenu Item</string>\n    <string name=\"isi_data_yang_sesuai_dengan_produk\">Isi data yang sesuai dengan produk</string>\n    <string name=\"_5\">5</string>\n    <string name=\"simpan_data_produk_yang_telah_diisi\">Simpan data produk yang telah diisi</string>\n    <string name=\"buka_beepos_mobile_dan_lakukan_perbarui_data\">Buka Beepos Mobile dan lakukan Perbarui Data</string>\n    <string name=\"kelola_produk_untuk_jualan_dengan_mudah_bersama_beecloud\">Kelola produk untuk jualan dengan mudah bersama Beecloud</string>\n    <string name=\"kelola_produk_info\">Untuk kelola data produk (tambah, edit, update harga, nonaktif, dll), anda bisa mengikuti langkah dibawah ini:</string>\n    <string name=\"keluar\">Keluar</string>\n    <string name=\"digunakan\">Digunakan</string>\n    <string name=\"pin_salah_coba_lagi\">PIN salah. Coba lagi</string>\n    <string name=\"ini_deskripsi\">ini deskripsi</string>\n    <string name=\"cari_produk_dulu\">Cari produknya dulu ya, nanti datanya akan muncul disini</string>\n    <string name=\"cari_produk_not_found\">Produk yang anda cari tidak ada. Coba cek ejaan atau cari dengan kata kunci lain, ya</string>\n    <string name=\"cari_kas_not_found\">Data yang anda cari tidak ada. Coba cek ejaan atau cari dengan kata kunci lain, ya</string>\n    <string name=\"masukan_deskripsi_masuk\">Masukkan deskripsi kas masuk</string>\n    <string name=\"masukan_deskripsi_keluar\">Masukkan deskripsi kas keluar</string>\n    <string name=\"tgl_belum_diatur\">Tanggal belum diatur</string>\n    <string name=\"cth_1234567890123456\">Cth. 1234567890123456</string>\n    <string name=\"ubah_nilai_kasir\">Ubah Nilai Kasir</string>\n    <string name=\"printer\">Printer</string>\n    <string name=\"tambah_printer\">Tambah Printer</string>\n    <string name=\"cari_bluetooth_printer\">Cari Bluetooth Printer</string>\n    <string name=\"konversi\">Konversi</string>\n    <string name=\"tidak_ada_hak_akses\">Tidak Ada Hak Akses</string>\n    <string name=\"anda_tidak_bisa_mengakses_edit_diskon_karena_anda_tidak_memiliki_hak_akses\">Anda tidak bisa mengakses edit diskon karena anda tidak memiliki hak akses.</string>\n    <string name=\"masukkan_pin_operator_yang_memiliki_akses\">Masukkan PIN operator yang memiliki akses</string>\n    <string name=\"masukkan_pin_operator\">Masukkan PIN Operator</string>\n    <string name=\"minta_persetujuan\">Minta Persetujuan</string>\n    <string name=\"pesanan\">Pesanan</string>\n    <string name=\"rekap_per_produk\">Rekap per Produk</string>\n    <string name=\"pilih_dapur\">Pilih Dapur</string>\n    <string name=\"batal_perbarui\">Batal Perbarui</string>\n    <string name=\"batal_perbarui_data\">Batal Perbarui Data</string>\n    <string name=\"msg_batal_perbarui_data\">Apakah anda yakin ingin membatalkan pembaruan data? Hal ini akan menyebabkan beberapa data menjadi tidak sesuai atau tidak terupdate</string>\n    <string name=\"lanjut_perbarui\">Lanjut Perbarui</string>\n    <string name=\"cth_jl_garuda_no_1\">Cth. JL. Garuda No 1</string>\n    <string name=\"makanan\">Makanan</string>\n    <string name=\"cth_dapur_makanan\">Cth. Dapur Makanan</string>\n    <string name=\"dihapus\">Dihapus</string>\n    <string name=\"menampilkan_data_pada\">Menampilkan data pada</string>\n    <string name=\"jml_stok\">Jumlah Stok</string>\n\n<!--    title fragment-->\n    <string name=\"title_ubah_produk\">Ubah Produk</string>\n    <string name=\"title_ubah_kategori\">Ubah Kategori</string>\n    <string name=\"title_ubah_merek\">Ubah Merek</string>\n    <string name=\"pref_pin\">pref_pin</string>\n    <string name=\"cth_jakarta\">Cth. Jakarta</string>\n    <string name=\"pref_active_pid\">pref_active_pid</string>\n    <string name=\"masukkan_alasan_hapus_min_5_karakter\">Masukkan alasan hapus, min 5 karakter</string>\n    <string name=\"transaksi_telah_dihapus\">Transaksi telah dihapus</string>\n    <string name=\"berhasil_batal_transaksi\">Berhasil batal transaksi</string>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/res/values/strings.xml	(date 1670405192314)
@@ -654,6 +654,7 @@
     <string name="baca_artikel_pid_selengkapnya_disini">Baca artikel PID selengkapnya disini</string>
     <string name="produk_yang_anda_cari_tidak_ada_coba_cek_ejaan_atau_cari_dengan_kata_kunci_lain_ya">Produk yang anda cari tidak ada  Coba cek ejaan atau cari dengan kata kunci lain, ya</string>
     <string name="cari_produk_min_3_karakter">Cari produk, min 3 karakter</string>
+    <string name="cari_transaksi_min_3_karakter">Cari transaksi, min 3 karakter</string>
     <string name="draft_tidak_ditemukan">Draft yang anda cari tidak ada!</string>
     <string name="member_tidak_ditemukan">Member yang anda cari tidak ada!</string>
     <string name="salesman_tidak_ditemukan">Salesman yang anda cari tidak ada!</string>
@@ -732,5 +733,8 @@
     <string name="masukkan_alasan_hapus_min_5_karakter">Masukkan alasan hapus, min 5 karakter</string>
     <string name="transaksi_telah_dihapus">Transaksi telah dihapus</string>
     <string name="berhasil_batal_transaksi">Berhasil batal transaksi</string>
+    <string name="mengandung_min_1_angka">Mengandung min. 1 angka</string>
+    <string name="mengandung_huruf_kecil">Mengandung huruf kecil</string>
+    <string name="mengandung_min_1_huruf_kapital">Mengandung min. 1 huruf kapital</string>
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.beranda\n\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.model.Posses\nimport com.bits.bee.bpmc.domain.usecase.common.GetActiveBranchUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetActiveCashierUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetActivePossesUseCase\nimport com.bits.bee.bpmc.domain.usecase.tutup_kasir.TutupKasirUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.flow.collect\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 03/06/22.\n */\n@HiltViewModel\nclass BerandaViewModel @Inject constructor(\n    private val getActiveBranchUseCase: GetActiveBranchUseCase,\n    private val getActiveCashierUseCase: GetActiveCashierUseCase,\n    private val getActivePossesUseCase: GetActivePossesUseCase,\n    private val tutupKasirUseCase: TutupKasirUseCase\n) : BaseViewModel<BerandaState, BerandaViewModel.UIEvent>() {\n\n    init {\n        state = BerandaState()\n    }\n\n    val getActiveCashier = getActiveCashierUseCase()\n    val getActiveBranch = getActiveBranchUseCase()\n\n    fun onDetailBukaKasirClick() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToBukaKasir)\n    }\n\n    fun onDetailTutupKasirClick() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToTutupKasir)\n    }\n\n    fun onBukaKasirClick() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToDialogBukaKasir)\n    }\n\n    fun onTutupKasirClick() = viewModelScope.launch {\n        eventChannel.send(UIEvent.ReqTutupKasir)\n    }\n\n\n\n    sealed class UIEvent {\n        object NavigateToBukaKasir : UIEvent()\n        object NavigateToTutupKasir : UIEvent()\n        object NavigateToDialogBukaKasir : UIEvent()\n        object ReqTutupKasir : UIEvent()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/beranda/BerandaViewModel.kt	(date 1670312456283)
@@ -27,7 +27,6 @@
         state = BerandaState()
     }
 
-    val getActiveCashier = getActiveCashierUseCase()
     val getActiveBranch = getActiveBranchUseCase()
 
     fun onDetailBukaKasirClick() = viewModelScope.launch {
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/home/HomeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.home\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.activity.viewModels\nimport androidx.appcompat.widget.Toolbar\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.lifecycle.repeatOnLifecycle\nimport androidx.navigation.NavController\nimport androidx.navigation.findNavController\nimport androidx.navigation.fragment.NavHostFragment\nimport androidx.navigation.fragment.findNavController\nimport androidx.navigation.ui.AppBarConfiguration\nimport androidx.navigation.ui.NavigationUI\nimport androidx.navigation.ui.setupWithNavController\nimport com.bits.bee.bpmc.R\nimport com.bits.bee.bpmc.databinding.ActivityHomeBinding\nimport com.bits.bee.bpmc.presentation.base.BaseActivity\nimport com.bits.bee.bpmc.presentation.dialog.DialogBuilderHelper\nimport com.bits.bee.bpmc.presentation.ui.buka_kasir.BukaTutupKasirSharedViewModel\nimport com.bits.bee.bpmc.utils.BeePreferenceManager\nimport com.bits.bee.bpmc.utils.extension.gone\nimport com.bits.bee.bpmc.utils.extension.visible\nimport com.google.android.material.bottomnavigation.BottomNavigationView\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.launch\n\n/**\n * Created by aldi on 07/04/22.\n */\n@AndroidEntryPoint\nclass HomeActivity(\n    override val bindingInflater: (LayoutInflater) -> ActivityHomeBinding = ActivityHomeBinding::inflate\n) : BaseActivity<ActivityHomeBinding>(){\n\n    private val viewModel : HomeViewModel by viewModels()\n\n    private val sharedViewModel : BukaTutupKasirSharedViewModel by viewModels()\n\n    private lateinit var navHostFragment: NavHostFragment\n    private lateinit var navController: NavController\n\n    override fun initComponents() {\n        BeePreferenceManager.saveToPreferences(this, getString(R.string.pref_last_page), getString(\n            R.string.page_home))\n        navHostFragment = supportFragmentManager.findFragmentById(R.id.mainHostFragment) as NavHostFragment\n        navController = navHostFragment.findNavController()\n\n        val appBarConfiguration = AppBarConfiguration(navController.graph)\n\n        binding.apply {\n            setSupportActionBar(toolbar)\n            bottomAppBar.setBackgroundResource(R.color.white)\n            NavigationUI.setupActionBarWithNavController(this@HomeActivity, navController, appBarConfiguration)\n            val bottomNav = findViewById<BottomNavigationView>(R.id.bottomNavigationView)\n            NavigationUI.setupWithNavController(bottomNav, navController)\n            findViewById<Toolbar>(R.id.toolbar).setupWithNavController(navController, appBarConfiguration)\n            navController.addOnDestinationChangedListener { _, _, _ ->\n                if(navController.currentDestination?.id != R.id.berandaFragment)\n                    toolbar.setNavigationIcon(R.drawable.ic_back_black)\n            }\n        }\n    }\n\n    override fun subscribeListeners() {\n        binding.apply {\n            fab.setOnClickListener {\n                if (sharedViewModel.state.activePosses != null){\n                    viewModel.onPosClick()\n                } else {\n                    val dialog = DialogBuilderHelper.showDialogChoice(this@HomeActivity,\n                        getString(R.string.belum_buka_kasir), getString(R.string.msg_info_belum_buka_kasir_pos),\n                        getString(R.string.buka_kasir), {\n                            navController.navigate(R.id.detailBukaKasirFragment)\n                            it.dismiss()\n                        },\n                        getString(R.string.tutup))\n                    dialog.show(supportFragmentManager, \"\")\n                }\n            }\n            navController.addOnDestinationChangedListener { _, destination, _ ->\n                setVisibilityBottom(\n                    destination.id == R.id.berandaFragment ||\n                            destination.id == R.id.analasisiSesiFragment ||\n                            destination.id == R.id.transaksiPenjualanFragment ||\n                            destination.id == R.id.lainnyaFragment ||\n                            destination.id == R.id.aturModalDialogBuilder\n                )\n            }\n        }\n    }\n\n    override fun subscribeObservers() {\n        lifecycleScope.launch {\n            repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.event.collect {\n                    when(it){\n                        HomeViewModel.UIEvent.NavigateToPos -> {\n                            navController.navigate(R.id.mainActivity)\n                        }\n                    }\n                }\n            }\n        }\n        lifecycleScope.launch {\n            lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED){\n                viewModel.posModeState.collect {\n\n                }\n            }\n        }\n    }\n\n    override fun onSupportNavigateUp(): Boolean {\n        val navController = findNavController(R.id.initialHostFragment)\n        return navController.navigateUp() || super.onSupportNavigateUp()\n    }\n\n    fun setVisibilityBottom(isShow : Boolean){\n        binding.apply {\n            if(isShow) {\n                val param = mainHostFragment.layoutParams as ViewGroup.MarginLayoutParams\n                param.bottomMargin = bottomAppBar.height\n                mainHostFragment.layoutParams = param\n                bottomAppBar.visible()\n                fab.visible()\n\n            } else {\n                val param = mainHostFragment.layoutParams as ViewGroup.MarginLayoutParams\n                param.bottomMargin = 0\n                mainHostFragment.layoutParams = param\n                bottomAppBar.gone()\n                fab.gone()\n            }\n        }\n    }\n\n//    override fun onBackPressed() {\n//        when(navController.currentDestination?.id){\n//            else -> super.onBackPressed()\n//        }\n//    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/home/HomeActivity.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/home/HomeActivity.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/home/HomeActivity.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/home/HomeActivity.kt	(date 1670395676527)
@@ -4,6 +4,7 @@
 import android.view.ViewGroup
 import androidx.activity.viewModels
 import androidx.appcompat.widget.Toolbar
+import androidx.core.content.ContextCompat
 import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.lifecycleScope
 import androidx.lifecycle.repeatOnLifecycle
@@ -57,8 +58,14 @@
             NavigationUI.setupWithNavController(bottomNav, navController)
             findViewById<Toolbar>(R.id.toolbar).setupWithNavController(navController, appBarConfiguration)
             navController.addOnDestinationChangedListener { _, _, _ ->
-                if(navController.currentDestination?.id != R.id.berandaFragment)
-                    toolbar.setNavigationIcon(R.drawable.ic_back_black)
+                if(navController.currentDestination?.id == R.id.berandaFragment || navController.currentDestination?.id == R.id.aturModalDialogBuilder)
+                    toolbar.navigationIcon = null
+                else
+                    toolbar.navigationIcon = ContextCompat.getDrawable(this@HomeActivity, R.drawable.ic_back_black)
+
+                toolbar.setNavigationOnClickListener {
+                    super.onBackPressed()
+                }
             }
         }
     }
Index: app/src/main/java/com/bits/bee/bpmc/domain/repository/SaleRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.domain.repository\n\nimport androidx.paging.PagingData\nimport com.bits.bee.bpmc.data.data_source.remote.model.LineChartData\nimport com.bits.bee.bpmc.domain.model.Channel\nimport com.bits.bee.bpmc.domain.model.Sale\nimport com.bits.bee.bpmc.utils.Resource\nimport kotlinx.coroutines.flow.Flow\nimport java.math.BigDecimal\n\n/**\n * Created by aldi on 20/05/22.\n */\ninterface SaleRepository {\n\n    suspend fun addSale(sale : Sale) : Long\n\n    suspend fun deleteSale(sale : Sale)\n\n    suspend fun updateSale(sale : Sale)\n\n    fun getLatestSaleList(query : String, isDraft : Boolean, channelList : List<Int>, startDate : Long, endDate : Long) : Flow<PagingData<Sale>>\n\n    fun getLatestDraftList() : Flow<List<Sale>>\n\n    fun getSaleByPosses(id: Int) : Flow<List<Sale>>\n\n    fun getSaleByPosses(id: Int, isVoid : Boolean, termType : String) : Flow<List<Sale>>\n\n    fun getTotalNota(id: Int): Flow<BigDecimal>\n\n    fun getTotalNotaVoid(id: Int): Flow<BigDecimal>\n\n    fun getTotalPaidTunai(id: Int): Flow<BigDecimal>\n\n    fun getTotalPaidDebit(id: Int): Flow<BigDecimal>\n\n    fun getTotalPaidKredit(id: Int): Flow<BigDecimal>\n\n    fun getTotalPaidGopay(id: Int): Flow<BigDecimal>\n\n    fun getSaleHaventUploaded(limit_trx: Long, saledlist: List<Int>): Flow<List<Sale>>\n\n    suspend fun updateNewIdCust(oldIdCust: Int, idCust: Int)\n\n    fun getSaleById(id: Int): Flow<Sale>\n\n    fun getSaleNotUploaded(): Flow<List<Sale>>\n\n    fun sumQtyByHour(id: Int, hour: String): Flow<LineChartData>\n\n    fun getSaleByPossesGroupByBp(id: Int): Flow<List<Sale>>\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/domain/repository/SaleRepository.kt b/app/src/main/java/com/bits/bee/bpmc/domain/repository/SaleRepository.kt
--- a/app/src/main/java/com/bits/bee/bpmc/domain/repository/SaleRepository.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/domain/repository/SaleRepository.kt	(date 1670382146511)
@@ -25,6 +25,8 @@
 
     fun getSaleByPosses(id: Int) : Flow<List<Sale>>
 
+    fun getSaleByPossesGroupChannel(id: Int) : Flow<List<Sale>>
+
     fun getSaleByPosses(id: Int, isVoid : Boolean, termType : String) : Flow<List<Sale>>
 
     fun getTotalNota(id: Int): Flow<BigDecimal>
Index: app/src/main/res/navigation/home_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/main_graph\"\n    app:startDestination=\"@id/berandaFragment\">\n\n    <fragment\n        tools:layout=\"@layout/fragment_setting_list\"\n        android:id=\"@+id/settingListFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.setting_list.SettingListFragment\"\n        android:label=\"@string/pengaturan\" >\n        <action\n            android:id=\"@+id/action_settingListFragment_to_initialActivity2\"\n            app:destination=\"@id/initialActivity\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_beranda\"\n        android:id=\"@+id/berandaFragment\"\n        android:label=\"\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.beranda.BerandaFragment\">\n\n        <action\n            android:id=\"@+id/action_berandaFragment_to_detailTutupKasirFragment\"\n            app:destination=\"@id/detailTutupKasirFragment\" />\n        <action\n            android:id=\"@+id/action_berandaFragment_to_aturModalDialogBuilder\"\n            app:destination=\"@id/aturModalDialogBuilder\" />\n        <action\n            android:id=\"@+id/action_berandaFragment_to_detailBukaKasirFragment\"\n            app:destination=\"@id/detailBukaKasirFragment\" />\n    </fragment>\n    <activity\n        tools:layout=\"@layout/activity_main\"\n        android:id=\"@+id/mainActivity\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.pos.MainActivity\"/>\n    <fragment\n        android:id=\"@+id/settingFavProdukFragment\"\n        tools:layout=\"@layout/fragment_setting_fav_produk\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.setting_favorite.setting_fav_produk.SettingFavProdukFragment\"\n        android:label=\"@string/favorit\" />\n    <fragment\n        tools:layout=\"@layout/fragment_analisa_sesi\"\n        android:id=\"@+id/analasisiSesiFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.analisis_sesi.AnalisaSesiFragment\"\n        android:label=\"@string/analisa_sesi\" >\n\n        <action\n            android:id=\"@+id/action_analasisiSesiFragment_to_riwayatSesiFragment\"\n            app:destination=\"@id/riwayatSesiFragment\" />\n        <action\n            android:id=\"@+id/action_analasisiSesiFragment_to_detailBukaKasirFragment\"\n            app:destination=\"@id/detailBukaKasirFragment\" />\n        <argument\n            android:name=\"posses\"\n            app:argType=\"string\" />\n        <argument\n            android:name=\"isRiwayat\"\n            app:argType=\"boolean\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_transaksi_penjualan\"\n        android:id=\"@+id/transaksiPenjualanFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.transaksi_penjualan.TransaksiPenjualanFragment\"\n        android:label=\"@string/transaksi_penjualan\" >\n        <action\n            android:id=\"@+id/action_transaksiPenjualanFragment_to_detailTransaksiPenjualanFragment\"\n            app:destination=\"@id/detailTransaksiPenjualanFragment\" />\n        <action\n            android:id=\"@+id/action_transaksiPenjualanFragment_to_hapusTransaksiDialog\"\n            app:destination=\"@id/hapusTransaksiDialog\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_detail_tutup_kasir\"\n        android:id=\"@+id/detailTutupKasirFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.tutup_kasir.DetailTutupKasirFragment\"\n        android:label=\"@string/kasir\" >\n        <action\n            android:id=\"@+id/action_detailTutupKasirFragment_to_rekapSesiFragment\"\n            app:destination=\"@id/rekapSesiFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_lainnya\"\n        android:id=\"@+id/lainnyaFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.lainnya.LainnyaFragment\"\n        android:label=\"@string/lainnya\" >\n        <action\n            android:id=\"@+id/action_lainnyaFragment_to_settingListFragment\"\n            app:destination=\"@id/settingListFragment\" />\n        <action\n            android:id=\"@+id/action_lainnyaFragment_to_uploadManualFragment\"\n            app:destination=\"@id/uploadManualFragment\" />\n        <action\n            android:id=\"@+id/action_lainnyaFragment_to_rekapKasFragment\"\n            app:destination=\"@id/rekapKasFragment\" />\n        <action\n            android:id=\"@+id/action_lainnyaFragment_to_rekapProdukFragment\"\n            app:destination=\"@id/rekapProdukFragment\" />\n        <action\n            android:id=\"@+id/action_lainnyaFragment_to_cekStokFragment\"\n            app:destination=\"@id/cekStokFragment\" />\n        <action\n            android:id=\"@+id/action_lainnyaFragment_to_insightKelolaProdukFragment\"\n            app:destination=\"@id/insightKelolaProdukFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_upload_manual\"\n        android:id=\"@+id/uploadManualFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.upload_manual.UploadManualFragment\"\n        android:label=\"@string/upload_manual\" />\n    <fragment\n        tools:layout=\"@layout/fragment_rekap_kas\"\n        android:id=\"@+id/rekapKasFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.rekap_kas.RekapKasFragment\"\n        android:label=\"@string/rekap_kas\" />\n    <fragment\n        tools:layout=\"@layout/fragment_rekap_produk\"\n        android:id=\"@+id/rekapProdukFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.rekap_produk.RekapProdukFragment\"\n        android:label=\"@string/rekap_produk\" >\n        <action\n            android:id=\"@+id/action_rekapProdukFragment_to_detailProdukFragment\"\n            app:destination=\"@id/detailProdukFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_cek_stok\"\n        android:id=\"@+id/cekStokFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.cek_stok.CekStokFragment\"\n        android:label=\"@string/cek_stok\" />\n\n    <dialog\n        tools:layout=\"@layout/dialog_atur_modal_kasir\"\n        android:id=\"@+id/aturModalDialogBuilder\"\n        android:name=\"com.bits.bee.bpmc.presentation.dialog.atur_modal.AturModalDialogBuilder\"\n        android:label=\"AturModalDialogBuilder\" >\n        <argument\n            android:name=\"cashier\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Cashier\" />\n        <argument\n            android:name=\"branch\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Branch\" />\n        <argument\n            android:name=\"shift\"\n            app:argType=\"integer\" />\n        <action\n            android:id=\"@+id/action_aturModalDialogBuilder_to_insightPresetKasirFragment\"\n            app:destination=\"@id/insightPresetKasirFragment\" />\n    </dialog>\n\n    <fragment\n        tools:layout=\"@layout/fragment_detail_buka_kasir\"\n        android:id=\"@+id/detailBukaKasirFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.buka_kasir.DetailBukaKasirFragment\"\n        android:label=\"@string/kasir\" >\n        <action\n            android:id=\"@+id/action_detailBukaKasirFragment_to_mainActivity\"\n            app:destination=\"@id/mainActivity\" />\n        <action\n            android:id=\"@+id/action_detailBukaKasirFragment_to_insightPresetKasirFragment\"\n            app:destination=\"@id/insightPresetKasirFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_detail_transaksi_penjualan\"\n        android:id=\"@+id/detailTransaksiPenjualanFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.detail_transaksi_penjualan.DetailTransaksiPenjualanFragment\"\n        android:label=\"\" >\n        <argument\n            android:name=\"sale\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Sale\" />\n        <action\n            android:id=\"@+id/action_detailTransaksiPenjualanFragment_to_hapusTransaksiDialog\"\n            app:destination=\"@id/hapusTransaksiDialog\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_rekap_sesi\"\n        android:id=\"@+id/rekapSesiFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.rekap_sesi_kasir.RekapSesiFragment\"\n        android:label=\"\" >\n        <action\n            android:id=\"@+id/action_rekapSesiFragment_to_detailSesiKasirFragment\"\n            app:destination=\"@id/detailSesiKasirFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_detail_rekap_sesi\"\n        android:id=\"@+id/detailSesiKasirFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.detail_sesi_kasir.DetailSesiKasirFragment\"\n        android:label=\"\" >\n        <argument\n            android:name=\"posses\"\n            app:argType=\"string\" />\n        <action\n            android:id=\"@+id/action_detailSesiKasirFragment_to_detailPendapatanDialog\"\n            app:destination=\"@id/detailPendapatanDialog\" />\n    </fragment>\n    <dialog\n        tools:layout=\"@layout/dialog_detail_pendapatan\"\n        android:id=\"@+id/detailPendapatanDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.dialog.detail_pendapatan.DetailPendapatanDialog\"\n        android:label=\"DetailPendapatanDialog\" />\n    <fragment\n        tools:layout=\"@layout/fragment_riwayat_sesi\"\n        android:id=\"@+id/riwayatSesiFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.riwayat_sesi.RiwayatSesiFragment\"\n        android:label=\"@string/riwayat_sesi\" >\n\n        <action\n            android:id=\"@+id/action_riwayatSesiFragment_to_detailRiwayatSesiFragment\"\n            app:destination=\"@id/detailRiwayatSesiFragment\" />\n    </fragment>\n    <fragment\n        tools:layout=\"@layout/fragment_detail_riwayat_sesi\"\n        android:id=\"@+id/detailRiwayatSesiFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.detail_riwayat_sesi.DetailRiwayatSesiFragment\"\n        android:label=\"@string/detail_riwayat_sesi\" >\n\n        <argument\n            android:name=\"posses\"\n            app:argType=\"string\" />\n        <action\n            android:id=\"@+id/action_detailRiwayatSesiFragment_to_detailPendapatanDialog\"\n            app:destination=\"@id/detailPendapatanDialog\" />\n        <action\n            android:id=\"@+id/action_detailRiwayatSesiFragment_to_analasisiSesiFragment\"\n            app:destination=\"@id/analasisiSesiFragment\" />\n    </fragment>\n    <activity\n        android:id=\"@+id/initialActivity\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.initial.InitialActivity\"\n        android:label=\"InitialActivity\" />\n    <fragment\n        tools:layout=\"@layout/fragment_insight_preset_kasir\"\n        android:id=\"@+id/insightPresetKasirFragment\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.insight_preset_kasir.InsightPresetKasirFragment\"\n        android:label=\"@string/ubah_nilai_kasir\" />\n    <fragment\n        android:id=\"@+id/insightKelolaProdukFragment\"\n        tools:layout=\"@layout/fragment_insight_kelola_produk\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.insight_kelola_produk.InsightKelolaProdukFragment\"\n        android:label=\"@string/kelola_produk\" />\n    <dialog\n        tools:layout=\"@layout/fragment_hak_akses\"\n        android:id=\"@+id/hakAksesFragment2\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.hak_akses.HakAksesFragment\"\n        android:label=\"HakAksesFragment\" >\n        <argument\n            android:name=\"acsType\"\n            app:argType=\"string\" />\n    </dialog>\n    <dialog\n        tools:layout=\"@layout/dialog_hapus_transaksi\"\n        android:id=\"@+id/hapusTransaksiDialog\"\n        android:name=\"com.bits.bee.bpmc.presentation.dialog.hapus_transaksi.HapusTransaksiDialog\"\n        android:label=\"HapusTransaksiDialog\" >\n        <argument\n            android:name=\"sale\"\n            app:argType=\"com.bits.bee.bpmc.domain.model.Sale\" />\n        <action\n            android:id=\"@+id/action_hapusTransaksiDialog_to_hakAksesFragment2\"\n            app:destination=\"@id/hakAksesFragment2\" />\n    </dialog>\n    <fragment\n        android:id=\"@+id/detailProdukFragment\"\n        tools:layout=\"@layout/fragment_detail_produk\"\n        android:name=\"com.bits.bee.bpmc.presentation.ui.rekap_produk.DetailProdukFragment\"\n        android:label=\"DetailProdukFragment\" >\n        <argument\n            android:name=\"item\"\n            app:argType=\"string\" />\n    </fragment>\n\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/home_graph.xml b/app/src/main/res/navigation/home_graph.xml
--- a/app/src/main/res/navigation/home_graph.xml	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/res/navigation/home_graph.xml	(date 1670400902612)
@@ -249,8 +249,7 @@
     <dialog
         tools:layout="@layout/dialog_hapus_transaksi"
         android:id="@+id/hapusTransaksiDialog"
-        android:name="com.bits.bee.bpmc.presentation.dialog.hapus_transaksi.HapusTransaksiDialog"
-        android:label="HapusTransaksiDialog" >
+        android:name="com.bits.bee.bpmc.presentation.dialog.hapus_transaksi.HapusTransaksiDialog">
         <argument
             android:name="sale"
             app:argType="com.bits.bee.bpmc.domain.model.Sale" />
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/otp/OtpViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.sign_up.otp\n\nimport android.os.CountDownTimer\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MediatorLiveData\nimport androidx.lifecycle.asLiveData\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.data.data_source.remote.response.SendOtpResponse\nimport com.bits.bee.bpmc.data.data_source.remote.response.VerifSmsResponse\nimport com.bits.bee.bpmc.domain.usecase.signup.PostSendOtpUseCase\nimport com.bits.bee.bpmc.domain.usecase.signup.PostVerifSmsUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.Resource\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n/**\n * Created by aldi on 30/08/22.\n */\n\n@HiltViewModel\nclass OtpViewModel @Inject constructor(\n    private val postVerifSmsUseCase: PostVerifSmsUseCase,\n    private val postSendOtpUseCase: PostSendOtpUseCase,\n) : BaseViewModel<OtpState, OtpViewModel.UIEvent>() {\n\n    init {\n        state = OtpState()\n    }\n\n    fun onInputPin(pin : String) = viewModelScope.launch {\n        if(pin.length == 4){\n            state.pin = pin\n            delay(300)\n            postVerifSms()\n        }\n    }\n\n    private var registerResponse: MediatorLiveData<Resource<VerifSmsResponse>> = MediatorLiveData()\n    fun observeVerifSmsResponse() = registerResponse as LiveData<Resource<VerifSmsResponse>>\n\n    fun postVerifSms() = viewModelScope.launch {\n        val source = postVerifSmsUseCase(state.pin, state.regId).asLiveData()\n        registerResponse.addSource(source){\n            if (it != null) {\n                registerResponse.value = it\n                if (it.status !== Resource.Status.LOADING) {\n                    registerResponse.removeSource(source)\n                }\n            } else {\n                registerResponse.removeSource(source)\n            }\n        }\n    }\n\n    private var sendOtpResponse: MediatorLiveData<Resource<SendOtpResponse>> = MediatorLiveData()\n    fun observeSendOtpResponse() = sendOtpResponse as LiveData<Resource<SendOtpResponse>>\n\n    fun postSendOtp() = viewModelScope.launch {\n        if(state.isSendOtp) {\n            val source = postSendOtpUseCase(\"WA\", state.regId).asLiveData()\n            sendOtpResponse.addSource(source) {\n                if (it != null) {\n                    sendOtpResponse.value = it\n                    if (it.status !== Resource.Status.LOADING) {\n                        sendOtpResponse.removeSource(source)\n                    }\n                } else {\n                    sendOtpResponse.removeSource(source)\n                }\n            }\n            startCountDown()\n        }\n    }\n\n    fun startCountDown() {\n        val time = object : CountDownTimer(30000, 1000){\n            override fun onTick(p0: Long) {\n                updateState(\n                    state.copy(\n                        isSendOtp = false,\n                        countDown = p0\n                    )\n                )\n            }\n\n            override fun onFinish() {\n                updateState(\n                    state.copy(\n                        isSendOtp = true\n                    )\n                )\n            }\n        }\n        time.start()\n    }\n\n    fun onSuccess() = viewModelScope.launch {\n        eventChannel.send(UIEvent.NavigateToAturPin)\n    }\n\n    sealed class UIEvent {\n        object NavigateToAturPin : UIEvent()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/otp/OtpViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/otp/OtpViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/otp/OtpViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/sign_up/otp/OtpViewModel.kt	(date 1670403992225)
@@ -28,6 +28,7 @@
 
     init {
         state = OtpState()
+        startCountDown()
     }
 
     fun onInputPin(pin : String) = viewModelScope.launch {
Index: app/src/main/java/com/bits/bee/bpmc/presentation/ui/cek_stok/CekStokViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bits.bee.bpmc.presentation.ui.cek_stok\n\nimport androidx.lifecycle.viewModelScope\nimport com.bits.bee.bpmc.domain.model.Item\nimport com.bits.bee.bpmc.domain.model.Stock\nimport com.bits.bee.bpmc.domain.usecase.cek_stok.GetItemStockUseCase\nimport com.bits.bee.bpmc.domain.usecase.common.GetActiveCashierUseCase\nimport com.bits.bee.bpmc.domain.usecase.upload_manual.GetItemByIdUseCase\nimport com.bits.bee.bpmc.presentation.base.BaseViewModel\nimport com.bits.bee.bpmc.utils.Resource\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.flow.first\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass CekStokViewModel @Inject constructor(\n    private val getActiveCashierUseCase: GetActiveCashierUseCase,\n    private val getItemStockUseCase: GetItemStockUseCase,\n    private val getItemByIdUseCase: GetItemByIdUseCase,\n): BaseViewModel<CekStokState, CekStokViewModel.UIEvent>() {\n\n    private var querySearch=\"\"\n\n    init {\n        state = CekStokState()\n    }\n\n    fun loadStock() = viewModelScope.launch {\n        val cashier = getActiveCashierUseCase.invoke().first()\n        getItemStockUseCase.invoke(Integer.parseInt(\"\"+cashier!!.whId)).collectLatest {\n            when(it.status){\n                Resource.Status.LOADING -> {\n                    eventChannel.send(UIEvent.RequestWaitDialog)\n                }\n                Resource.Status.SUCCESS -> {\n                    eventChannel.send(UIEvent.HideDialog)\n                    it.data?.let {\n                        updateState(\n                            state.copy(stockList = it)\n                        )\n                    }\n                }\n                Resource.Status.ERROR -> {\n                    it.message\n                }\n                Resource.Status.NOINTERNET -> {\n                    eventChannel.send(UIEvent.NoInternetDialog)\n                }\n            }\n        }\n    }\n\n    fun initStock(list: List<Stock>) = viewModelScope.launch {\n        val itemListItm = mutableListOf<Item>()\n        var items: Item? = null\n        for (stock in list){\n            getItemByIdUseCase.invoke(stock.itemId).collect {\n                it?.let {\n                    items = it\n                }\n            }\n            itemListItm.add(items!!)\n        }\n\n        updateState(\n            state.copy(\n                itemsList = itemListItm\n            )\n        )\n\n    }\n\n    fun filterStock(query: String) = viewModelScope.launch {\n        querySearch = query\n//        val regex = \"\"\"(?i)(\"${query}\").*\"\"\".toRegex()\n        val regexx = \"(?i)($query).*\".toRegex()\n        var mItemClone = mutableListOf<Item>()\n        for (item in state.itemsList!!) {\n            if (item.name1.matches(regexx)) {\n                mItemClone.add(item)\n            }\n        }\n        updateState(\n            state.copy(\n                itemListResult = mItemClone\n            )\n        )\n    }\n\n    fun sort(desc: Boolean, data: List<Stock>) = viewModelScope.launch {\n        var items: Item? = null\n        var listSortItem = mutableListOf<Item>()\n        var listSortStock = mutableListOf<Stock>()\n        if (desc){\n            listSortStock = data.sortedByDescending { it.id }.toMutableList()\n        }else{\n            listSortStock = data.sortedBy { it.id }.toMutableList()\n        }\n\n        for (stock in listSortStock){\n            getItemByIdUseCase.invoke(stock.itemId).collect {\n                it?.let {\n                    items = it\n                }\n            }\n            listSortItem.add(items!!)\n        }\n        updateState(\n            state.copy(\n                itemsList = listSortItem\n            )\n        )\n    }\n\n    fun resetStock() = viewModelScope.launch {\n        querySearch = \"\"\n        var mItemClone = mutableListOf<Item>()\n        updateState(\n            state.copy(\n                itemListResult = mItemClone\n            )\n        )\n    }\n\n    sealed class UIEvent{\n        object RequestWaitDialog : UIEvent()\n        object HideDialog : UIEvent()\n        object NoInternetDialog : UIEvent()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/cek_stok/CekStokViewModel.kt b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/cek_stok/CekStokViewModel.kt
--- a/app/src/main/java/com/bits/bee/bpmc/presentation/ui/cek_stok/CekStokViewModel.kt	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/java/com/bits/bee/bpmc/presentation/ui/cek_stok/CekStokViewModel.kt	(date 1670384937851)
@@ -46,6 +46,7 @@
                     it.message
                 }
                 Resource.Status.NOINTERNET -> {
+                    eventChannel.send(UIEvent.HideDialog)
                     eventChannel.send(UIEvent.NoInternetDialog)
                 }
             }
Index: app/src/main/res/layout/fragment_ulangi_pin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:padding=\"@dimen/size24\">\n\n    <TextView\n        android:id=\"@+id/textView2\"\n        android:layout_width=\"@dimen/size0\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/ulangi_pin\"\n        style=\"@style/TextHeader\"\n        android:textSize=\"@dimen/default_text_header_size\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/textView3\"\n        android:layout_width=\"@dimen/size0\"\n        android:layout_height=\"wrap_content\"\n        android:textColor=\"@color/dark_gray\"\n        android:layout_marginTop=\"@dimen/size6\"\n        android:text=\"@string/pin_konfirmasi\"\n        app:layout_constraintStart_toStartOf=\"@+id/textView2\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView2\" />\n\n    <com.chaos.view.PinView\n        android:id=\"@+id/pinView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"@dimen/size45\"\n        android:layout_marginTop=\"@dimen/size56\"\n        android:itemBackground=\"@drawable/bg_rect_light_gray\"\n        app:itemCount=\"6\"\n        app:itemWidth=\"@dimen/size45\"\n        android:textSize=\"@dimen/font16\"\n        android:inputType=\"number\"\n        style=\"@style/PinWidget.PinView\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView3\"\n        app:lineColor=\"@color/light_gray\"/>\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout17\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"@dimen/size16\"\n        android:gravity=\"center\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/pinView\">\n\n        <ImageView\n            android:id=\"@+id/ivEye\"\n            android:layout_width=\"@dimen/size24\"\n            android:layout_height=\"@dimen/size24\"\n            android:src=\"@drawable/ic_eye_slash\" />\n\n        <TextView\n            android:id=\"@+id/textView4\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"21dp\"\n            android:layout_marginStart=\"@dimen/size8\"\n            android:layout_weight=\"1\"\n            android:gravity=\"left\"\n            android:text=\"@string/tampil_pin\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\" />\n\n    </LinearLayout>\n\n    <com.bits.bee.bpmc.presentation.custom.CustomNumpadPin\n        android:id=\"@+id/numpad\"\n        android:layout_width=\"@dimen/size0\"\n        android:layout_marginTop=\"@dimen/size45\"\n        android:layout_height=\"@dimen/size0\"\n        app:layout_constraintBottom_toTopOf=\"@+id/btn_simpan_pin\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        android:layout_marginBottom=\"@dimen/size16\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout17\" />\n\n    <Button\n        android:id=\"@+id/btn_simpan_pin\"\n        android:background=\"@drawable/btn_rect_primary\"\n        android:layout_width=\"@dimen/size0\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/btn_simpan_pin\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_ulangi_pin.xml b/app/src/main/res/layout/fragment_ulangi_pin.xml
--- a/app/src/main/res/layout/fragment_ulangi_pin.xml	(revision 76a035f5559fbd150d0494fdf99c687c90584737)
+++ b/app/src/main/res/layout/fragment_ulangi_pin.xml	(date 1670312045933)
@@ -75,22 +75,12 @@
     <com.bits.bee.bpmc.presentation.custom.CustomNumpadPin
         android:id="@+id/numpad"
         android:layout_width="@dimen/size0"
+        android:layout_height="@dimen/size0"
         android:layout_marginTop="@dimen/size45"
-        android:layout_height="@dimen/size0"
-        app:layout_constraintBottom_toTopOf="@+id/btn_simpan_pin"
+        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        android:layout_marginBottom="@dimen/size16"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/linearLayout17" />
 
-    <Button
-        android:id="@+id/btn_simpan_pin"
-        android:background="@drawable/btn_rect_primary"
-        android:layout_width="@dimen/size0"
-        android:layout_height="wrap_content"
-        android:text="@string/btn_simpan_pin"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
