// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import com.google.android.material.radiobutton.MaterialRadioButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRadioDatepickerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clFilter;

  @NonNull
  public final ConstraintLayout clRadio;

  @NonNull
  public final EditText etNamaDevice;

  @NonNull
  public final MaterialRadioButton materialRadioButton;

  private ItemRadioDatepickerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clFilter, @NonNull ConstraintLayout clRadio,
      @NonNull EditText etNamaDevice, @NonNull MaterialRadioButton materialRadioButton) {
    this.rootView = rootView;
    this.clFilter = clFilter;
    this.clRadio = clRadio;
    this.etNamaDevice = etNamaDevice;
    this.materialRadioButton = materialRadioButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRadioDatepickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRadioDatepickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_radio_datepicker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRadioDatepickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cl_filter;
      ConstraintLayout clFilter = ViewBindings.findChildViewById(rootView, id);
      if (clFilter == null) {
        break missingId;
      }

      ConstraintLayout clRadio = (ConstraintLayout) rootView;

      id = R.id.etNamaDevice;
      EditText etNamaDevice = ViewBindings.findChildViewById(rootView, id);
      if (etNamaDevice == null) {
        break missingId;
      }

      id = R.id.materialRadioButton;
      MaterialRadioButton materialRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (materialRadioButton == null) {
        break missingId;
      }

      return new ItemRadioDatepickerBinding((ConstraintLayout) rootView, clFilter, clRadio,
          etNamaDevice, materialRadioButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
