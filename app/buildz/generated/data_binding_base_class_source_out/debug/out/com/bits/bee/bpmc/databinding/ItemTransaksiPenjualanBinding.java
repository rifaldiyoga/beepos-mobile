// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTransaksiPenjualanBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clContent;

  @NonNull
  public final LinearLayout linearLayout15;

  @NonNull
  public final TextView tvChannel;

  @NonNull
  public final TextView tvJam;

  @NonNull
  public final TextView tvNamaCust;

  @NonNull
  public final TextView tvTotal;

  @NonNull
  public final View view11;

  private ItemTransaksiPenjualanBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clContent, @NonNull LinearLayout linearLayout15,
      @NonNull TextView tvChannel, @NonNull TextView tvJam, @NonNull TextView tvNamaCust,
      @NonNull TextView tvTotal, @NonNull View view11) {
    this.rootView = rootView;
    this.clContent = clContent;
    this.linearLayout15 = linearLayout15;
    this.tvChannel = tvChannel;
    this.tvJam = tvJam;
    this.tvNamaCust = tvNamaCust;
    this.tvTotal = tvTotal;
    this.view11 = view11;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTransaksiPenjualanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTransaksiPenjualanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_transaksi_penjualan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTransaksiPenjualanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout clContent = (ConstraintLayout) rootView;

      id = R.id.linearLayout15;
      LinearLayout linearLayout15 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout15 == null) {
        break missingId;
      }

      id = R.id.tvChannel;
      TextView tvChannel = ViewBindings.findChildViewById(rootView, id);
      if (tvChannel == null) {
        break missingId;
      }

      id = R.id.tvJam;
      TextView tvJam = ViewBindings.findChildViewById(rootView, id);
      if (tvJam == null) {
        break missingId;
      }

      id = R.id.tvNamaCust;
      TextView tvNamaCust = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaCust == null) {
        break missingId;
      }

      id = R.id.tvTotal;
      TextView tvTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvTotal == null) {
        break missingId;
      }

      id = R.id.view11;
      View view11 = ViewBindings.findChildViewById(rootView, id);
      if (view11 == null) {
        break missingId;
      }

      return new ItemTransaksiPenjualanBinding((ConstraintLayout) rootView, clContent,
          linearLayout15, tvChannel, tvJam, tvNamaCust, tvTotal, view11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
