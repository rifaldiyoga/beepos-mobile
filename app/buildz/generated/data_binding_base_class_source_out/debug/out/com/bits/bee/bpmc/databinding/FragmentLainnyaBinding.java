// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLainnyaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout clCekStok;

  @NonNull
  public final ConstraintLayout clKelolaProduk;

  @NonNull
  public final ConstraintLayout clPengaturan;

  @NonNull
  public final ConstraintLayout clPerbaruiData;

  @NonNull
  public final ConstraintLayout clRekapKas;

  @NonNull
  public final ConstraintLayout clRekapProduk;

  @NonNull
  public final ConstraintLayout clUploadManual;

  @NonNull
  public final LinearLayout linearLayout10;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final LinearLayout linearLayout7;

  @NonNull
  public final LinearLayout linearLayout8;

  @NonNull
  public final LinearLayout linearLayout9;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView textView24;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textView27;

  private FragmentLainnyaBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout clCekStok, @NonNull ConstraintLayout clKelolaProduk,
      @NonNull ConstraintLayout clPengaturan, @NonNull ConstraintLayout clPerbaruiData,
      @NonNull ConstraintLayout clRekapKas, @NonNull ConstraintLayout clRekapProduk,
      @NonNull ConstraintLayout clUploadManual, @NonNull LinearLayout linearLayout10,
      @NonNull LinearLayout linearLayout4, @NonNull LinearLayout linearLayout5,
      @NonNull LinearLayout linearLayout6, @NonNull LinearLayout linearLayout7,
      @NonNull LinearLayout linearLayout8, @NonNull LinearLayout linearLayout9,
      @NonNull TextView textView21, @NonNull TextView textView22, @NonNull TextView textView23,
      @NonNull TextView textView24, @NonNull TextView textView25, @NonNull TextView textView27) {
    this.rootView = rootView;
    this.clCekStok = clCekStok;
    this.clKelolaProduk = clKelolaProduk;
    this.clPengaturan = clPengaturan;
    this.clPerbaruiData = clPerbaruiData;
    this.clRekapKas = clRekapKas;
    this.clRekapProduk = clRekapProduk;
    this.clUploadManual = clUploadManual;
    this.linearLayout10 = linearLayout10;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.linearLayout6 = linearLayout6;
    this.linearLayout7 = linearLayout7;
    this.linearLayout8 = linearLayout8;
    this.linearLayout9 = linearLayout9;
    this.textView21 = textView21;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.textView24 = textView24;
    this.textView25 = textView25;
    this.textView27 = textView27;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLainnyaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLainnyaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lainnya, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLainnyaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clCekStok;
      ConstraintLayout clCekStok = ViewBindings.findChildViewById(rootView, id);
      if (clCekStok == null) {
        break missingId;
      }

      id = R.id.clKelolaProduk;
      ConstraintLayout clKelolaProduk = ViewBindings.findChildViewById(rootView, id);
      if (clKelolaProduk == null) {
        break missingId;
      }

      id = R.id.clPengaturan;
      ConstraintLayout clPengaturan = ViewBindings.findChildViewById(rootView, id);
      if (clPengaturan == null) {
        break missingId;
      }

      id = R.id.clPerbaruiData;
      ConstraintLayout clPerbaruiData = ViewBindings.findChildViewById(rootView, id);
      if (clPerbaruiData == null) {
        break missingId;
      }

      id = R.id.clRekapKas;
      ConstraintLayout clRekapKas = ViewBindings.findChildViewById(rootView, id);
      if (clRekapKas == null) {
        break missingId;
      }

      id = R.id.clRekapProduk;
      ConstraintLayout clRekapProduk = ViewBindings.findChildViewById(rootView, id);
      if (clRekapProduk == null) {
        break missingId;
      }

      id = R.id.clUploadManual;
      ConstraintLayout clUploadManual = ViewBindings.findChildViewById(rootView, id);
      if (clUploadManual == null) {
        break missingId;
      }

      id = R.id.linearLayout10;
      LinearLayout linearLayout10 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout10 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.linearLayout7;
      LinearLayout linearLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout7 == null) {
        break missingId;
      }

      id = R.id.linearLayout8;
      LinearLayout linearLayout8 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout8 == null) {
        break missingId;
      }

      id = R.id.linearLayout9;
      LinearLayout linearLayout9 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout9 == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.textView24;
      TextView textView24 = ViewBindings.findChildViewById(rootView, id);
      if (textView24 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      return new FragmentLainnyaBinding((LinearLayout) rootView, clCekStok, clKelolaProduk,
          clPengaturan, clPerbaruiData, clRekapKas, clRekapProduk, clUploadManual, linearLayout10,
          linearLayout4, linearLayout5, linearLayout6, linearLayout7, linearLayout8, linearLayout9,
          textView21, textView22, textView23, textView24, textView25, textView27);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
