// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInsightPidBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox bpCbPajak;

  @NonNull
  public final TextView fragmentInvoiceBtnBatal;

  @NonNull
  public final TextView fragmentInvoiceBtnDraft;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout rLAndaTertarik;

  @NonNull
  public final LinearLayout rLBtnBottom;

  @NonNull
  public final LinearLayout rLCocok;

  @NonNull
  public final LinearLayout rLDefine;

  @NonNull
  public final LinearLayout rLFungsi;

  @NonNull
  public final LinearLayout rLTop;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView txtCocok;

  @NonNull
  public final TextView txtDefine;

  @NonNull
  public final TextView txtFungsi;

  @NonNull
  public final TextView txtTertarik;

  @NonNull
  public final TextView txtTitle;

  @NonNull
  public final TextView txtTitle2;

  @NonNull
  public final TextView txtTitle3;

  @NonNull
  public final TextView txtTitle4;

  private FragmentInsightPidBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox bpCbPajak,
      @NonNull TextView fragmentInvoiceBtnBatal, @NonNull TextView fragmentInvoiceBtnDraft,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout rLAndaTertarik,
      @NonNull LinearLayout rLBtnBottom, @NonNull LinearLayout rLCocok,
      @NonNull LinearLayout rLDefine, @NonNull LinearLayout rLFungsi, @NonNull LinearLayout rLTop,
      @NonNull TextView textView2, @NonNull TextView txtCocok, @NonNull TextView txtDefine,
      @NonNull TextView txtFungsi, @NonNull TextView txtTertarik, @NonNull TextView txtTitle,
      @NonNull TextView txtTitle2, @NonNull TextView txtTitle3, @NonNull TextView txtTitle4) {
    this.rootView = rootView;
    this.bpCbPajak = bpCbPajak;
    this.fragmentInvoiceBtnBatal = fragmentInvoiceBtnBatal;
    this.fragmentInvoiceBtnDraft = fragmentInvoiceBtnDraft;
    this.linearLayout = linearLayout;
    this.rLAndaTertarik = rLAndaTertarik;
    this.rLBtnBottom = rLBtnBottom;
    this.rLCocok = rLCocok;
    this.rLDefine = rLDefine;
    this.rLFungsi = rLFungsi;
    this.rLTop = rLTop;
    this.textView2 = textView2;
    this.txtCocok = txtCocok;
    this.txtDefine = txtDefine;
    this.txtFungsi = txtFungsi;
    this.txtTertarik = txtTertarik;
    this.txtTitle = txtTitle;
    this.txtTitle2 = txtTitle2;
    this.txtTitle3 = txtTitle3;
    this.txtTitle4 = txtTitle4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInsightPidBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInsightPidBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_insight_pid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInsightPidBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bp_cbPajak;
      CheckBox bpCbPajak = ViewBindings.findChildViewById(rootView, id);
      if (bpCbPajak == null) {
        break missingId;
      }

      id = R.id.fragment_invoice_btnBatal;
      TextView fragmentInvoiceBtnBatal = ViewBindings.findChildViewById(rootView, id);
      if (fragmentInvoiceBtnBatal == null) {
        break missingId;
      }

      id = R.id.fragment_invoice_btnDraft;
      TextView fragmentInvoiceBtnDraft = ViewBindings.findChildViewById(rootView, id);
      if (fragmentInvoiceBtnDraft == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.rL_anda_tertarik;
      LinearLayout rLAndaTertarik = ViewBindings.findChildViewById(rootView, id);
      if (rLAndaTertarik == null) {
        break missingId;
      }

      id = R.id.rL_btn_bottom;
      LinearLayout rLBtnBottom = ViewBindings.findChildViewById(rootView, id);
      if (rLBtnBottom == null) {
        break missingId;
      }

      id = R.id.rL_cocok;
      LinearLayout rLCocok = ViewBindings.findChildViewById(rootView, id);
      if (rLCocok == null) {
        break missingId;
      }

      id = R.id.rL_define;
      LinearLayout rLDefine = ViewBindings.findChildViewById(rootView, id);
      if (rLDefine == null) {
        break missingId;
      }

      id = R.id.rL_fungsi;
      LinearLayout rLFungsi = ViewBindings.findChildViewById(rootView, id);
      if (rLFungsi == null) {
        break missingId;
      }

      id = R.id.rL_top;
      LinearLayout rLTop = ViewBindings.findChildViewById(rootView, id);
      if (rLTop == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.txtCocok;
      TextView txtCocok = ViewBindings.findChildViewById(rootView, id);
      if (txtCocok == null) {
        break missingId;
      }

      id = R.id.txtDefine;
      TextView txtDefine = ViewBindings.findChildViewById(rootView, id);
      if (txtDefine == null) {
        break missingId;
      }

      id = R.id.txtFungsi;
      TextView txtFungsi = ViewBindings.findChildViewById(rootView, id);
      if (txtFungsi == null) {
        break missingId;
      }

      id = R.id.txtTertarik;
      TextView txtTertarik = ViewBindings.findChildViewById(rootView, id);
      if (txtTertarik == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      id = R.id.txtTitle2;
      TextView txtTitle2 = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle2 == null) {
        break missingId;
      }

      id = R.id.txtTitle3;
      TextView txtTitle3 = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle3 == null) {
        break missingId;
      }

      id = R.id.txtTitle4;
      TextView txtTitle4 = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle4 == null) {
        break missingId;
      }

      return new FragmentInsightPidBinding((ConstraintLayout) rootView, bpCbPajak,
          fragmentInvoiceBtnBatal, fragmentInvoiceBtnDraft, linearLayout, rLAndaTertarik,
          rLBtnBottom, rLCocok, rLDefine, rLFungsi, rLTop, textView2, txtCocok, txtDefine,
          txtFungsi, txtTertarik, txtTitle, txtTitle2, txtTitle3, txtTitle4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
