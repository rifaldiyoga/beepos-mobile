// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutNumpadPinBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button numpadBtn0;

  @NonNull
  public final Button numpadBtn1;

  @NonNull
  public final Button numpadBtn2;

  @NonNull
  public final Button numpadBtn3;

  @NonNull
  public final Button numpadBtn4;

  @NonNull
  public final Button numpadBtn5;

  @NonNull
  public final Button numpadBtn6;

  @NonNull
  public final Button numpadBtn7;

  @NonNull
  public final Button numpadBtn8;

  @NonNull
  public final Button numpadBtn9;

  @NonNull
  public final ImageButton numpadBtnDelete;

  @NonNull
  public final View numpadBtnEmpty;

  private LayoutNumpadPinBinding(@NonNull LinearLayout rootView, @NonNull Button numpadBtn0,
      @NonNull Button numpadBtn1, @NonNull Button numpadBtn2, @NonNull Button numpadBtn3,
      @NonNull Button numpadBtn4, @NonNull Button numpadBtn5, @NonNull Button numpadBtn6,
      @NonNull Button numpadBtn7, @NonNull Button numpadBtn8, @NonNull Button numpadBtn9,
      @NonNull ImageButton numpadBtnDelete, @NonNull View numpadBtnEmpty) {
    this.rootView = rootView;
    this.numpadBtn0 = numpadBtn0;
    this.numpadBtn1 = numpadBtn1;
    this.numpadBtn2 = numpadBtn2;
    this.numpadBtn3 = numpadBtn3;
    this.numpadBtn4 = numpadBtn4;
    this.numpadBtn5 = numpadBtn5;
    this.numpadBtn6 = numpadBtn6;
    this.numpadBtn7 = numpadBtn7;
    this.numpadBtn8 = numpadBtn8;
    this.numpadBtn9 = numpadBtn9;
    this.numpadBtnDelete = numpadBtnDelete;
    this.numpadBtnEmpty = numpadBtnEmpty;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutNumpadPinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutNumpadPinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_numpad_pin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutNumpadPinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.numpad_btn0;
      Button numpadBtn0 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn0 == null) {
        break missingId;
      }

      id = R.id.numpad_btn1;
      Button numpadBtn1 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn1 == null) {
        break missingId;
      }

      id = R.id.numpad_btn2;
      Button numpadBtn2 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn2 == null) {
        break missingId;
      }

      id = R.id.numpad_btn3;
      Button numpadBtn3 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn3 == null) {
        break missingId;
      }

      id = R.id.numpad_btn4;
      Button numpadBtn4 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn4 == null) {
        break missingId;
      }

      id = R.id.numpad_btn5;
      Button numpadBtn5 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn5 == null) {
        break missingId;
      }

      id = R.id.numpad_btn6;
      Button numpadBtn6 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn6 == null) {
        break missingId;
      }

      id = R.id.numpad_btn7;
      Button numpadBtn7 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn7 == null) {
        break missingId;
      }

      id = R.id.numpad_btn8;
      Button numpadBtn8 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn8 == null) {
        break missingId;
      }

      id = R.id.numpad_btn9;
      Button numpadBtn9 = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtn9 == null) {
        break missingId;
      }

      id = R.id.numpad_btnDelete;
      ImageButton numpadBtnDelete = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtnDelete == null) {
        break missingId;
      }

      id = R.id.numpad_btnEmpty;
      View numpadBtnEmpty = ViewBindings.findChildViewById(rootView, id);
      if (numpadBtnEmpty == null) {
        break missingId;
      }

      return new LayoutNumpadPinBinding((LinearLayout) rootView, numpadBtn0, numpadBtn1, numpadBtn2,
          numpadBtn3, numpadBtn4, numpadBtn5, numpadBtn6, numpadBtn7, numpadBtn8, numpadBtn9,
          numpadBtnDelete, numpadBtnEmpty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
