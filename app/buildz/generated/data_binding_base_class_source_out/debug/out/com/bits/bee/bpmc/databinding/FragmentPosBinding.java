// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.bits.bee.bpmc.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPosBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnTambahBaru;

  @NonNull
  public final ConstraintLayout clContent;

  @NonNull
  public final FloatingActionButton fabTambahBaru;

  @NonNull
  public final FragmentContainerView fragmentInvoice;

  @NonNull
  public final Group groupFnB;

  @NonNull
  public final Group groupRetail;

  @NonNull
  public final ImageView image1;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final LinearLayout llNext;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView textView44;

  @NonNull
  public final TextView tvQty;

  @NonNull
  public final TextView tvSubtotal;

  @NonNull
  public final ViewPager2 viewPager;

  private FragmentPosBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnTambahBaru,
      @NonNull ConstraintLayout clContent, @NonNull FloatingActionButton fabTambahBaru,
      @NonNull FragmentContainerView fragmentInvoice, @NonNull Group groupFnB,
      @NonNull Group groupRetail, @NonNull ImageView image1, @NonNull ImageView imageView7,
      @NonNull LinearLayout llNext, @NonNull TabLayout tabLayout, @NonNull TextView textView44,
      @NonNull TextView tvQty, @NonNull TextView tvSubtotal, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.btnTambahBaru = btnTambahBaru;
    this.clContent = clContent;
    this.fabTambahBaru = fabTambahBaru;
    this.fragmentInvoice = fragmentInvoice;
    this.groupFnB = groupFnB;
    this.groupRetail = groupRetail;
    this.image1 = image1;
    this.imageView7 = imageView7;
    this.llNext = llNext;
    this.tabLayout = tabLayout;
    this.textView44 = textView44;
    this.tvQty = tvQty;
    this.tvSubtotal = tvSubtotal;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnTambahBaru;
      Button btnTambahBaru = ViewBindings.findChildViewById(rootView, id);
      if (btnTambahBaru == null) {
        break missingId;
      }

      ConstraintLayout clContent = (ConstraintLayout) rootView;

      id = R.id.fabTambahBaru;
      FloatingActionButton fabTambahBaru = ViewBindings.findChildViewById(rootView, id);
      if (fabTambahBaru == null) {
        break missingId;
      }

      id = R.id.fragmentInvoice;
      FragmentContainerView fragmentInvoice = ViewBindings.findChildViewById(rootView, id);
      if (fragmentInvoice == null) {
        break missingId;
      }

      id = R.id.groupFnB;
      Group groupFnB = ViewBindings.findChildViewById(rootView, id);
      if (groupFnB == null) {
        break missingId;
      }

      id = R.id.groupRetail;
      Group groupRetail = ViewBindings.findChildViewById(rootView, id);
      if (groupRetail == null) {
        break missingId;
      }

      id = R.id.image1;
      ImageView image1 = ViewBindings.findChildViewById(rootView, id);
      if (image1 == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.llNext;
      LinearLayout llNext = ViewBindings.findChildViewById(rootView, id);
      if (llNext == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.textView44;
      TextView textView44 = ViewBindings.findChildViewById(rootView, id);
      if (textView44 == null) {
        break missingId;
      }

      id = R.id.tvQty;
      TextView tvQty = ViewBindings.findChildViewById(rootView, id);
      if (tvQty == null) {
        break missingId;
      }

      id = R.id.tvSubtotal;
      TextView tvSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (tvSubtotal == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentPosBinding((ConstraintLayout) rootView, btnTambahBaru, clContent,
          fabTambahBaru, fragmentInvoice, groupFnB, groupRetail, image1, imageView7, llNext,
          tabLayout, textView44, tvQty, tvSubtotal, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
