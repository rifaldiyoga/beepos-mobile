// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPosMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cdContent;

  @NonNull
  public final ImageView imageItem;

  @NonNull
  public final LinearLayout linearLayout3;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout llMinus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout llQty;

  @NonNull
  public final TextView tvHarga;

  @NonNull
  public final TextView tvNamaItem;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvQty;

  private ItemPosMenuBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull CardView cdContent, @NonNull ImageView imageItem,
      @NonNull LinearLayout linearLayout3, @Nullable LinearLayout llMinus,
      @Nullable LinearLayout llQty, @NonNull TextView tvHarga, @NonNull TextView tvNamaItem,
      @Nullable TextView tvQty) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.cdContent = cdContent;
    this.imageItem = imageItem;
    this.linearLayout3 = linearLayout3;
    this.llMinus = llMinus;
    this.llQty = llQty;
    this.tvHarga = tvHarga;
    this.tvNamaItem = tvNamaItem;
    this.tvQty = tvQty;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPosMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPosMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pos_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPosMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cdContent;
      CardView cdContent = ViewBindings.findChildViewById(rootView, id);
      if (cdContent == null) {
        break missingId;
      }

      id = R.id.imageItem;
      ImageView imageItem = ViewBindings.findChildViewById(rootView, id);
      if (imageItem == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.llMinus;
      LinearLayout llMinus = ViewBindings.findChildViewById(rootView, id);

      id = R.id.llQty;
      LinearLayout llQty = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvHarga;
      TextView tvHarga = ViewBindings.findChildViewById(rootView, id);
      if (tvHarga == null) {
        break missingId;
      }

      id = R.id.tvNamaItem;
      TextView tvNamaItem = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaItem == null) {
        break missingId;
      }

      id = R.id.tvQty;
      TextView tvQty = ViewBindings.findChildViewById(rootView, id);

      return new ItemPosMenuBinding((ConstraintLayout) rootView, cardView, cdContent, imageItem,
          linearLayout3, llMinus, llQty, tvHarga, tvNamaItem, tvQty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
