// Generated by view binder compiler. Do not edit!
package com.bits.bee.bpmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bits.bee.bpmc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPilihKasirBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clContent;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView tvNamaKasir;

  @NonNull
  public final TextView tvStatus;

  private ItemPilihKasirBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clContent, @NonNull LinearLayout linearLayout,
      @NonNull TextView tvNamaKasir, @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.clContent = clContent;
    this.linearLayout = linearLayout;
    this.tvNamaKasir = tvNamaKasir;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPilihKasirBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPilihKasirBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pilih_kasir, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPilihKasirBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout clContent = (ConstraintLayout) rootView;

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.tvNamaKasir;
      TextView tvNamaKasir = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaKasir == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ItemPilihKasirBinding((ConstraintLayout) rootView, clContent, linearLayout,
          tvNamaKasir, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
